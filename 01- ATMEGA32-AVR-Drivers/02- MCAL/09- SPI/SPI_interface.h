/*******************************************************************************/
/*   Author    : Mohamed Maged                                                 */
/*   Version   : V01                                                           */
/*   Date      : 30 October 2023                                               */
/*   Logs      : V01 : Initial creation                                        */
/*******************************************************************************/
#ifndef SPI_INTERFACE_H
#define	SPI_INTERFACE_H
/*************************************************************************************************************/
/****************************************************************************/
/**********************      SPI_INTERRUPT_t        *************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_INTERRUPT_DISABLE  = 0,
	SPI_INTERRUPT_ENABLE
}SPI_INTERRUPT_t;
/****************************************************************************/
/****************************************************************************/
/************************      SPI_MODE_t        ****************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_DISABLE  = 0,
	SPI_ENABLE
}SPI_MODE_t;
/****************************************************************************/
/****************************************************************************/
/*********************      SPI_DATA_ORDER_t        *************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_ORDER_MSB  = 0,
	SPI_ORDER_LSB
}SPI_DATA_ORDER_t;
/****************************************************************************/
/****************************************************************************/
/*****************      SPI_MASTER_SLAVE_SELECT_t        ********************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_SLAVE_MODE  = 0,
	SPI_MASTER_MODE
}SPI_MASTER_SLAVE_SELECT_t;
/****************************************************************************/
/****************************************************************************/
/********************      SPI_CLK_POLARITY_t        ************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_CLK_IDLE_LOW  = 0,
	SPI_CLK_IDLE_HIGH
}SPI_CLK_POLARITY_t;
/****************************************************************************/
/****************************************************************************/
/*********************      SPI_CLK_PHASE_t        **************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_CLK_SAMPLE_IDLE_TO_ACTIVE      = 0,
	SPI_CLK_SAMPLE_ACTIVE_TO_IDLE

}SPI_CLK_PHASE_t;
/****************************************************************************/
/****************************************************************************/
/**************************      SPI_CLK_t        ***************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_SOURCE_CLK_DIVID_BY_4  = 0 ,
	SPI_SOURCE_CLK_DIVID_BY_16     ,
	SPI_SOURCE_CLK_DIVID_BY_64     ,
	SPI_SOURCE_CLK_DIVID_BY_128    
	
}SPI_CLK_t;
/****************************************************************************/
/****************************************************************************/
/*********************      SPI_SPEED_t        **************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	SPI_CLK_NORMAL_SPEED   = 0,
	SPI_CLK_DOUBLE_SPEED  

}SPI_SPEED_t;


void M_SPI_voidInit( 
					 SPI_MODE_t                    Copy_SPI_Mode                   ,
					 SPI_INTERRUPT_t               Copy_SPI_Interrupt              ,
					 SPI_MASTER_SLAVE_SELECT_t     Copy_SPI_Select_Master_Slave    ,
					 SPI_CLK_t     				   Copy_SPI_CLK   				   ,
					 SPI_DATA_ORDER_t              Copy_SPI_Data_Order             ,
					 SPI_CLK_POLARITY_t            Copy_SPI_CPOL              	   ,
					 SPI_CLK_PHASE_t               Copy_SPI_CPHHASE                ,
					 SPI_SPEED_t                   Copy_SPI_Speed              
					 );


void M_SPI_voidTransmitByte(u8 Copy_u8TXByte);
void M_SPI_voidTransmitString(u8 * Copy_ptrTXString);
void M_SPI_voidReceiveByteSynchBlocking(u8 * Copy_u8RXByte);
void M_SPI_voidReceiveByteASynchCallBack(void (*PFun)(u8 Copy_u8RXByte));





/*************************************************************************************************************/
#endif
