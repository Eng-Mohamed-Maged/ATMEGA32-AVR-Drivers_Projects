/*******************************************************************************/
/*   Author    : Mohamed Maged                                                 */
/*   Version   : V01                                                           */
/*   Date      : 31 October 2023                                               */
/*   Logs      : V01 : Initial creation                                        */
/*******************************************************************************/
#ifndef I2C_INTERFACE_H
#define	I2C_INTERFACE_H
/*************************************************************************************************************/
/****************************************************************************/
/***************************      I2C_MODE_t        *************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	I2C_DISABLE  = 0,
	I2C_ENABLE
}I2C_MODE_t;

/****************************************************************************/
/**********************      I2C_PRESCALER_t        *************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	I2C_NO_PRESCALER  = 0,    
}I2C_PRESCALER_t;


/****************************************************************************/
/***************************      I2C_MODE_t        *************************/
/****************************************************************************/
/****************************************************************************/
typedef enum
{
	I2C_CLK_SPEED_400K  = 12,    
	I2C_CLK_SPEED_100K  = 72   
}I2C_CLK_t;
/****************************************************************************/
/**********************      I2C_INTERRUPT_t        *************************/
/****************************************************************************/
/****************************************************************************/

typedef enum
{
	I2C_INTERRUPT_DISABLE  = 0,
	I2C_INTERRUPT_ENABLE
}I2C_INTERRUPT_t;
/****************************************************************************/
/********************      I2C_GENRATION_CALL_t        **********************/
/****************************************************************************/
/****************************************************************************/

typedef enum
{
	I2C_GENERAL_CALL_DISABLE  = 0,
	I2C_GENERAL_CALL_ENABLE
}I2C_GENRATION_CALL_t;
/****************************************************************************/
/*               Enums for Transmitter and Reciever                         */
/****************************************************************************/
typedef enum
{
	I2C_ERROR                                = 0   ,
	I2C_MT_MR_START_CONDITION                = 0x08,
	I2C_MT_MR_REPEATED_START_CONDITION       = 0x10,
	I2C_MT_SLA_W_ACK                         = 0x18,
	I2C_MT_SLA_W_NACK                        = 0x20,
	I2C_MT_DATA_ACK                          = 0x28,
	I2C_MT_DATA_NACK                         = 0x30,
	I2C_MT_MR_ARBITRATION_LOST               = 0x38,
	I2C_MR_SLA_R_ACK                         = 0x40,
	I2C_MR_SLA_R_NACK                        = 0x48,
	I2C_MR_DATA_ACK                          = 0x50,
	I2C_MR_DATA_NACK                         = 0x58,
 }I2C_STATUS_t;
/****************************************************************************/
/****************************************************************************/
void M_I2C_voidInit(I2C_MODE_t              Copy_I2C_MODE       ,
					I2C_INTERRUPT_t         Copy_I2C_INTERRUPT  ,
					I2C_PRESCALER_t         Copy_I2C_PRESCALER  ,
					I2C_CLK_t               Copy_I2C_CLOCK      ,
					I2C_GENRATION_CALL_t    Copy_I2C_GCALL 
					);

/****************************************************************************/
/****************************************************************************/
void M_I2C_voidSendByte(u8 Copy_u8TXByte);
/****************************************************************************/
/****************************************************************************/
void M_I2C_voidSendStart_Condition(void);
/****************************************************************************/
/****************************************************************************/
void M_I2C_voidSendStop_Condition(void);
/****************************************************************************/
/****************************************************************************/
void M_I2C_voidReceiveByte_ACK(u8 * Copy_Byte_ACK);
/****************************************************************************/
/****************************************************************************/
void M_I2C_voidReceiveByte_NOACK(u8 * Copy_Byte_NOACK);
/****************************************************************************/
void M_I2C_voidGetStatus(I2C_STATUS_t * Copy_Status);
/****************************************************************************/


/*************************************************************************************************************/
#endif
