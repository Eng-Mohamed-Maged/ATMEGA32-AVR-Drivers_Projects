
NTI_KeyPad_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000277a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  0000277a  0000280e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800078  00800078  00002826  2**0
                  ALLOC
  3 .stab         00001aa0  00000000  00000000  00002828  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000f65  00000000  00000000  000042c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  0000522d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  0000536d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  000054dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00007126  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00008011  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008f20  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  000091ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000997b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e7       	ldi	r30, 0x7A	; 122
      68:	f7 e2       	ldi	r31, 0x27	; 39
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 37       	cpi	r26, 0x78	; 120
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a8 e7       	ldi	r26, 0x78	; 120
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 37       	cpi	r26, 0x79	; 121
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 5a 13 	call	0x26b4	; 0x26b4 <main>
      8a:	0c 94 bb 13 	jmp	0x2776	; 0x2776 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 84 13 	jmp	0x2708	; 0x2708 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 a0 13 	jmp	0x2740	; 0x2740 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 90 13 	jmp	0x2720	; 0x2720 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 ac 13 	jmp	0x2758	; 0x2758 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 90 13 	jmp	0x2720	; 0x2720 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 ac 13 	jmp	0x2758	; 0x2758 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 84 13 	jmp	0x2708	; 0x2708 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 a0 13 	jmp	0x2740	; 0x2740 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 90 13 	jmp	0x2720	; 0x2720 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 ac 13 	jmp	0x2758	; 0x2758 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 90 13 	jmp	0x2720	; 0x2720 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 ac 13 	jmp	0x2758	; 0x2758 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 90 13 	jmp	0x2720	; 0x2720 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 ac 13 	jmp	0x2758	; 0x2758 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 94 13 	jmp	0x2728	; 0x2728 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 b0 13 	jmp	0x2760	; 0x2760 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <DIO_voidSetPinDirection>:
#include "../inc/DIO_config.h"
#include "../inc/DIO_interface.h"
#include "../inc/DIO_private.h"

void DIO_voidSetPinDirection(PORT_t Copy_PortId,PIN_t Copy_PinId,DIRECTION_t Copy_Direction)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	2d 97       	sbiw	r28, 0x0d	; 13
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	de bf       	out	0x3e, r29	; 62
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	cd bf       	out	0x3d, r28	; 61
     b5a:	89 83       	std	Y+1, r24	; 0x01
     b5c:	6a 83       	std	Y+2, r22	; 0x02
     b5e:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_PortId)
     b60:	89 81       	ldd	r24, Y+1	; 0x01
     b62:	28 2f       	mov	r18, r24
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	3d 87       	std	Y+13, r19	; 0x0d
     b68:	2c 87       	std	Y+12, r18	; 0x0c
     b6a:	8c 85       	ldd	r24, Y+12	; 0x0c
     b6c:	9d 85       	ldd	r25, Y+13	; 0x0d
     b6e:	81 30       	cpi	r24, 0x01	; 1
     b70:	91 05       	cpc	r25, r1
     b72:	09 f4       	brne	.+2      	; 0xb76 <DIO_voidSetPinDirection+0x30>
     b74:	b8 c0       	rjmp	.+368    	; 0xce6 <DIO_voidSetPinDirection+0x1a0>
     b76:	2c 85       	ldd	r18, Y+12	; 0x0c
     b78:	3d 85       	ldd	r19, Y+13	; 0x0d
     b7a:	22 30       	cpi	r18, 0x02	; 2
     b7c:	31 05       	cpc	r19, r1
     b7e:	2c f4       	brge	.+10     	; 0xb8a <DIO_voidSetPinDirection+0x44>
     b80:	8c 85       	ldd	r24, Y+12	; 0x0c
     b82:	9d 85       	ldd	r25, Y+13	; 0x0d
     b84:	00 97       	sbiw	r24, 0x00	; 0
     b86:	71 f0       	breq	.+28     	; 0xba4 <DIO_voidSetPinDirection+0x5e>
     b88:	90 c2       	rjmp	.+1312   	; 0x10aa <DIO_voidSetPinDirection+0x564>
     b8a:	2c 85       	ldd	r18, Y+12	; 0x0c
     b8c:	3d 85       	ldd	r19, Y+13	; 0x0d
     b8e:	22 30       	cpi	r18, 0x02	; 2
     b90:	31 05       	cpc	r19, r1
     b92:	09 f4       	brne	.+2      	; 0xb96 <DIO_voidSetPinDirection+0x50>
     b94:	49 c1       	rjmp	.+658    	; 0xe28 <DIO_voidSetPinDirection+0x2e2>
     b96:	8c 85       	ldd	r24, Y+12	; 0x0c
     b98:	9d 85       	ldd	r25, Y+13	; 0x0d
     b9a:	83 30       	cpi	r24, 0x03	; 3
     b9c:	91 05       	cpc	r25, r1
     b9e:	09 f4       	brne	.+2      	; 0xba2 <DIO_voidSetPinDirection+0x5c>
     ba0:	e4 c1       	rjmp	.+968    	; 0xf6a <DIO_voidSetPinDirection+0x424>
     ba2:	83 c2       	rjmp	.+1286   	; 0x10aa <DIO_voidSetPinDirection+0x564>
	{
		case PORT_A:
			switch(Copy_PinId)
     ba4:	8a 81       	ldd	r24, Y+2	; 0x02
     ba6:	28 2f       	mov	r18, r24
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	3b 87       	std	Y+11, r19	; 0x0b
     bac:	2a 87       	std	Y+10, r18	; 0x0a
     bae:	8a 85       	ldd	r24, Y+10	; 0x0a
     bb0:	9b 85       	ldd	r25, Y+11	; 0x0b
     bb2:	83 30       	cpi	r24, 0x03	; 3
     bb4:	91 05       	cpc	r25, r1
     bb6:	09 f4       	brne	.+2      	; 0xbba <DIO_voidSetPinDirection+0x74>
     bb8:	51 c0       	rjmp	.+162    	; 0xc5c <DIO_voidSetPinDirection+0x116>
     bba:	2a 85       	ldd	r18, Y+10	; 0x0a
     bbc:	3b 85       	ldd	r19, Y+11	; 0x0b
     bbe:	24 30       	cpi	r18, 0x04	; 4
     bc0:	31 05       	cpc	r19, r1
     bc2:	7c f4       	brge	.+30     	; 0xbe2 <DIO_voidSetPinDirection+0x9c>
     bc4:	8a 85       	ldd	r24, Y+10	; 0x0a
     bc6:	9b 85       	ldd	r25, Y+11	; 0x0b
     bc8:	81 30       	cpi	r24, 0x01	; 1
     bca:	91 05       	cpc	r25, r1
     bcc:	71 f1       	breq	.+92     	; 0xc2a <DIO_voidSetPinDirection+0xe4>
     bce:	2a 85       	ldd	r18, Y+10	; 0x0a
     bd0:	3b 85       	ldd	r19, Y+11	; 0x0b
     bd2:	22 30       	cpi	r18, 0x02	; 2
     bd4:	31 05       	cpc	r19, r1
     bd6:	ac f5       	brge	.+106    	; 0xc42 <DIO_voidSetPinDirection+0xfc>
     bd8:	8a 85       	ldd	r24, Y+10	; 0x0a
     bda:	9b 85       	ldd	r25, Y+11	; 0x0b
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	d1 f0       	breq	.+52     	; 0xc14 <DIO_voidSetPinDirection+0xce>
     be0:	64 c2       	rjmp	.+1224   	; 0x10aa <DIO_voidSetPinDirection+0x564>
     be2:	2a 85       	ldd	r18, Y+10	; 0x0a
     be4:	3b 85       	ldd	r19, Y+11	; 0x0b
     be6:	25 30       	cpi	r18, 0x05	; 5
     be8:	31 05       	cpc	r19, r1
     bea:	09 f4       	brne	.+2      	; 0xbee <DIO_voidSetPinDirection+0xa8>
     bec:	52 c0       	rjmp	.+164    	; 0xc92 <DIO_voidSetPinDirection+0x14c>
     bee:	8a 85       	ldd	r24, Y+10	; 0x0a
     bf0:	9b 85       	ldd	r25, Y+11	; 0x0b
     bf2:	85 30       	cpi	r24, 0x05	; 5
     bf4:	91 05       	cpc	r25, r1
     bf6:	0c f4       	brge	.+2      	; 0xbfa <DIO_voidSetPinDirection+0xb4>
     bf8:	3f c0       	rjmp	.+126    	; 0xc78 <DIO_voidSetPinDirection+0x132>
     bfa:	2a 85       	ldd	r18, Y+10	; 0x0a
     bfc:	3b 85       	ldd	r19, Y+11	; 0x0b
     bfe:	26 30       	cpi	r18, 0x06	; 6
     c00:	31 05       	cpc	r19, r1
     c02:	09 f4       	brne	.+2      	; 0xc06 <DIO_voidSetPinDirection+0xc0>
     c04:	54 c0       	rjmp	.+168    	; 0xcae <DIO_voidSetPinDirection+0x168>
     c06:	8a 85       	ldd	r24, Y+10	; 0x0a
     c08:	9b 85       	ldd	r25, Y+11	; 0x0b
     c0a:	87 30       	cpi	r24, 0x07	; 7
     c0c:	91 05       	cpc	r25, r1
     c0e:	09 f4       	brne	.+2      	; 0xc12 <DIO_voidSetPinDirection+0xcc>
     c10:	5d c0       	rjmp	.+186    	; 0xccc <DIO_voidSetPinDirection+0x186>
     c12:	4b c2       	rjmp	.+1174   	; 0x10aa <DIO_voidSetPinDirection+0x564>
			{
				case PIN_0 :
						DIO->DDRA.Bit.B0 = Copy_Direction;
     c14:	e0 e3       	ldi	r30, 0x30	; 48
     c16:	f0 e0       	ldi	r31, 0x00	; 0
     c18:	8b 81       	ldd	r24, Y+3	; 0x03
     c1a:	81 70       	andi	r24, 0x01	; 1
     c1c:	98 2f       	mov	r25, r24
     c1e:	91 70       	andi	r25, 0x01	; 1
     c20:	82 85       	ldd	r24, Z+10	; 0x0a
     c22:	8e 7f       	andi	r24, 0xFE	; 254
     c24:	89 2b       	or	r24, r25
     c26:	82 87       	std	Z+10, r24	; 0x0a
     c28:	40 c2       	rjmp	.+1152   	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_1 :
						DIO->DDRA.Bit.B1 = Copy_Direction;
     c2a:	e0 e3       	ldi	r30, 0x30	; 48
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	8b 81       	ldd	r24, Y+3	; 0x03
     c30:	81 70       	andi	r24, 0x01	; 1
     c32:	81 70       	andi	r24, 0x01	; 1
     c34:	98 2f       	mov	r25, r24
     c36:	99 0f       	add	r25, r25
     c38:	82 85       	ldd	r24, Z+10	; 0x0a
     c3a:	8d 7f       	andi	r24, 0xFD	; 253
     c3c:	89 2b       	or	r24, r25
     c3e:	82 87       	std	Z+10, r24	; 0x0a
     c40:	34 c2       	rjmp	.+1128   	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_2 :
						DIO->DDRA.Bit.B2 = Copy_Direction;
     c42:	e0 e3       	ldi	r30, 0x30	; 48
     c44:	f0 e0       	ldi	r31, 0x00	; 0
     c46:	8b 81       	ldd	r24, Y+3	; 0x03
     c48:	81 70       	andi	r24, 0x01	; 1
     c4a:	81 70       	andi	r24, 0x01	; 1
     c4c:	98 2f       	mov	r25, r24
     c4e:	99 0f       	add	r25, r25
     c50:	99 0f       	add	r25, r25
     c52:	82 85       	ldd	r24, Z+10	; 0x0a
     c54:	8b 7f       	andi	r24, 0xFB	; 251
     c56:	89 2b       	or	r24, r25
     c58:	82 87       	std	Z+10, r24	; 0x0a
     c5a:	27 c2       	rjmp	.+1102   	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_3 :
						DIO->DDRA.Bit.B3 = Copy_Direction;
     c5c:	e0 e3       	ldi	r30, 0x30	; 48
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	8b 81       	ldd	r24, Y+3	; 0x03
     c62:	81 70       	andi	r24, 0x01	; 1
     c64:	81 70       	andi	r24, 0x01	; 1
     c66:	98 2f       	mov	r25, r24
     c68:	99 0f       	add	r25, r25
     c6a:	99 0f       	add	r25, r25
     c6c:	99 0f       	add	r25, r25
     c6e:	82 85       	ldd	r24, Z+10	; 0x0a
     c70:	87 7f       	andi	r24, 0xF7	; 247
     c72:	89 2b       	or	r24, r25
     c74:	82 87       	std	Z+10, r24	; 0x0a
     c76:	19 c2       	rjmp	.+1074   	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_4 :
						DIO->DDRA.Bit.B4 = Copy_Direction;
     c78:	e0 e3       	ldi	r30, 0x30	; 48
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	8b 81       	ldd	r24, Y+3	; 0x03
     c7e:	81 70       	andi	r24, 0x01	; 1
     c80:	81 70       	andi	r24, 0x01	; 1
     c82:	98 2f       	mov	r25, r24
     c84:	92 95       	swap	r25
     c86:	90 7f       	andi	r25, 0xF0	; 240
     c88:	82 85       	ldd	r24, Z+10	; 0x0a
     c8a:	8f 7e       	andi	r24, 0xEF	; 239
     c8c:	89 2b       	or	r24, r25
     c8e:	82 87       	std	Z+10, r24	; 0x0a
     c90:	0c c2       	rjmp	.+1048   	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_5 :
						DIO->DDRA.Bit.B5 = Copy_Direction;
     c92:	e0 e3       	ldi	r30, 0x30	; 48
     c94:	f0 e0       	ldi	r31, 0x00	; 0
     c96:	8b 81       	ldd	r24, Y+3	; 0x03
     c98:	81 70       	andi	r24, 0x01	; 1
     c9a:	81 70       	andi	r24, 0x01	; 1
     c9c:	98 2f       	mov	r25, r24
     c9e:	92 95       	swap	r25
     ca0:	99 0f       	add	r25, r25
     ca2:	90 7e       	andi	r25, 0xE0	; 224
     ca4:	82 85       	ldd	r24, Z+10	; 0x0a
     ca6:	8f 7d       	andi	r24, 0xDF	; 223
     ca8:	89 2b       	or	r24, r25
     caa:	82 87       	std	Z+10, r24	; 0x0a
     cac:	fe c1       	rjmp	.+1020   	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_6 :
						DIO->DDRA.Bit.B6 = Copy_Direction;
     cae:	e0 e3       	ldi	r30, 0x30	; 48
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	8b 81       	ldd	r24, Y+3	; 0x03
     cb4:	81 70       	andi	r24, 0x01	; 1
     cb6:	81 70       	andi	r24, 0x01	; 1
     cb8:	98 2f       	mov	r25, r24
     cba:	92 95       	swap	r25
     cbc:	99 0f       	add	r25, r25
     cbe:	99 0f       	add	r25, r25
     cc0:	90 7c       	andi	r25, 0xC0	; 192
     cc2:	82 85       	ldd	r24, Z+10	; 0x0a
     cc4:	8f 7b       	andi	r24, 0xBF	; 191
     cc6:	89 2b       	or	r24, r25
     cc8:	82 87       	std	Z+10, r24	; 0x0a
     cca:	ef c1       	rjmp	.+990    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_7 :
						DIO->DDRA.Bit.B7 = Copy_Direction;
     ccc:	e0 e3       	ldi	r30, 0x30	; 48
     cce:	f0 e0       	ldi	r31, 0x00	; 0
     cd0:	8b 81       	ldd	r24, Y+3	; 0x03
     cd2:	81 70       	andi	r24, 0x01	; 1
     cd4:	98 2f       	mov	r25, r24
     cd6:	97 95       	ror	r25
     cd8:	99 27       	eor	r25, r25
     cda:	97 95       	ror	r25
     cdc:	82 85       	ldd	r24, Z+10	; 0x0a
     cde:	8f 77       	andi	r24, 0x7F	; 127
     ce0:	89 2b       	or	r24, r25
     ce2:	82 87       	std	Z+10, r24	; 0x0a
     ce4:	e2 c1       	rjmp	.+964    	; 0x10aa <DIO_voidSetPinDirection+0x564>
				default: break;
			}
			break;

		case PORT_B:
			switch(Copy_PinId)
     ce6:	8a 81       	ldd	r24, Y+2	; 0x02
     ce8:	28 2f       	mov	r18, r24
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	39 87       	std	Y+9, r19	; 0x09
     cee:	28 87       	std	Y+8, r18	; 0x08
     cf0:	88 85       	ldd	r24, Y+8	; 0x08
     cf2:	99 85       	ldd	r25, Y+9	; 0x09
     cf4:	83 30       	cpi	r24, 0x03	; 3
     cf6:	91 05       	cpc	r25, r1
     cf8:	09 f4       	brne	.+2      	; 0xcfc <DIO_voidSetPinDirection+0x1b6>
     cfa:	51 c0       	rjmp	.+162    	; 0xd9e <DIO_voidSetPinDirection+0x258>
     cfc:	28 85       	ldd	r18, Y+8	; 0x08
     cfe:	39 85       	ldd	r19, Y+9	; 0x09
     d00:	24 30       	cpi	r18, 0x04	; 4
     d02:	31 05       	cpc	r19, r1
     d04:	7c f4       	brge	.+30     	; 0xd24 <DIO_voidSetPinDirection+0x1de>
     d06:	88 85       	ldd	r24, Y+8	; 0x08
     d08:	99 85       	ldd	r25, Y+9	; 0x09
     d0a:	81 30       	cpi	r24, 0x01	; 1
     d0c:	91 05       	cpc	r25, r1
     d0e:	71 f1       	breq	.+92     	; 0xd6c <DIO_voidSetPinDirection+0x226>
     d10:	28 85       	ldd	r18, Y+8	; 0x08
     d12:	39 85       	ldd	r19, Y+9	; 0x09
     d14:	22 30       	cpi	r18, 0x02	; 2
     d16:	31 05       	cpc	r19, r1
     d18:	ac f5       	brge	.+106    	; 0xd84 <DIO_voidSetPinDirection+0x23e>
     d1a:	88 85       	ldd	r24, Y+8	; 0x08
     d1c:	99 85       	ldd	r25, Y+9	; 0x09
     d1e:	00 97       	sbiw	r24, 0x00	; 0
     d20:	d1 f0       	breq	.+52     	; 0xd56 <DIO_voidSetPinDirection+0x210>
     d22:	c3 c1       	rjmp	.+902    	; 0x10aa <DIO_voidSetPinDirection+0x564>
     d24:	28 85       	ldd	r18, Y+8	; 0x08
     d26:	39 85       	ldd	r19, Y+9	; 0x09
     d28:	25 30       	cpi	r18, 0x05	; 5
     d2a:	31 05       	cpc	r19, r1
     d2c:	09 f4       	brne	.+2      	; 0xd30 <DIO_voidSetPinDirection+0x1ea>
     d2e:	52 c0       	rjmp	.+164    	; 0xdd4 <DIO_voidSetPinDirection+0x28e>
     d30:	88 85       	ldd	r24, Y+8	; 0x08
     d32:	99 85       	ldd	r25, Y+9	; 0x09
     d34:	85 30       	cpi	r24, 0x05	; 5
     d36:	91 05       	cpc	r25, r1
     d38:	0c f4       	brge	.+2      	; 0xd3c <DIO_voidSetPinDirection+0x1f6>
     d3a:	3f c0       	rjmp	.+126    	; 0xdba <DIO_voidSetPinDirection+0x274>
     d3c:	28 85       	ldd	r18, Y+8	; 0x08
     d3e:	39 85       	ldd	r19, Y+9	; 0x09
     d40:	26 30       	cpi	r18, 0x06	; 6
     d42:	31 05       	cpc	r19, r1
     d44:	09 f4       	brne	.+2      	; 0xd48 <DIO_voidSetPinDirection+0x202>
     d46:	54 c0       	rjmp	.+168    	; 0xdf0 <DIO_voidSetPinDirection+0x2aa>
     d48:	88 85       	ldd	r24, Y+8	; 0x08
     d4a:	99 85       	ldd	r25, Y+9	; 0x09
     d4c:	87 30       	cpi	r24, 0x07	; 7
     d4e:	91 05       	cpc	r25, r1
     d50:	09 f4       	brne	.+2      	; 0xd54 <DIO_voidSetPinDirection+0x20e>
     d52:	5d c0       	rjmp	.+186    	; 0xe0e <DIO_voidSetPinDirection+0x2c8>
     d54:	aa c1       	rjmp	.+852    	; 0x10aa <DIO_voidSetPinDirection+0x564>
			{
				case PIN_0 :
						DIO->DDRB.Bit.B0 = Copy_Direction;
     d56:	e0 e3       	ldi	r30, 0x30	; 48
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	8b 81       	ldd	r24, Y+3	; 0x03
     d5c:	81 70       	andi	r24, 0x01	; 1
     d5e:	98 2f       	mov	r25, r24
     d60:	91 70       	andi	r25, 0x01	; 1
     d62:	87 81       	ldd	r24, Z+7	; 0x07
     d64:	8e 7f       	andi	r24, 0xFE	; 254
     d66:	89 2b       	or	r24, r25
     d68:	87 83       	std	Z+7, r24	; 0x07
     d6a:	9f c1       	rjmp	.+830    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_1 :
						DIO->DDRB.Bit.B1 = Copy_Direction;
     d6c:	e0 e3       	ldi	r30, 0x30	; 48
     d6e:	f0 e0       	ldi	r31, 0x00	; 0
     d70:	8b 81       	ldd	r24, Y+3	; 0x03
     d72:	81 70       	andi	r24, 0x01	; 1
     d74:	81 70       	andi	r24, 0x01	; 1
     d76:	98 2f       	mov	r25, r24
     d78:	99 0f       	add	r25, r25
     d7a:	87 81       	ldd	r24, Z+7	; 0x07
     d7c:	8d 7f       	andi	r24, 0xFD	; 253
     d7e:	89 2b       	or	r24, r25
     d80:	87 83       	std	Z+7, r24	; 0x07
     d82:	93 c1       	rjmp	.+806    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_2 :
						DIO->DDRB.Bit.B2 = Copy_Direction;
     d84:	e0 e3       	ldi	r30, 0x30	; 48
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	8b 81       	ldd	r24, Y+3	; 0x03
     d8a:	81 70       	andi	r24, 0x01	; 1
     d8c:	81 70       	andi	r24, 0x01	; 1
     d8e:	98 2f       	mov	r25, r24
     d90:	99 0f       	add	r25, r25
     d92:	99 0f       	add	r25, r25
     d94:	87 81       	ldd	r24, Z+7	; 0x07
     d96:	8b 7f       	andi	r24, 0xFB	; 251
     d98:	89 2b       	or	r24, r25
     d9a:	87 83       	std	Z+7, r24	; 0x07
     d9c:	86 c1       	rjmp	.+780    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_3 :
						DIO->DDRB.Bit.B3 = Copy_Direction;
     d9e:	e0 e3       	ldi	r30, 0x30	; 48
     da0:	f0 e0       	ldi	r31, 0x00	; 0
     da2:	8b 81       	ldd	r24, Y+3	; 0x03
     da4:	81 70       	andi	r24, 0x01	; 1
     da6:	81 70       	andi	r24, 0x01	; 1
     da8:	98 2f       	mov	r25, r24
     daa:	99 0f       	add	r25, r25
     dac:	99 0f       	add	r25, r25
     dae:	99 0f       	add	r25, r25
     db0:	87 81       	ldd	r24, Z+7	; 0x07
     db2:	87 7f       	andi	r24, 0xF7	; 247
     db4:	89 2b       	or	r24, r25
     db6:	87 83       	std	Z+7, r24	; 0x07
     db8:	78 c1       	rjmp	.+752    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_4 :
						DIO->DDRB.Bit.B4 = Copy_Direction;
     dba:	e0 e3       	ldi	r30, 0x30	; 48
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	8b 81       	ldd	r24, Y+3	; 0x03
     dc0:	81 70       	andi	r24, 0x01	; 1
     dc2:	81 70       	andi	r24, 0x01	; 1
     dc4:	98 2f       	mov	r25, r24
     dc6:	92 95       	swap	r25
     dc8:	90 7f       	andi	r25, 0xF0	; 240
     dca:	87 81       	ldd	r24, Z+7	; 0x07
     dcc:	8f 7e       	andi	r24, 0xEF	; 239
     dce:	89 2b       	or	r24, r25
     dd0:	87 83       	std	Z+7, r24	; 0x07
     dd2:	6b c1       	rjmp	.+726    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_5 :
						DIO->DDRB.Bit.B5 = Copy_Direction;
     dd4:	e0 e3       	ldi	r30, 0x30	; 48
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	8b 81       	ldd	r24, Y+3	; 0x03
     dda:	81 70       	andi	r24, 0x01	; 1
     ddc:	81 70       	andi	r24, 0x01	; 1
     dde:	98 2f       	mov	r25, r24
     de0:	92 95       	swap	r25
     de2:	99 0f       	add	r25, r25
     de4:	90 7e       	andi	r25, 0xE0	; 224
     de6:	87 81       	ldd	r24, Z+7	; 0x07
     de8:	8f 7d       	andi	r24, 0xDF	; 223
     dea:	89 2b       	or	r24, r25
     dec:	87 83       	std	Z+7, r24	; 0x07
     dee:	5d c1       	rjmp	.+698    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_6 :
						DIO->DDRB.Bit.B6 = Copy_Direction;
     df0:	e0 e3       	ldi	r30, 0x30	; 48
     df2:	f0 e0       	ldi	r31, 0x00	; 0
     df4:	8b 81       	ldd	r24, Y+3	; 0x03
     df6:	81 70       	andi	r24, 0x01	; 1
     df8:	81 70       	andi	r24, 0x01	; 1
     dfa:	98 2f       	mov	r25, r24
     dfc:	92 95       	swap	r25
     dfe:	99 0f       	add	r25, r25
     e00:	99 0f       	add	r25, r25
     e02:	90 7c       	andi	r25, 0xC0	; 192
     e04:	87 81       	ldd	r24, Z+7	; 0x07
     e06:	8f 7b       	andi	r24, 0xBF	; 191
     e08:	89 2b       	or	r24, r25
     e0a:	87 83       	std	Z+7, r24	; 0x07
     e0c:	4e c1       	rjmp	.+668    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_7 :
						DIO->DDRB.Bit.B7 = Copy_Direction;
     e0e:	e0 e3       	ldi	r30, 0x30	; 48
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	8b 81       	ldd	r24, Y+3	; 0x03
     e14:	81 70       	andi	r24, 0x01	; 1
     e16:	98 2f       	mov	r25, r24
     e18:	97 95       	ror	r25
     e1a:	99 27       	eor	r25, r25
     e1c:	97 95       	ror	r25
     e1e:	87 81       	ldd	r24, Z+7	; 0x07
     e20:	8f 77       	andi	r24, 0x7F	; 127
     e22:	89 2b       	or	r24, r25
     e24:	87 83       	std	Z+7, r24	; 0x07
     e26:	41 c1       	rjmp	.+642    	; 0x10aa <DIO_voidSetPinDirection+0x564>
			}
			break;


		case PORT_C:
			switch(Copy_PinId)
     e28:	8a 81       	ldd	r24, Y+2	; 0x02
     e2a:	28 2f       	mov	r18, r24
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	3f 83       	std	Y+7, r19	; 0x07
     e30:	2e 83       	std	Y+6, r18	; 0x06
     e32:	8e 81       	ldd	r24, Y+6	; 0x06
     e34:	9f 81       	ldd	r25, Y+7	; 0x07
     e36:	83 30       	cpi	r24, 0x03	; 3
     e38:	91 05       	cpc	r25, r1
     e3a:	09 f4       	brne	.+2      	; 0xe3e <DIO_voidSetPinDirection+0x2f8>
     e3c:	51 c0       	rjmp	.+162    	; 0xee0 <DIO_voidSetPinDirection+0x39a>
     e3e:	2e 81       	ldd	r18, Y+6	; 0x06
     e40:	3f 81       	ldd	r19, Y+7	; 0x07
     e42:	24 30       	cpi	r18, 0x04	; 4
     e44:	31 05       	cpc	r19, r1
     e46:	7c f4       	brge	.+30     	; 0xe66 <DIO_voidSetPinDirection+0x320>
     e48:	8e 81       	ldd	r24, Y+6	; 0x06
     e4a:	9f 81       	ldd	r25, Y+7	; 0x07
     e4c:	81 30       	cpi	r24, 0x01	; 1
     e4e:	91 05       	cpc	r25, r1
     e50:	71 f1       	breq	.+92     	; 0xeae <DIO_voidSetPinDirection+0x368>
     e52:	2e 81       	ldd	r18, Y+6	; 0x06
     e54:	3f 81       	ldd	r19, Y+7	; 0x07
     e56:	22 30       	cpi	r18, 0x02	; 2
     e58:	31 05       	cpc	r19, r1
     e5a:	ac f5       	brge	.+106    	; 0xec6 <DIO_voidSetPinDirection+0x380>
     e5c:	8e 81       	ldd	r24, Y+6	; 0x06
     e5e:	9f 81       	ldd	r25, Y+7	; 0x07
     e60:	00 97       	sbiw	r24, 0x00	; 0
     e62:	d1 f0       	breq	.+52     	; 0xe98 <DIO_voidSetPinDirection+0x352>
     e64:	22 c1       	rjmp	.+580    	; 0x10aa <DIO_voidSetPinDirection+0x564>
     e66:	2e 81       	ldd	r18, Y+6	; 0x06
     e68:	3f 81       	ldd	r19, Y+7	; 0x07
     e6a:	25 30       	cpi	r18, 0x05	; 5
     e6c:	31 05       	cpc	r19, r1
     e6e:	09 f4       	brne	.+2      	; 0xe72 <DIO_voidSetPinDirection+0x32c>
     e70:	52 c0       	rjmp	.+164    	; 0xf16 <DIO_voidSetPinDirection+0x3d0>
     e72:	8e 81       	ldd	r24, Y+6	; 0x06
     e74:	9f 81       	ldd	r25, Y+7	; 0x07
     e76:	85 30       	cpi	r24, 0x05	; 5
     e78:	91 05       	cpc	r25, r1
     e7a:	0c f4       	brge	.+2      	; 0xe7e <DIO_voidSetPinDirection+0x338>
     e7c:	3f c0       	rjmp	.+126    	; 0xefc <DIO_voidSetPinDirection+0x3b6>
     e7e:	2e 81       	ldd	r18, Y+6	; 0x06
     e80:	3f 81       	ldd	r19, Y+7	; 0x07
     e82:	26 30       	cpi	r18, 0x06	; 6
     e84:	31 05       	cpc	r19, r1
     e86:	09 f4       	brne	.+2      	; 0xe8a <DIO_voidSetPinDirection+0x344>
     e88:	54 c0       	rjmp	.+168    	; 0xf32 <DIO_voidSetPinDirection+0x3ec>
     e8a:	8e 81       	ldd	r24, Y+6	; 0x06
     e8c:	9f 81       	ldd	r25, Y+7	; 0x07
     e8e:	87 30       	cpi	r24, 0x07	; 7
     e90:	91 05       	cpc	r25, r1
     e92:	09 f4       	brne	.+2      	; 0xe96 <DIO_voidSetPinDirection+0x350>
     e94:	5d c0       	rjmp	.+186    	; 0xf50 <DIO_voidSetPinDirection+0x40a>
     e96:	09 c1       	rjmp	.+530    	; 0x10aa <DIO_voidSetPinDirection+0x564>
			{
				case PIN_0 :
						DIO->DDRC.Bit.B0 = Copy_Direction;
     e98:	e0 e3       	ldi	r30, 0x30	; 48
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	8b 81       	ldd	r24, Y+3	; 0x03
     e9e:	81 70       	andi	r24, 0x01	; 1
     ea0:	98 2f       	mov	r25, r24
     ea2:	91 70       	andi	r25, 0x01	; 1
     ea4:	84 81       	ldd	r24, Z+4	; 0x04
     ea6:	8e 7f       	andi	r24, 0xFE	; 254
     ea8:	89 2b       	or	r24, r25
     eaa:	84 83       	std	Z+4, r24	; 0x04
     eac:	fe c0       	rjmp	.+508    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_1 :
						DIO->DDRC.Bit.B1 = Copy_Direction;
     eae:	e0 e3       	ldi	r30, 0x30	; 48
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	8b 81       	ldd	r24, Y+3	; 0x03
     eb4:	81 70       	andi	r24, 0x01	; 1
     eb6:	81 70       	andi	r24, 0x01	; 1
     eb8:	98 2f       	mov	r25, r24
     eba:	99 0f       	add	r25, r25
     ebc:	84 81       	ldd	r24, Z+4	; 0x04
     ebe:	8d 7f       	andi	r24, 0xFD	; 253
     ec0:	89 2b       	or	r24, r25
     ec2:	84 83       	std	Z+4, r24	; 0x04
     ec4:	f2 c0       	rjmp	.+484    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_2 :
						DIO->DDRC.Bit.B2 = Copy_Direction;
     ec6:	e0 e3       	ldi	r30, 0x30	; 48
     ec8:	f0 e0       	ldi	r31, 0x00	; 0
     eca:	8b 81       	ldd	r24, Y+3	; 0x03
     ecc:	81 70       	andi	r24, 0x01	; 1
     ece:	81 70       	andi	r24, 0x01	; 1
     ed0:	98 2f       	mov	r25, r24
     ed2:	99 0f       	add	r25, r25
     ed4:	99 0f       	add	r25, r25
     ed6:	84 81       	ldd	r24, Z+4	; 0x04
     ed8:	8b 7f       	andi	r24, 0xFB	; 251
     eda:	89 2b       	or	r24, r25
     edc:	84 83       	std	Z+4, r24	; 0x04
     ede:	e5 c0       	rjmp	.+458    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_3 :
						DIO->DDRC.Bit.B3 = Copy_Direction;
     ee0:	e0 e3       	ldi	r30, 0x30	; 48
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	8b 81       	ldd	r24, Y+3	; 0x03
     ee6:	81 70       	andi	r24, 0x01	; 1
     ee8:	81 70       	andi	r24, 0x01	; 1
     eea:	98 2f       	mov	r25, r24
     eec:	99 0f       	add	r25, r25
     eee:	99 0f       	add	r25, r25
     ef0:	99 0f       	add	r25, r25
     ef2:	84 81       	ldd	r24, Z+4	; 0x04
     ef4:	87 7f       	andi	r24, 0xF7	; 247
     ef6:	89 2b       	or	r24, r25
     ef8:	84 83       	std	Z+4, r24	; 0x04
     efa:	d7 c0       	rjmp	.+430    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_4 :
						DIO->DDRC.Bit.B4 = Copy_Direction;
     efc:	e0 e3       	ldi	r30, 0x30	; 48
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	8b 81       	ldd	r24, Y+3	; 0x03
     f02:	81 70       	andi	r24, 0x01	; 1
     f04:	81 70       	andi	r24, 0x01	; 1
     f06:	98 2f       	mov	r25, r24
     f08:	92 95       	swap	r25
     f0a:	90 7f       	andi	r25, 0xF0	; 240
     f0c:	84 81       	ldd	r24, Z+4	; 0x04
     f0e:	8f 7e       	andi	r24, 0xEF	; 239
     f10:	89 2b       	or	r24, r25
     f12:	84 83       	std	Z+4, r24	; 0x04
     f14:	ca c0       	rjmp	.+404    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_5 :
						DIO->DDRC.Bit.B5 = Copy_Direction;
     f16:	e0 e3       	ldi	r30, 0x30	; 48
     f18:	f0 e0       	ldi	r31, 0x00	; 0
     f1a:	8b 81       	ldd	r24, Y+3	; 0x03
     f1c:	81 70       	andi	r24, 0x01	; 1
     f1e:	81 70       	andi	r24, 0x01	; 1
     f20:	98 2f       	mov	r25, r24
     f22:	92 95       	swap	r25
     f24:	99 0f       	add	r25, r25
     f26:	90 7e       	andi	r25, 0xE0	; 224
     f28:	84 81       	ldd	r24, Z+4	; 0x04
     f2a:	8f 7d       	andi	r24, 0xDF	; 223
     f2c:	89 2b       	or	r24, r25
     f2e:	84 83       	std	Z+4, r24	; 0x04
     f30:	bc c0       	rjmp	.+376    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_6 :
						DIO->DDRC.Bit.B6 = Copy_Direction;
     f32:	e0 e3       	ldi	r30, 0x30	; 48
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	8b 81       	ldd	r24, Y+3	; 0x03
     f38:	81 70       	andi	r24, 0x01	; 1
     f3a:	81 70       	andi	r24, 0x01	; 1
     f3c:	98 2f       	mov	r25, r24
     f3e:	92 95       	swap	r25
     f40:	99 0f       	add	r25, r25
     f42:	99 0f       	add	r25, r25
     f44:	90 7c       	andi	r25, 0xC0	; 192
     f46:	84 81       	ldd	r24, Z+4	; 0x04
     f48:	8f 7b       	andi	r24, 0xBF	; 191
     f4a:	89 2b       	or	r24, r25
     f4c:	84 83       	std	Z+4, r24	; 0x04
     f4e:	ad c0       	rjmp	.+346    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_7 :
						DIO->DDRC.Bit.B7 = Copy_Direction;
     f50:	e0 e3       	ldi	r30, 0x30	; 48
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	8b 81       	ldd	r24, Y+3	; 0x03
     f56:	81 70       	andi	r24, 0x01	; 1
     f58:	98 2f       	mov	r25, r24
     f5a:	97 95       	ror	r25
     f5c:	99 27       	eor	r25, r25
     f5e:	97 95       	ror	r25
     f60:	84 81       	ldd	r24, Z+4	; 0x04
     f62:	8f 77       	andi	r24, 0x7F	; 127
     f64:	89 2b       	or	r24, r25
     f66:	84 83       	std	Z+4, r24	; 0x04
     f68:	a0 c0       	rjmp	.+320    	; 0x10aa <DIO_voidSetPinDirection+0x564>
				default: break;
			}
			break;

		case PORT_D:
			switch(Copy_PinId)
     f6a:	8a 81       	ldd	r24, Y+2	; 0x02
     f6c:	28 2f       	mov	r18, r24
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	3d 83       	std	Y+5, r19	; 0x05
     f72:	2c 83       	std	Y+4, r18	; 0x04
     f74:	8c 81       	ldd	r24, Y+4	; 0x04
     f76:	9d 81       	ldd	r25, Y+5	; 0x05
     f78:	83 30       	cpi	r24, 0x03	; 3
     f7a:	91 05       	cpc	r25, r1
     f7c:	09 f4       	brne	.+2      	; 0xf80 <DIO_voidSetPinDirection+0x43a>
     f7e:	51 c0       	rjmp	.+162    	; 0x1022 <DIO_voidSetPinDirection+0x4dc>
     f80:	2c 81       	ldd	r18, Y+4	; 0x04
     f82:	3d 81       	ldd	r19, Y+5	; 0x05
     f84:	24 30       	cpi	r18, 0x04	; 4
     f86:	31 05       	cpc	r19, r1
     f88:	7c f4       	brge	.+30     	; 0xfa8 <DIO_voidSetPinDirection+0x462>
     f8a:	8c 81       	ldd	r24, Y+4	; 0x04
     f8c:	9d 81       	ldd	r25, Y+5	; 0x05
     f8e:	81 30       	cpi	r24, 0x01	; 1
     f90:	91 05       	cpc	r25, r1
     f92:	71 f1       	breq	.+92     	; 0xff0 <DIO_voidSetPinDirection+0x4aa>
     f94:	2c 81       	ldd	r18, Y+4	; 0x04
     f96:	3d 81       	ldd	r19, Y+5	; 0x05
     f98:	22 30       	cpi	r18, 0x02	; 2
     f9a:	31 05       	cpc	r19, r1
     f9c:	ac f5       	brge	.+106    	; 0x1008 <DIO_voidSetPinDirection+0x4c2>
     f9e:	8c 81       	ldd	r24, Y+4	; 0x04
     fa0:	9d 81       	ldd	r25, Y+5	; 0x05
     fa2:	00 97       	sbiw	r24, 0x00	; 0
     fa4:	d1 f0       	breq	.+52     	; 0xfda <DIO_voidSetPinDirection+0x494>
     fa6:	81 c0       	rjmp	.+258    	; 0x10aa <DIO_voidSetPinDirection+0x564>
     fa8:	2c 81       	ldd	r18, Y+4	; 0x04
     faa:	3d 81       	ldd	r19, Y+5	; 0x05
     fac:	25 30       	cpi	r18, 0x05	; 5
     fae:	31 05       	cpc	r19, r1
     fb0:	09 f4       	brne	.+2      	; 0xfb4 <DIO_voidSetPinDirection+0x46e>
     fb2:	52 c0       	rjmp	.+164    	; 0x1058 <DIO_voidSetPinDirection+0x512>
     fb4:	8c 81       	ldd	r24, Y+4	; 0x04
     fb6:	9d 81       	ldd	r25, Y+5	; 0x05
     fb8:	85 30       	cpi	r24, 0x05	; 5
     fba:	91 05       	cpc	r25, r1
     fbc:	0c f4       	brge	.+2      	; 0xfc0 <DIO_voidSetPinDirection+0x47a>
     fbe:	3f c0       	rjmp	.+126    	; 0x103e <DIO_voidSetPinDirection+0x4f8>
     fc0:	2c 81       	ldd	r18, Y+4	; 0x04
     fc2:	3d 81       	ldd	r19, Y+5	; 0x05
     fc4:	26 30       	cpi	r18, 0x06	; 6
     fc6:	31 05       	cpc	r19, r1
     fc8:	09 f4       	brne	.+2      	; 0xfcc <DIO_voidSetPinDirection+0x486>
     fca:	54 c0       	rjmp	.+168    	; 0x1074 <DIO_voidSetPinDirection+0x52e>
     fcc:	8c 81       	ldd	r24, Y+4	; 0x04
     fce:	9d 81       	ldd	r25, Y+5	; 0x05
     fd0:	87 30       	cpi	r24, 0x07	; 7
     fd2:	91 05       	cpc	r25, r1
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <DIO_voidSetPinDirection+0x492>
     fd6:	5d c0       	rjmp	.+186    	; 0x1092 <DIO_voidSetPinDirection+0x54c>
     fd8:	68 c0       	rjmp	.+208    	; 0x10aa <DIO_voidSetPinDirection+0x564>
			{
				case PIN_0 :
						DIO->DDRD.Bit.B0 = Copy_Direction;
     fda:	e0 e3       	ldi	r30, 0x30	; 48
     fdc:	f0 e0       	ldi	r31, 0x00	; 0
     fde:	8b 81       	ldd	r24, Y+3	; 0x03
     fe0:	81 70       	andi	r24, 0x01	; 1
     fe2:	98 2f       	mov	r25, r24
     fe4:	91 70       	andi	r25, 0x01	; 1
     fe6:	81 81       	ldd	r24, Z+1	; 0x01
     fe8:	8e 7f       	andi	r24, 0xFE	; 254
     fea:	89 2b       	or	r24, r25
     fec:	81 83       	std	Z+1, r24	; 0x01
     fee:	5d c0       	rjmp	.+186    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_1 :
						DIO->DDRD.Bit.B1 = Copy_Direction;
     ff0:	e0 e3       	ldi	r30, 0x30	; 48
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
     ff4:	8b 81       	ldd	r24, Y+3	; 0x03
     ff6:	81 70       	andi	r24, 0x01	; 1
     ff8:	81 70       	andi	r24, 0x01	; 1
     ffa:	98 2f       	mov	r25, r24
     ffc:	99 0f       	add	r25, r25
     ffe:	81 81       	ldd	r24, Z+1	; 0x01
    1000:	8d 7f       	andi	r24, 0xFD	; 253
    1002:	89 2b       	or	r24, r25
    1004:	81 83       	std	Z+1, r24	; 0x01
    1006:	51 c0       	rjmp	.+162    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_2 :
						DIO->DDRD.Bit.B2 = Copy_Direction;
    1008:	e0 e3       	ldi	r30, 0x30	; 48
    100a:	f0 e0       	ldi	r31, 0x00	; 0
    100c:	8b 81       	ldd	r24, Y+3	; 0x03
    100e:	81 70       	andi	r24, 0x01	; 1
    1010:	81 70       	andi	r24, 0x01	; 1
    1012:	98 2f       	mov	r25, r24
    1014:	99 0f       	add	r25, r25
    1016:	99 0f       	add	r25, r25
    1018:	81 81       	ldd	r24, Z+1	; 0x01
    101a:	8b 7f       	andi	r24, 0xFB	; 251
    101c:	89 2b       	or	r24, r25
    101e:	81 83       	std	Z+1, r24	; 0x01
    1020:	44 c0       	rjmp	.+136    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_3 :
						DIO->DDRD.Bit.B3 = Copy_Direction;
    1022:	e0 e3       	ldi	r30, 0x30	; 48
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	8b 81       	ldd	r24, Y+3	; 0x03
    1028:	81 70       	andi	r24, 0x01	; 1
    102a:	81 70       	andi	r24, 0x01	; 1
    102c:	98 2f       	mov	r25, r24
    102e:	99 0f       	add	r25, r25
    1030:	99 0f       	add	r25, r25
    1032:	99 0f       	add	r25, r25
    1034:	81 81       	ldd	r24, Z+1	; 0x01
    1036:	87 7f       	andi	r24, 0xF7	; 247
    1038:	89 2b       	or	r24, r25
    103a:	81 83       	std	Z+1, r24	; 0x01
    103c:	36 c0       	rjmp	.+108    	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_4 :
						DIO->DDRD.Bit.B4 = Copy_Direction;
    103e:	e0 e3       	ldi	r30, 0x30	; 48
    1040:	f0 e0       	ldi	r31, 0x00	; 0
    1042:	8b 81       	ldd	r24, Y+3	; 0x03
    1044:	81 70       	andi	r24, 0x01	; 1
    1046:	81 70       	andi	r24, 0x01	; 1
    1048:	98 2f       	mov	r25, r24
    104a:	92 95       	swap	r25
    104c:	90 7f       	andi	r25, 0xF0	; 240
    104e:	81 81       	ldd	r24, Z+1	; 0x01
    1050:	8f 7e       	andi	r24, 0xEF	; 239
    1052:	89 2b       	or	r24, r25
    1054:	81 83       	std	Z+1, r24	; 0x01
    1056:	29 c0       	rjmp	.+82     	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_5 :
						DIO->DDRD.Bit.B5 = Copy_Direction;
    1058:	e0 e3       	ldi	r30, 0x30	; 48
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	8b 81       	ldd	r24, Y+3	; 0x03
    105e:	81 70       	andi	r24, 0x01	; 1
    1060:	81 70       	andi	r24, 0x01	; 1
    1062:	98 2f       	mov	r25, r24
    1064:	92 95       	swap	r25
    1066:	99 0f       	add	r25, r25
    1068:	90 7e       	andi	r25, 0xE0	; 224
    106a:	81 81       	ldd	r24, Z+1	; 0x01
    106c:	8f 7d       	andi	r24, 0xDF	; 223
    106e:	89 2b       	or	r24, r25
    1070:	81 83       	std	Z+1, r24	; 0x01
    1072:	1b c0       	rjmp	.+54     	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_6 :
						DIO->DDRD.Bit.B6 = Copy_Direction;
    1074:	e0 e3       	ldi	r30, 0x30	; 48
    1076:	f0 e0       	ldi	r31, 0x00	; 0
    1078:	8b 81       	ldd	r24, Y+3	; 0x03
    107a:	81 70       	andi	r24, 0x01	; 1
    107c:	81 70       	andi	r24, 0x01	; 1
    107e:	98 2f       	mov	r25, r24
    1080:	92 95       	swap	r25
    1082:	99 0f       	add	r25, r25
    1084:	99 0f       	add	r25, r25
    1086:	90 7c       	andi	r25, 0xC0	; 192
    1088:	81 81       	ldd	r24, Z+1	; 0x01
    108a:	8f 7b       	andi	r24, 0xBF	; 191
    108c:	89 2b       	or	r24, r25
    108e:	81 83       	std	Z+1, r24	; 0x01
    1090:	0c c0       	rjmp	.+24     	; 0x10aa <DIO_voidSetPinDirection+0x564>
						break;
				case PIN_7 :
						DIO->DDRD.Bit.B7 = Copy_Direction;
    1092:	e0 e3       	ldi	r30, 0x30	; 48
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	8b 81       	ldd	r24, Y+3	; 0x03
    1098:	81 70       	andi	r24, 0x01	; 1
    109a:	98 2f       	mov	r25, r24
    109c:	97 95       	ror	r25
    109e:	99 27       	eor	r25, r25
    10a0:	97 95       	ror	r25
    10a2:	81 81       	ldd	r24, Z+1	; 0x01
    10a4:	8f 77       	andi	r24, 0x7F	; 127
    10a6:	89 2b       	or	r24, r25
    10a8:	81 83       	std	Z+1, r24	; 0x01
						break;
				default: break;
			}
			break;
	}
}
    10aa:	2d 96       	adiw	r28, 0x0d	; 13
    10ac:	0f b6       	in	r0, 0x3f	; 63
    10ae:	f8 94       	cli
    10b0:	de bf       	out	0x3e, r29	; 62
    10b2:	0f be       	out	0x3f, r0	; 63
    10b4:	cd bf       	out	0x3d, r28	; 61
    10b6:	cf 91       	pop	r28
    10b8:	df 91       	pop	r29
    10ba:	08 95       	ret

000010bc <DIO_voidSetPinValue>:




void DIO_voidSetPinValue(PORT_t Copy_PortId,PIN_t Copy_PinId,VALUE_t Copy_Value)
{
    10bc:	df 93       	push	r29
    10be:	cf 93       	push	r28
    10c0:	cd b7       	in	r28, 0x3d	; 61
    10c2:	de b7       	in	r29, 0x3e	; 62
    10c4:	2d 97       	sbiw	r28, 0x0d	; 13
    10c6:	0f b6       	in	r0, 0x3f	; 63
    10c8:	f8 94       	cli
    10ca:	de bf       	out	0x3e, r29	; 62
    10cc:	0f be       	out	0x3f, r0	; 63
    10ce:	cd bf       	out	0x3d, r28	; 61
    10d0:	89 83       	std	Y+1, r24	; 0x01
    10d2:	6a 83       	std	Y+2, r22	; 0x02
    10d4:	4b 83       	std	Y+3, r20	; 0x03
	switch(Copy_PortId)
    10d6:	89 81       	ldd	r24, Y+1	; 0x01
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	3d 87       	std	Y+13, r19	; 0x0d
    10de:	2c 87       	std	Y+12, r18	; 0x0c
    10e0:	8c 85       	ldd	r24, Y+12	; 0x0c
    10e2:	9d 85       	ldd	r25, Y+13	; 0x0d
    10e4:	81 30       	cpi	r24, 0x01	; 1
    10e6:	91 05       	cpc	r25, r1
    10e8:	09 f4       	brne	.+2      	; 0x10ec <DIO_voidSetPinValue+0x30>
    10ea:	b8 c0       	rjmp	.+368    	; 0x125c <DIO_voidSetPinValue+0x1a0>
    10ec:	2c 85       	ldd	r18, Y+12	; 0x0c
    10ee:	3d 85       	ldd	r19, Y+13	; 0x0d
    10f0:	22 30       	cpi	r18, 0x02	; 2
    10f2:	31 05       	cpc	r19, r1
    10f4:	2c f4       	brge	.+10     	; 0x1100 <DIO_voidSetPinValue+0x44>
    10f6:	8c 85       	ldd	r24, Y+12	; 0x0c
    10f8:	9d 85       	ldd	r25, Y+13	; 0x0d
    10fa:	00 97       	sbiw	r24, 0x00	; 0
    10fc:	71 f0       	breq	.+28     	; 0x111a <DIO_voidSetPinValue+0x5e>
    10fe:	90 c2       	rjmp	.+1312   	; 0x1620 <DIO_voidSetPinValue+0x564>
    1100:	2c 85       	ldd	r18, Y+12	; 0x0c
    1102:	3d 85       	ldd	r19, Y+13	; 0x0d
    1104:	22 30       	cpi	r18, 0x02	; 2
    1106:	31 05       	cpc	r19, r1
    1108:	09 f4       	brne	.+2      	; 0x110c <DIO_voidSetPinValue+0x50>
    110a:	49 c1       	rjmp	.+658    	; 0x139e <DIO_voidSetPinValue+0x2e2>
    110c:	8c 85       	ldd	r24, Y+12	; 0x0c
    110e:	9d 85       	ldd	r25, Y+13	; 0x0d
    1110:	83 30       	cpi	r24, 0x03	; 3
    1112:	91 05       	cpc	r25, r1
    1114:	09 f4       	brne	.+2      	; 0x1118 <DIO_voidSetPinValue+0x5c>
    1116:	e4 c1       	rjmp	.+968    	; 0x14e0 <DIO_voidSetPinValue+0x424>
    1118:	83 c2       	rjmp	.+1286   	; 0x1620 <DIO_voidSetPinValue+0x564>
	{
		case PORT_A:
			switch(Copy_PinId)
    111a:	8a 81       	ldd	r24, Y+2	; 0x02
    111c:	28 2f       	mov	r18, r24
    111e:	30 e0       	ldi	r19, 0x00	; 0
    1120:	3b 87       	std	Y+11, r19	; 0x0b
    1122:	2a 87       	std	Y+10, r18	; 0x0a
    1124:	8a 85       	ldd	r24, Y+10	; 0x0a
    1126:	9b 85       	ldd	r25, Y+11	; 0x0b
    1128:	83 30       	cpi	r24, 0x03	; 3
    112a:	91 05       	cpc	r25, r1
    112c:	09 f4       	brne	.+2      	; 0x1130 <DIO_voidSetPinValue+0x74>
    112e:	51 c0       	rjmp	.+162    	; 0x11d2 <DIO_voidSetPinValue+0x116>
    1130:	2a 85       	ldd	r18, Y+10	; 0x0a
    1132:	3b 85       	ldd	r19, Y+11	; 0x0b
    1134:	24 30       	cpi	r18, 0x04	; 4
    1136:	31 05       	cpc	r19, r1
    1138:	7c f4       	brge	.+30     	; 0x1158 <DIO_voidSetPinValue+0x9c>
    113a:	8a 85       	ldd	r24, Y+10	; 0x0a
    113c:	9b 85       	ldd	r25, Y+11	; 0x0b
    113e:	81 30       	cpi	r24, 0x01	; 1
    1140:	91 05       	cpc	r25, r1
    1142:	71 f1       	breq	.+92     	; 0x11a0 <DIO_voidSetPinValue+0xe4>
    1144:	2a 85       	ldd	r18, Y+10	; 0x0a
    1146:	3b 85       	ldd	r19, Y+11	; 0x0b
    1148:	22 30       	cpi	r18, 0x02	; 2
    114a:	31 05       	cpc	r19, r1
    114c:	ac f5       	brge	.+106    	; 0x11b8 <DIO_voidSetPinValue+0xfc>
    114e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1150:	9b 85       	ldd	r25, Y+11	; 0x0b
    1152:	00 97       	sbiw	r24, 0x00	; 0
    1154:	d1 f0       	breq	.+52     	; 0x118a <DIO_voidSetPinValue+0xce>
    1156:	64 c2       	rjmp	.+1224   	; 0x1620 <DIO_voidSetPinValue+0x564>
    1158:	2a 85       	ldd	r18, Y+10	; 0x0a
    115a:	3b 85       	ldd	r19, Y+11	; 0x0b
    115c:	25 30       	cpi	r18, 0x05	; 5
    115e:	31 05       	cpc	r19, r1
    1160:	09 f4       	brne	.+2      	; 0x1164 <DIO_voidSetPinValue+0xa8>
    1162:	52 c0       	rjmp	.+164    	; 0x1208 <DIO_voidSetPinValue+0x14c>
    1164:	8a 85       	ldd	r24, Y+10	; 0x0a
    1166:	9b 85       	ldd	r25, Y+11	; 0x0b
    1168:	85 30       	cpi	r24, 0x05	; 5
    116a:	91 05       	cpc	r25, r1
    116c:	0c f4       	brge	.+2      	; 0x1170 <DIO_voidSetPinValue+0xb4>
    116e:	3f c0       	rjmp	.+126    	; 0x11ee <DIO_voidSetPinValue+0x132>
    1170:	2a 85       	ldd	r18, Y+10	; 0x0a
    1172:	3b 85       	ldd	r19, Y+11	; 0x0b
    1174:	26 30       	cpi	r18, 0x06	; 6
    1176:	31 05       	cpc	r19, r1
    1178:	09 f4       	brne	.+2      	; 0x117c <DIO_voidSetPinValue+0xc0>
    117a:	54 c0       	rjmp	.+168    	; 0x1224 <DIO_voidSetPinValue+0x168>
    117c:	8a 85       	ldd	r24, Y+10	; 0x0a
    117e:	9b 85       	ldd	r25, Y+11	; 0x0b
    1180:	87 30       	cpi	r24, 0x07	; 7
    1182:	91 05       	cpc	r25, r1
    1184:	09 f4       	brne	.+2      	; 0x1188 <DIO_voidSetPinValue+0xcc>
    1186:	5d c0       	rjmp	.+186    	; 0x1242 <DIO_voidSetPinValue+0x186>
    1188:	4b c2       	rjmp	.+1174   	; 0x1620 <DIO_voidSetPinValue+0x564>
			{
				case PIN_0 :
						DIO->PORTA.Bit.B0 = Copy_Value;
    118a:	e0 e3       	ldi	r30, 0x30	; 48
    118c:	f0 e0       	ldi	r31, 0x00	; 0
    118e:	8b 81       	ldd	r24, Y+3	; 0x03
    1190:	81 70       	andi	r24, 0x01	; 1
    1192:	98 2f       	mov	r25, r24
    1194:	91 70       	andi	r25, 0x01	; 1
    1196:	83 85       	ldd	r24, Z+11	; 0x0b
    1198:	8e 7f       	andi	r24, 0xFE	; 254
    119a:	89 2b       	or	r24, r25
    119c:	83 87       	std	Z+11, r24	; 0x0b
    119e:	40 c2       	rjmp	.+1152   	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_1 :
						DIO->PORTA.Bit.B1 = Copy_Value;
    11a0:	e0 e3       	ldi	r30, 0x30	; 48
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	8b 81       	ldd	r24, Y+3	; 0x03
    11a6:	81 70       	andi	r24, 0x01	; 1
    11a8:	81 70       	andi	r24, 0x01	; 1
    11aa:	98 2f       	mov	r25, r24
    11ac:	99 0f       	add	r25, r25
    11ae:	83 85       	ldd	r24, Z+11	; 0x0b
    11b0:	8d 7f       	andi	r24, 0xFD	; 253
    11b2:	89 2b       	or	r24, r25
    11b4:	83 87       	std	Z+11, r24	; 0x0b
    11b6:	34 c2       	rjmp	.+1128   	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_2 :
						DIO->PORTA.Bit.B2 = Copy_Value;
    11b8:	e0 e3       	ldi	r30, 0x30	; 48
    11ba:	f0 e0       	ldi	r31, 0x00	; 0
    11bc:	8b 81       	ldd	r24, Y+3	; 0x03
    11be:	81 70       	andi	r24, 0x01	; 1
    11c0:	81 70       	andi	r24, 0x01	; 1
    11c2:	98 2f       	mov	r25, r24
    11c4:	99 0f       	add	r25, r25
    11c6:	99 0f       	add	r25, r25
    11c8:	83 85       	ldd	r24, Z+11	; 0x0b
    11ca:	8b 7f       	andi	r24, 0xFB	; 251
    11cc:	89 2b       	or	r24, r25
    11ce:	83 87       	std	Z+11, r24	; 0x0b
    11d0:	27 c2       	rjmp	.+1102   	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_3 :
						DIO->PORTA.Bit.B3 = Copy_Value;
    11d2:	e0 e3       	ldi	r30, 0x30	; 48
    11d4:	f0 e0       	ldi	r31, 0x00	; 0
    11d6:	8b 81       	ldd	r24, Y+3	; 0x03
    11d8:	81 70       	andi	r24, 0x01	; 1
    11da:	81 70       	andi	r24, 0x01	; 1
    11dc:	98 2f       	mov	r25, r24
    11de:	99 0f       	add	r25, r25
    11e0:	99 0f       	add	r25, r25
    11e2:	99 0f       	add	r25, r25
    11e4:	83 85       	ldd	r24, Z+11	; 0x0b
    11e6:	87 7f       	andi	r24, 0xF7	; 247
    11e8:	89 2b       	or	r24, r25
    11ea:	83 87       	std	Z+11, r24	; 0x0b
    11ec:	19 c2       	rjmp	.+1074   	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_4 :
						DIO->PORTA.Bit.B4 = Copy_Value;
    11ee:	e0 e3       	ldi	r30, 0x30	; 48
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	81 70       	andi	r24, 0x01	; 1
    11f6:	81 70       	andi	r24, 0x01	; 1
    11f8:	98 2f       	mov	r25, r24
    11fa:	92 95       	swap	r25
    11fc:	90 7f       	andi	r25, 0xF0	; 240
    11fe:	83 85       	ldd	r24, Z+11	; 0x0b
    1200:	8f 7e       	andi	r24, 0xEF	; 239
    1202:	89 2b       	or	r24, r25
    1204:	83 87       	std	Z+11, r24	; 0x0b
    1206:	0c c2       	rjmp	.+1048   	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_5 :
						DIO->PORTA.Bit.B5 = Copy_Value;
    1208:	e0 e3       	ldi	r30, 0x30	; 48
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	8b 81       	ldd	r24, Y+3	; 0x03
    120e:	81 70       	andi	r24, 0x01	; 1
    1210:	81 70       	andi	r24, 0x01	; 1
    1212:	98 2f       	mov	r25, r24
    1214:	92 95       	swap	r25
    1216:	99 0f       	add	r25, r25
    1218:	90 7e       	andi	r25, 0xE0	; 224
    121a:	83 85       	ldd	r24, Z+11	; 0x0b
    121c:	8f 7d       	andi	r24, 0xDF	; 223
    121e:	89 2b       	or	r24, r25
    1220:	83 87       	std	Z+11, r24	; 0x0b
    1222:	fe c1       	rjmp	.+1020   	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_6 :
						DIO->PORTA.Bit.B6 = Copy_Value;
    1224:	e0 e3       	ldi	r30, 0x30	; 48
    1226:	f0 e0       	ldi	r31, 0x00	; 0
    1228:	8b 81       	ldd	r24, Y+3	; 0x03
    122a:	81 70       	andi	r24, 0x01	; 1
    122c:	81 70       	andi	r24, 0x01	; 1
    122e:	98 2f       	mov	r25, r24
    1230:	92 95       	swap	r25
    1232:	99 0f       	add	r25, r25
    1234:	99 0f       	add	r25, r25
    1236:	90 7c       	andi	r25, 0xC0	; 192
    1238:	83 85       	ldd	r24, Z+11	; 0x0b
    123a:	8f 7b       	andi	r24, 0xBF	; 191
    123c:	89 2b       	or	r24, r25
    123e:	83 87       	std	Z+11, r24	; 0x0b
    1240:	ef c1       	rjmp	.+990    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_7 :
						DIO->PORTA.Bit.B7 = Copy_Value;
    1242:	e0 e3       	ldi	r30, 0x30	; 48
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	8b 81       	ldd	r24, Y+3	; 0x03
    1248:	81 70       	andi	r24, 0x01	; 1
    124a:	98 2f       	mov	r25, r24
    124c:	97 95       	ror	r25
    124e:	99 27       	eor	r25, r25
    1250:	97 95       	ror	r25
    1252:	83 85       	ldd	r24, Z+11	; 0x0b
    1254:	8f 77       	andi	r24, 0x7F	; 127
    1256:	89 2b       	or	r24, r25
    1258:	83 87       	std	Z+11, r24	; 0x0b
    125a:	e2 c1       	rjmp	.+964    	; 0x1620 <DIO_voidSetPinValue+0x564>
				default: break;
			}
			break;

		case PORT_B:
			switch(Copy_PinId)
    125c:	8a 81       	ldd	r24, Y+2	; 0x02
    125e:	28 2f       	mov	r18, r24
    1260:	30 e0       	ldi	r19, 0x00	; 0
    1262:	39 87       	std	Y+9, r19	; 0x09
    1264:	28 87       	std	Y+8, r18	; 0x08
    1266:	88 85       	ldd	r24, Y+8	; 0x08
    1268:	99 85       	ldd	r25, Y+9	; 0x09
    126a:	83 30       	cpi	r24, 0x03	; 3
    126c:	91 05       	cpc	r25, r1
    126e:	09 f4       	brne	.+2      	; 0x1272 <DIO_voidSetPinValue+0x1b6>
    1270:	51 c0       	rjmp	.+162    	; 0x1314 <DIO_voidSetPinValue+0x258>
    1272:	28 85       	ldd	r18, Y+8	; 0x08
    1274:	39 85       	ldd	r19, Y+9	; 0x09
    1276:	24 30       	cpi	r18, 0x04	; 4
    1278:	31 05       	cpc	r19, r1
    127a:	7c f4       	brge	.+30     	; 0x129a <DIO_voidSetPinValue+0x1de>
    127c:	88 85       	ldd	r24, Y+8	; 0x08
    127e:	99 85       	ldd	r25, Y+9	; 0x09
    1280:	81 30       	cpi	r24, 0x01	; 1
    1282:	91 05       	cpc	r25, r1
    1284:	71 f1       	breq	.+92     	; 0x12e2 <DIO_voidSetPinValue+0x226>
    1286:	28 85       	ldd	r18, Y+8	; 0x08
    1288:	39 85       	ldd	r19, Y+9	; 0x09
    128a:	22 30       	cpi	r18, 0x02	; 2
    128c:	31 05       	cpc	r19, r1
    128e:	ac f5       	brge	.+106    	; 0x12fa <DIO_voidSetPinValue+0x23e>
    1290:	88 85       	ldd	r24, Y+8	; 0x08
    1292:	99 85       	ldd	r25, Y+9	; 0x09
    1294:	00 97       	sbiw	r24, 0x00	; 0
    1296:	d1 f0       	breq	.+52     	; 0x12cc <DIO_voidSetPinValue+0x210>
    1298:	c3 c1       	rjmp	.+902    	; 0x1620 <DIO_voidSetPinValue+0x564>
    129a:	28 85       	ldd	r18, Y+8	; 0x08
    129c:	39 85       	ldd	r19, Y+9	; 0x09
    129e:	25 30       	cpi	r18, 0x05	; 5
    12a0:	31 05       	cpc	r19, r1
    12a2:	09 f4       	brne	.+2      	; 0x12a6 <DIO_voidSetPinValue+0x1ea>
    12a4:	52 c0       	rjmp	.+164    	; 0x134a <DIO_voidSetPinValue+0x28e>
    12a6:	88 85       	ldd	r24, Y+8	; 0x08
    12a8:	99 85       	ldd	r25, Y+9	; 0x09
    12aa:	85 30       	cpi	r24, 0x05	; 5
    12ac:	91 05       	cpc	r25, r1
    12ae:	0c f4       	brge	.+2      	; 0x12b2 <DIO_voidSetPinValue+0x1f6>
    12b0:	3f c0       	rjmp	.+126    	; 0x1330 <DIO_voidSetPinValue+0x274>
    12b2:	28 85       	ldd	r18, Y+8	; 0x08
    12b4:	39 85       	ldd	r19, Y+9	; 0x09
    12b6:	26 30       	cpi	r18, 0x06	; 6
    12b8:	31 05       	cpc	r19, r1
    12ba:	09 f4       	brne	.+2      	; 0x12be <DIO_voidSetPinValue+0x202>
    12bc:	54 c0       	rjmp	.+168    	; 0x1366 <DIO_voidSetPinValue+0x2aa>
    12be:	88 85       	ldd	r24, Y+8	; 0x08
    12c0:	99 85       	ldd	r25, Y+9	; 0x09
    12c2:	87 30       	cpi	r24, 0x07	; 7
    12c4:	91 05       	cpc	r25, r1
    12c6:	09 f4       	brne	.+2      	; 0x12ca <DIO_voidSetPinValue+0x20e>
    12c8:	5d c0       	rjmp	.+186    	; 0x1384 <DIO_voidSetPinValue+0x2c8>
    12ca:	aa c1       	rjmp	.+852    	; 0x1620 <DIO_voidSetPinValue+0x564>
			{
				case PIN_0 :
						DIO->PORTB.Bit.B0 = Copy_Value;
    12cc:	e0 e3       	ldi	r30, 0x30	; 48
    12ce:	f0 e0       	ldi	r31, 0x00	; 0
    12d0:	8b 81       	ldd	r24, Y+3	; 0x03
    12d2:	81 70       	andi	r24, 0x01	; 1
    12d4:	98 2f       	mov	r25, r24
    12d6:	91 70       	andi	r25, 0x01	; 1
    12d8:	80 85       	ldd	r24, Z+8	; 0x08
    12da:	8e 7f       	andi	r24, 0xFE	; 254
    12dc:	89 2b       	or	r24, r25
    12de:	80 87       	std	Z+8, r24	; 0x08
    12e0:	9f c1       	rjmp	.+830    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_1 :
						DIO->PORTB.Bit.B1 = Copy_Value;
    12e2:	e0 e3       	ldi	r30, 0x30	; 48
    12e4:	f0 e0       	ldi	r31, 0x00	; 0
    12e6:	8b 81       	ldd	r24, Y+3	; 0x03
    12e8:	81 70       	andi	r24, 0x01	; 1
    12ea:	81 70       	andi	r24, 0x01	; 1
    12ec:	98 2f       	mov	r25, r24
    12ee:	99 0f       	add	r25, r25
    12f0:	80 85       	ldd	r24, Z+8	; 0x08
    12f2:	8d 7f       	andi	r24, 0xFD	; 253
    12f4:	89 2b       	or	r24, r25
    12f6:	80 87       	std	Z+8, r24	; 0x08
    12f8:	93 c1       	rjmp	.+806    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_2 :
						DIO->PORTB.Bit.B2 = Copy_Value;
    12fa:	e0 e3       	ldi	r30, 0x30	; 48
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1300:	81 70       	andi	r24, 0x01	; 1
    1302:	81 70       	andi	r24, 0x01	; 1
    1304:	98 2f       	mov	r25, r24
    1306:	99 0f       	add	r25, r25
    1308:	99 0f       	add	r25, r25
    130a:	80 85       	ldd	r24, Z+8	; 0x08
    130c:	8b 7f       	andi	r24, 0xFB	; 251
    130e:	89 2b       	or	r24, r25
    1310:	80 87       	std	Z+8, r24	; 0x08
    1312:	86 c1       	rjmp	.+780    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_3 :
						DIO->PORTB.Bit.B3 = Copy_Value;
    1314:	e0 e3       	ldi	r30, 0x30	; 48
    1316:	f0 e0       	ldi	r31, 0x00	; 0
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	81 70       	andi	r24, 0x01	; 1
    131c:	81 70       	andi	r24, 0x01	; 1
    131e:	98 2f       	mov	r25, r24
    1320:	99 0f       	add	r25, r25
    1322:	99 0f       	add	r25, r25
    1324:	99 0f       	add	r25, r25
    1326:	80 85       	ldd	r24, Z+8	; 0x08
    1328:	87 7f       	andi	r24, 0xF7	; 247
    132a:	89 2b       	or	r24, r25
    132c:	80 87       	std	Z+8, r24	; 0x08
    132e:	78 c1       	rjmp	.+752    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_4 :
						DIO->PORTB.Bit.B4 = Copy_Value;
    1330:	e0 e3       	ldi	r30, 0x30	; 48
    1332:	f0 e0       	ldi	r31, 0x00	; 0
    1334:	8b 81       	ldd	r24, Y+3	; 0x03
    1336:	81 70       	andi	r24, 0x01	; 1
    1338:	81 70       	andi	r24, 0x01	; 1
    133a:	98 2f       	mov	r25, r24
    133c:	92 95       	swap	r25
    133e:	90 7f       	andi	r25, 0xF0	; 240
    1340:	80 85       	ldd	r24, Z+8	; 0x08
    1342:	8f 7e       	andi	r24, 0xEF	; 239
    1344:	89 2b       	or	r24, r25
    1346:	80 87       	std	Z+8, r24	; 0x08
    1348:	6b c1       	rjmp	.+726    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_5 :
						DIO->PORTB.Bit.B5 = Copy_Value;
    134a:	e0 e3       	ldi	r30, 0x30	; 48
    134c:	f0 e0       	ldi	r31, 0x00	; 0
    134e:	8b 81       	ldd	r24, Y+3	; 0x03
    1350:	81 70       	andi	r24, 0x01	; 1
    1352:	81 70       	andi	r24, 0x01	; 1
    1354:	98 2f       	mov	r25, r24
    1356:	92 95       	swap	r25
    1358:	99 0f       	add	r25, r25
    135a:	90 7e       	andi	r25, 0xE0	; 224
    135c:	80 85       	ldd	r24, Z+8	; 0x08
    135e:	8f 7d       	andi	r24, 0xDF	; 223
    1360:	89 2b       	or	r24, r25
    1362:	80 87       	std	Z+8, r24	; 0x08
    1364:	5d c1       	rjmp	.+698    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_6 :
						DIO->PORTB.Bit.B6 = Copy_Value;
    1366:	e0 e3       	ldi	r30, 0x30	; 48
    1368:	f0 e0       	ldi	r31, 0x00	; 0
    136a:	8b 81       	ldd	r24, Y+3	; 0x03
    136c:	81 70       	andi	r24, 0x01	; 1
    136e:	81 70       	andi	r24, 0x01	; 1
    1370:	98 2f       	mov	r25, r24
    1372:	92 95       	swap	r25
    1374:	99 0f       	add	r25, r25
    1376:	99 0f       	add	r25, r25
    1378:	90 7c       	andi	r25, 0xC0	; 192
    137a:	80 85       	ldd	r24, Z+8	; 0x08
    137c:	8f 7b       	andi	r24, 0xBF	; 191
    137e:	89 2b       	or	r24, r25
    1380:	80 87       	std	Z+8, r24	; 0x08
    1382:	4e c1       	rjmp	.+668    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_7 :
						DIO->PORTB.Bit.B7 = Copy_Value;
    1384:	e0 e3       	ldi	r30, 0x30	; 48
    1386:	f0 e0       	ldi	r31, 0x00	; 0
    1388:	8b 81       	ldd	r24, Y+3	; 0x03
    138a:	81 70       	andi	r24, 0x01	; 1
    138c:	98 2f       	mov	r25, r24
    138e:	97 95       	ror	r25
    1390:	99 27       	eor	r25, r25
    1392:	97 95       	ror	r25
    1394:	80 85       	ldd	r24, Z+8	; 0x08
    1396:	8f 77       	andi	r24, 0x7F	; 127
    1398:	89 2b       	or	r24, r25
    139a:	80 87       	std	Z+8, r24	; 0x08
    139c:	41 c1       	rjmp	.+642    	; 0x1620 <DIO_voidSetPinValue+0x564>
			}
			break;


		case PORT_C:
			switch(Copy_PinId)
    139e:	8a 81       	ldd	r24, Y+2	; 0x02
    13a0:	28 2f       	mov	r18, r24
    13a2:	30 e0       	ldi	r19, 0x00	; 0
    13a4:	3f 83       	std	Y+7, r19	; 0x07
    13a6:	2e 83       	std	Y+6, r18	; 0x06
    13a8:	8e 81       	ldd	r24, Y+6	; 0x06
    13aa:	9f 81       	ldd	r25, Y+7	; 0x07
    13ac:	83 30       	cpi	r24, 0x03	; 3
    13ae:	91 05       	cpc	r25, r1
    13b0:	09 f4       	brne	.+2      	; 0x13b4 <DIO_voidSetPinValue+0x2f8>
    13b2:	51 c0       	rjmp	.+162    	; 0x1456 <DIO_voidSetPinValue+0x39a>
    13b4:	2e 81       	ldd	r18, Y+6	; 0x06
    13b6:	3f 81       	ldd	r19, Y+7	; 0x07
    13b8:	24 30       	cpi	r18, 0x04	; 4
    13ba:	31 05       	cpc	r19, r1
    13bc:	7c f4       	brge	.+30     	; 0x13dc <DIO_voidSetPinValue+0x320>
    13be:	8e 81       	ldd	r24, Y+6	; 0x06
    13c0:	9f 81       	ldd	r25, Y+7	; 0x07
    13c2:	81 30       	cpi	r24, 0x01	; 1
    13c4:	91 05       	cpc	r25, r1
    13c6:	71 f1       	breq	.+92     	; 0x1424 <DIO_voidSetPinValue+0x368>
    13c8:	2e 81       	ldd	r18, Y+6	; 0x06
    13ca:	3f 81       	ldd	r19, Y+7	; 0x07
    13cc:	22 30       	cpi	r18, 0x02	; 2
    13ce:	31 05       	cpc	r19, r1
    13d0:	ac f5       	brge	.+106    	; 0x143c <DIO_voidSetPinValue+0x380>
    13d2:	8e 81       	ldd	r24, Y+6	; 0x06
    13d4:	9f 81       	ldd	r25, Y+7	; 0x07
    13d6:	00 97       	sbiw	r24, 0x00	; 0
    13d8:	d1 f0       	breq	.+52     	; 0x140e <DIO_voidSetPinValue+0x352>
    13da:	22 c1       	rjmp	.+580    	; 0x1620 <DIO_voidSetPinValue+0x564>
    13dc:	2e 81       	ldd	r18, Y+6	; 0x06
    13de:	3f 81       	ldd	r19, Y+7	; 0x07
    13e0:	25 30       	cpi	r18, 0x05	; 5
    13e2:	31 05       	cpc	r19, r1
    13e4:	09 f4       	brne	.+2      	; 0x13e8 <DIO_voidSetPinValue+0x32c>
    13e6:	52 c0       	rjmp	.+164    	; 0x148c <DIO_voidSetPinValue+0x3d0>
    13e8:	8e 81       	ldd	r24, Y+6	; 0x06
    13ea:	9f 81       	ldd	r25, Y+7	; 0x07
    13ec:	85 30       	cpi	r24, 0x05	; 5
    13ee:	91 05       	cpc	r25, r1
    13f0:	0c f4       	brge	.+2      	; 0x13f4 <DIO_voidSetPinValue+0x338>
    13f2:	3f c0       	rjmp	.+126    	; 0x1472 <DIO_voidSetPinValue+0x3b6>
    13f4:	2e 81       	ldd	r18, Y+6	; 0x06
    13f6:	3f 81       	ldd	r19, Y+7	; 0x07
    13f8:	26 30       	cpi	r18, 0x06	; 6
    13fa:	31 05       	cpc	r19, r1
    13fc:	09 f4       	brne	.+2      	; 0x1400 <DIO_voidSetPinValue+0x344>
    13fe:	54 c0       	rjmp	.+168    	; 0x14a8 <DIO_voidSetPinValue+0x3ec>
    1400:	8e 81       	ldd	r24, Y+6	; 0x06
    1402:	9f 81       	ldd	r25, Y+7	; 0x07
    1404:	87 30       	cpi	r24, 0x07	; 7
    1406:	91 05       	cpc	r25, r1
    1408:	09 f4       	brne	.+2      	; 0x140c <DIO_voidSetPinValue+0x350>
    140a:	5d c0       	rjmp	.+186    	; 0x14c6 <DIO_voidSetPinValue+0x40a>
    140c:	09 c1       	rjmp	.+530    	; 0x1620 <DIO_voidSetPinValue+0x564>
			{
				case PIN_0 :
						DIO->PORTC.Bit.B0 = Copy_Value;
    140e:	e0 e3       	ldi	r30, 0x30	; 48
    1410:	f0 e0       	ldi	r31, 0x00	; 0
    1412:	8b 81       	ldd	r24, Y+3	; 0x03
    1414:	81 70       	andi	r24, 0x01	; 1
    1416:	98 2f       	mov	r25, r24
    1418:	91 70       	andi	r25, 0x01	; 1
    141a:	85 81       	ldd	r24, Z+5	; 0x05
    141c:	8e 7f       	andi	r24, 0xFE	; 254
    141e:	89 2b       	or	r24, r25
    1420:	85 83       	std	Z+5, r24	; 0x05
    1422:	fe c0       	rjmp	.+508    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_1 :
						DIO->PORTC.Bit.B1 = Copy_Value;
    1424:	e0 e3       	ldi	r30, 0x30	; 48
    1426:	f0 e0       	ldi	r31, 0x00	; 0
    1428:	8b 81       	ldd	r24, Y+3	; 0x03
    142a:	81 70       	andi	r24, 0x01	; 1
    142c:	81 70       	andi	r24, 0x01	; 1
    142e:	98 2f       	mov	r25, r24
    1430:	99 0f       	add	r25, r25
    1432:	85 81       	ldd	r24, Z+5	; 0x05
    1434:	8d 7f       	andi	r24, 0xFD	; 253
    1436:	89 2b       	or	r24, r25
    1438:	85 83       	std	Z+5, r24	; 0x05
    143a:	f2 c0       	rjmp	.+484    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_2 :
						DIO->PORTC.Bit.B2 = Copy_Value;
    143c:	e0 e3       	ldi	r30, 0x30	; 48
    143e:	f0 e0       	ldi	r31, 0x00	; 0
    1440:	8b 81       	ldd	r24, Y+3	; 0x03
    1442:	81 70       	andi	r24, 0x01	; 1
    1444:	81 70       	andi	r24, 0x01	; 1
    1446:	98 2f       	mov	r25, r24
    1448:	99 0f       	add	r25, r25
    144a:	99 0f       	add	r25, r25
    144c:	85 81       	ldd	r24, Z+5	; 0x05
    144e:	8b 7f       	andi	r24, 0xFB	; 251
    1450:	89 2b       	or	r24, r25
    1452:	85 83       	std	Z+5, r24	; 0x05
    1454:	e5 c0       	rjmp	.+458    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_3 :
						DIO->PORTC.Bit.B3 = Copy_Value;
    1456:	e0 e3       	ldi	r30, 0x30	; 48
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	8b 81       	ldd	r24, Y+3	; 0x03
    145c:	81 70       	andi	r24, 0x01	; 1
    145e:	81 70       	andi	r24, 0x01	; 1
    1460:	98 2f       	mov	r25, r24
    1462:	99 0f       	add	r25, r25
    1464:	99 0f       	add	r25, r25
    1466:	99 0f       	add	r25, r25
    1468:	85 81       	ldd	r24, Z+5	; 0x05
    146a:	87 7f       	andi	r24, 0xF7	; 247
    146c:	89 2b       	or	r24, r25
    146e:	85 83       	std	Z+5, r24	; 0x05
    1470:	d7 c0       	rjmp	.+430    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_4 :
						DIO->PORTC.Bit.B4 = Copy_Value;
    1472:	e0 e3       	ldi	r30, 0x30	; 48
    1474:	f0 e0       	ldi	r31, 0x00	; 0
    1476:	8b 81       	ldd	r24, Y+3	; 0x03
    1478:	81 70       	andi	r24, 0x01	; 1
    147a:	81 70       	andi	r24, 0x01	; 1
    147c:	98 2f       	mov	r25, r24
    147e:	92 95       	swap	r25
    1480:	90 7f       	andi	r25, 0xF0	; 240
    1482:	85 81       	ldd	r24, Z+5	; 0x05
    1484:	8f 7e       	andi	r24, 0xEF	; 239
    1486:	89 2b       	or	r24, r25
    1488:	85 83       	std	Z+5, r24	; 0x05
    148a:	ca c0       	rjmp	.+404    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_5 :
						DIO->PORTC.Bit.B5 = Copy_Value;
    148c:	e0 e3       	ldi	r30, 0x30	; 48
    148e:	f0 e0       	ldi	r31, 0x00	; 0
    1490:	8b 81       	ldd	r24, Y+3	; 0x03
    1492:	81 70       	andi	r24, 0x01	; 1
    1494:	81 70       	andi	r24, 0x01	; 1
    1496:	98 2f       	mov	r25, r24
    1498:	92 95       	swap	r25
    149a:	99 0f       	add	r25, r25
    149c:	90 7e       	andi	r25, 0xE0	; 224
    149e:	85 81       	ldd	r24, Z+5	; 0x05
    14a0:	8f 7d       	andi	r24, 0xDF	; 223
    14a2:	89 2b       	or	r24, r25
    14a4:	85 83       	std	Z+5, r24	; 0x05
    14a6:	bc c0       	rjmp	.+376    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_6 :
						DIO->PORTC.Bit.B6 = Copy_Value;
    14a8:	e0 e3       	ldi	r30, 0x30	; 48
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	8b 81       	ldd	r24, Y+3	; 0x03
    14ae:	81 70       	andi	r24, 0x01	; 1
    14b0:	81 70       	andi	r24, 0x01	; 1
    14b2:	98 2f       	mov	r25, r24
    14b4:	92 95       	swap	r25
    14b6:	99 0f       	add	r25, r25
    14b8:	99 0f       	add	r25, r25
    14ba:	90 7c       	andi	r25, 0xC0	; 192
    14bc:	85 81       	ldd	r24, Z+5	; 0x05
    14be:	8f 7b       	andi	r24, 0xBF	; 191
    14c0:	89 2b       	or	r24, r25
    14c2:	85 83       	std	Z+5, r24	; 0x05
    14c4:	ad c0       	rjmp	.+346    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_7 :
						DIO->PORTC.Bit.B7 = Copy_Value;
    14c6:	e0 e3       	ldi	r30, 0x30	; 48
    14c8:	f0 e0       	ldi	r31, 0x00	; 0
    14ca:	8b 81       	ldd	r24, Y+3	; 0x03
    14cc:	81 70       	andi	r24, 0x01	; 1
    14ce:	98 2f       	mov	r25, r24
    14d0:	97 95       	ror	r25
    14d2:	99 27       	eor	r25, r25
    14d4:	97 95       	ror	r25
    14d6:	85 81       	ldd	r24, Z+5	; 0x05
    14d8:	8f 77       	andi	r24, 0x7F	; 127
    14da:	89 2b       	or	r24, r25
    14dc:	85 83       	std	Z+5, r24	; 0x05
    14de:	a0 c0       	rjmp	.+320    	; 0x1620 <DIO_voidSetPinValue+0x564>
				default: break;
			}
			break;

		case PORT_D:
			switch(Copy_PinId)
    14e0:	8a 81       	ldd	r24, Y+2	; 0x02
    14e2:	28 2f       	mov	r18, r24
    14e4:	30 e0       	ldi	r19, 0x00	; 0
    14e6:	3d 83       	std	Y+5, r19	; 0x05
    14e8:	2c 83       	std	Y+4, r18	; 0x04
    14ea:	8c 81       	ldd	r24, Y+4	; 0x04
    14ec:	9d 81       	ldd	r25, Y+5	; 0x05
    14ee:	83 30       	cpi	r24, 0x03	; 3
    14f0:	91 05       	cpc	r25, r1
    14f2:	09 f4       	brne	.+2      	; 0x14f6 <DIO_voidSetPinValue+0x43a>
    14f4:	51 c0       	rjmp	.+162    	; 0x1598 <DIO_voidSetPinValue+0x4dc>
    14f6:	2c 81       	ldd	r18, Y+4	; 0x04
    14f8:	3d 81       	ldd	r19, Y+5	; 0x05
    14fa:	24 30       	cpi	r18, 0x04	; 4
    14fc:	31 05       	cpc	r19, r1
    14fe:	7c f4       	brge	.+30     	; 0x151e <DIO_voidSetPinValue+0x462>
    1500:	8c 81       	ldd	r24, Y+4	; 0x04
    1502:	9d 81       	ldd	r25, Y+5	; 0x05
    1504:	81 30       	cpi	r24, 0x01	; 1
    1506:	91 05       	cpc	r25, r1
    1508:	71 f1       	breq	.+92     	; 0x1566 <DIO_voidSetPinValue+0x4aa>
    150a:	2c 81       	ldd	r18, Y+4	; 0x04
    150c:	3d 81       	ldd	r19, Y+5	; 0x05
    150e:	22 30       	cpi	r18, 0x02	; 2
    1510:	31 05       	cpc	r19, r1
    1512:	ac f5       	brge	.+106    	; 0x157e <DIO_voidSetPinValue+0x4c2>
    1514:	8c 81       	ldd	r24, Y+4	; 0x04
    1516:	9d 81       	ldd	r25, Y+5	; 0x05
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	d1 f0       	breq	.+52     	; 0x1550 <DIO_voidSetPinValue+0x494>
    151c:	81 c0       	rjmp	.+258    	; 0x1620 <DIO_voidSetPinValue+0x564>
    151e:	2c 81       	ldd	r18, Y+4	; 0x04
    1520:	3d 81       	ldd	r19, Y+5	; 0x05
    1522:	25 30       	cpi	r18, 0x05	; 5
    1524:	31 05       	cpc	r19, r1
    1526:	09 f4       	brne	.+2      	; 0x152a <DIO_voidSetPinValue+0x46e>
    1528:	52 c0       	rjmp	.+164    	; 0x15ce <DIO_voidSetPinValue+0x512>
    152a:	8c 81       	ldd	r24, Y+4	; 0x04
    152c:	9d 81       	ldd	r25, Y+5	; 0x05
    152e:	85 30       	cpi	r24, 0x05	; 5
    1530:	91 05       	cpc	r25, r1
    1532:	0c f4       	brge	.+2      	; 0x1536 <DIO_voidSetPinValue+0x47a>
    1534:	3f c0       	rjmp	.+126    	; 0x15b4 <DIO_voidSetPinValue+0x4f8>
    1536:	2c 81       	ldd	r18, Y+4	; 0x04
    1538:	3d 81       	ldd	r19, Y+5	; 0x05
    153a:	26 30       	cpi	r18, 0x06	; 6
    153c:	31 05       	cpc	r19, r1
    153e:	09 f4       	brne	.+2      	; 0x1542 <DIO_voidSetPinValue+0x486>
    1540:	54 c0       	rjmp	.+168    	; 0x15ea <DIO_voidSetPinValue+0x52e>
    1542:	8c 81       	ldd	r24, Y+4	; 0x04
    1544:	9d 81       	ldd	r25, Y+5	; 0x05
    1546:	87 30       	cpi	r24, 0x07	; 7
    1548:	91 05       	cpc	r25, r1
    154a:	09 f4       	brne	.+2      	; 0x154e <DIO_voidSetPinValue+0x492>
    154c:	5d c0       	rjmp	.+186    	; 0x1608 <DIO_voidSetPinValue+0x54c>
    154e:	68 c0       	rjmp	.+208    	; 0x1620 <DIO_voidSetPinValue+0x564>
			{
				case PIN_0 :
						DIO->PORTD.Bit.B0 = Copy_Value;
    1550:	e0 e3       	ldi	r30, 0x30	; 48
    1552:	f0 e0       	ldi	r31, 0x00	; 0
    1554:	8b 81       	ldd	r24, Y+3	; 0x03
    1556:	81 70       	andi	r24, 0x01	; 1
    1558:	98 2f       	mov	r25, r24
    155a:	91 70       	andi	r25, 0x01	; 1
    155c:	82 81       	ldd	r24, Z+2	; 0x02
    155e:	8e 7f       	andi	r24, 0xFE	; 254
    1560:	89 2b       	or	r24, r25
    1562:	82 83       	std	Z+2, r24	; 0x02
    1564:	5d c0       	rjmp	.+186    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_1 :
						DIO->PORTD.Bit.B1 = Copy_Value;
    1566:	e0 e3       	ldi	r30, 0x30	; 48
    1568:	f0 e0       	ldi	r31, 0x00	; 0
    156a:	8b 81       	ldd	r24, Y+3	; 0x03
    156c:	81 70       	andi	r24, 0x01	; 1
    156e:	81 70       	andi	r24, 0x01	; 1
    1570:	98 2f       	mov	r25, r24
    1572:	99 0f       	add	r25, r25
    1574:	82 81       	ldd	r24, Z+2	; 0x02
    1576:	8d 7f       	andi	r24, 0xFD	; 253
    1578:	89 2b       	or	r24, r25
    157a:	82 83       	std	Z+2, r24	; 0x02
    157c:	51 c0       	rjmp	.+162    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_2 :
						DIO->PORTD.Bit.B2 = Copy_Value;
    157e:	e0 e3       	ldi	r30, 0x30	; 48
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	8b 81       	ldd	r24, Y+3	; 0x03
    1584:	81 70       	andi	r24, 0x01	; 1
    1586:	81 70       	andi	r24, 0x01	; 1
    1588:	98 2f       	mov	r25, r24
    158a:	99 0f       	add	r25, r25
    158c:	99 0f       	add	r25, r25
    158e:	82 81       	ldd	r24, Z+2	; 0x02
    1590:	8b 7f       	andi	r24, 0xFB	; 251
    1592:	89 2b       	or	r24, r25
    1594:	82 83       	std	Z+2, r24	; 0x02
    1596:	44 c0       	rjmp	.+136    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_3 :
						DIO->PORTD.Bit.B3 = Copy_Value;
    1598:	e0 e3       	ldi	r30, 0x30	; 48
    159a:	f0 e0       	ldi	r31, 0x00	; 0
    159c:	8b 81       	ldd	r24, Y+3	; 0x03
    159e:	81 70       	andi	r24, 0x01	; 1
    15a0:	81 70       	andi	r24, 0x01	; 1
    15a2:	98 2f       	mov	r25, r24
    15a4:	99 0f       	add	r25, r25
    15a6:	99 0f       	add	r25, r25
    15a8:	99 0f       	add	r25, r25
    15aa:	82 81       	ldd	r24, Z+2	; 0x02
    15ac:	87 7f       	andi	r24, 0xF7	; 247
    15ae:	89 2b       	or	r24, r25
    15b0:	82 83       	std	Z+2, r24	; 0x02
    15b2:	36 c0       	rjmp	.+108    	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_4 :
						DIO->PORTD.Bit.B4 = Copy_Value;
    15b4:	e0 e3       	ldi	r30, 0x30	; 48
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	8b 81       	ldd	r24, Y+3	; 0x03
    15ba:	81 70       	andi	r24, 0x01	; 1
    15bc:	81 70       	andi	r24, 0x01	; 1
    15be:	98 2f       	mov	r25, r24
    15c0:	92 95       	swap	r25
    15c2:	90 7f       	andi	r25, 0xF0	; 240
    15c4:	82 81       	ldd	r24, Z+2	; 0x02
    15c6:	8f 7e       	andi	r24, 0xEF	; 239
    15c8:	89 2b       	or	r24, r25
    15ca:	82 83       	std	Z+2, r24	; 0x02
    15cc:	29 c0       	rjmp	.+82     	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_5 :
						DIO->PORTD.Bit.B5 = Copy_Value;
    15ce:	e0 e3       	ldi	r30, 0x30	; 48
    15d0:	f0 e0       	ldi	r31, 0x00	; 0
    15d2:	8b 81       	ldd	r24, Y+3	; 0x03
    15d4:	81 70       	andi	r24, 0x01	; 1
    15d6:	81 70       	andi	r24, 0x01	; 1
    15d8:	98 2f       	mov	r25, r24
    15da:	92 95       	swap	r25
    15dc:	99 0f       	add	r25, r25
    15de:	90 7e       	andi	r25, 0xE0	; 224
    15e0:	82 81       	ldd	r24, Z+2	; 0x02
    15e2:	8f 7d       	andi	r24, 0xDF	; 223
    15e4:	89 2b       	or	r24, r25
    15e6:	82 83       	std	Z+2, r24	; 0x02
    15e8:	1b c0       	rjmp	.+54     	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_6 :
						DIO->PORTD.Bit.B6 = Copy_Value;
    15ea:	e0 e3       	ldi	r30, 0x30	; 48
    15ec:	f0 e0       	ldi	r31, 0x00	; 0
    15ee:	8b 81       	ldd	r24, Y+3	; 0x03
    15f0:	81 70       	andi	r24, 0x01	; 1
    15f2:	81 70       	andi	r24, 0x01	; 1
    15f4:	98 2f       	mov	r25, r24
    15f6:	92 95       	swap	r25
    15f8:	99 0f       	add	r25, r25
    15fa:	99 0f       	add	r25, r25
    15fc:	90 7c       	andi	r25, 0xC0	; 192
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
    1600:	8f 7b       	andi	r24, 0xBF	; 191
    1602:	89 2b       	or	r24, r25
    1604:	82 83       	std	Z+2, r24	; 0x02
    1606:	0c c0       	rjmp	.+24     	; 0x1620 <DIO_voidSetPinValue+0x564>
						break;
				case PIN_7 :
						DIO->PORTD.Bit.B7 = Copy_Value;
    1608:	e0 e3       	ldi	r30, 0x30	; 48
    160a:	f0 e0       	ldi	r31, 0x00	; 0
    160c:	8b 81       	ldd	r24, Y+3	; 0x03
    160e:	81 70       	andi	r24, 0x01	; 1
    1610:	98 2f       	mov	r25, r24
    1612:	97 95       	ror	r25
    1614:	99 27       	eor	r25, r25
    1616:	97 95       	ror	r25
    1618:	82 81       	ldd	r24, Z+2	; 0x02
    161a:	8f 77       	andi	r24, 0x7F	; 127
    161c:	89 2b       	or	r24, r25
    161e:	82 83       	std	Z+2, r24	; 0x02
						break;
				default: break;
			}
			break;
	}
}
    1620:	2d 96       	adiw	r28, 0x0d	; 13
    1622:	0f b6       	in	r0, 0x3f	; 63
    1624:	f8 94       	cli
    1626:	de bf       	out	0x3e, r29	; 62
    1628:	0f be       	out	0x3f, r0	; 63
    162a:	cd bf       	out	0x3d, r28	; 61
    162c:	cf 91       	pop	r28
    162e:	df 91       	pop	r29
    1630:	08 95       	ret

00001632 <DIO_voidGetPinValue>:

u8 DIO_voidGetPinValue(PORT_t Copy_PortId,PIN_t Copy_PinId)
{
    1632:	df 93       	push	r29
    1634:	cf 93       	push	r28
    1636:	cd b7       	in	r28, 0x3d	; 61
    1638:	de b7       	in	r29, 0x3e	; 62
    163a:	2d 97       	sbiw	r28, 0x0d	; 13
    163c:	0f b6       	in	r0, 0x3f	; 63
    163e:	f8 94       	cli
    1640:	de bf       	out	0x3e, r29	; 62
    1642:	0f be       	out	0x3f, r0	; 63
    1644:	cd bf       	out	0x3d, r28	; 61
    1646:	8a 83       	std	Y+2, r24	; 0x02
    1648:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Pin;
	switch(Copy_PortId)
    164a:	8a 81       	ldd	r24, Y+2	; 0x02
    164c:	28 2f       	mov	r18, r24
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	3d 87       	std	Y+13, r19	; 0x0d
    1652:	2c 87       	std	Y+12, r18	; 0x0c
    1654:	8c 85       	ldd	r24, Y+12	; 0x0c
    1656:	9d 85       	ldd	r25, Y+13	; 0x0d
    1658:	81 30       	cpi	r24, 0x01	; 1
    165a:	91 05       	cpc	r25, r1
    165c:	09 f4       	brne	.+2      	; 0x1660 <DIO_voidGetPinValue+0x2e>
    165e:	8c c0       	rjmp	.+280    	; 0x1778 <DIO_voidGetPinValue+0x146>
    1660:	2c 85       	ldd	r18, Y+12	; 0x0c
    1662:	3d 85       	ldd	r19, Y+13	; 0x0d
    1664:	22 30       	cpi	r18, 0x02	; 2
    1666:	31 05       	cpc	r19, r1
    1668:	2c f4       	brge	.+10     	; 0x1674 <DIO_voidGetPinValue+0x42>
    166a:	8c 85       	ldd	r24, Y+12	; 0x0c
    166c:	9d 85       	ldd	r25, Y+13	; 0x0d
    166e:	00 97       	sbiw	r24, 0x00	; 0
    1670:	71 f0       	breq	.+28     	; 0x168e <DIO_voidGetPinValue+0x5c>
    1672:	e0 c1       	rjmp	.+960    	; 0x1a34 <DIO_voidGetPinValue+0x402>
    1674:	2c 85       	ldd	r18, Y+12	; 0x0c
    1676:	3d 85       	ldd	r19, Y+13	; 0x0d
    1678:	22 30       	cpi	r18, 0x02	; 2
    167a:	31 05       	cpc	r19, r1
    167c:	09 f4       	brne	.+2      	; 0x1680 <DIO_voidGetPinValue+0x4e>
    167e:	f1 c0       	rjmp	.+482    	; 0x1862 <DIO_voidGetPinValue+0x230>
    1680:	8c 85       	ldd	r24, Y+12	; 0x0c
    1682:	9d 85       	ldd	r25, Y+13	; 0x0d
    1684:	83 30       	cpi	r24, 0x03	; 3
    1686:	91 05       	cpc	r25, r1
    1688:	09 f4       	brne	.+2      	; 0x168c <DIO_voidGetPinValue+0x5a>
    168a:	60 c1       	rjmp	.+704    	; 0x194c <DIO_voidGetPinValue+0x31a>
    168c:	d3 c1       	rjmp	.+934    	; 0x1a34 <DIO_voidGetPinValue+0x402>
	{
		case PORT_A:
			switch(Copy_PinId)
    168e:	8b 81       	ldd	r24, Y+3	; 0x03
    1690:	28 2f       	mov	r18, r24
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	3b 87       	std	Y+11, r19	; 0x0b
    1696:	2a 87       	std	Y+10, r18	; 0x0a
    1698:	8a 85       	ldd	r24, Y+10	; 0x0a
    169a:	9b 85       	ldd	r25, Y+11	; 0x0b
    169c:	83 30       	cpi	r24, 0x03	; 3
    169e:	91 05       	cpc	r25, r1
    16a0:	09 f4       	brne	.+2      	; 0x16a4 <DIO_voidGetPinValue+0x72>
    16a2:	3e c0       	rjmp	.+124    	; 0x1720 <DIO_voidGetPinValue+0xee>
    16a4:	2a 85       	ldd	r18, Y+10	; 0x0a
    16a6:	3b 85       	ldd	r19, Y+11	; 0x0b
    16a8:	24 30       	cpi	r18, 0x04	; 4
    16aa:	31 05       	cpc	r19, r1
    16ac:	7c f4       	brge	.+30     	; 0x16cc <DIO_voidGetPinValue+0x9a>
    16ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    16b0:	9b 85       	ldd	r25, Y+11	; 0x0b
    16b2:	81 30       	cpi	r24, 0x01	; 1
    16b4:	91 05       	cpc	r25, r1
    16b6:	29 f1       	breq	.+74     	; 0x1702 <DIO_voidGetPinValue+0xd0>
    16b8:	2a 85       	ldd	r18, Y+10	; 0x0a
    16ba:	3b 85       	ldd	r19, Y+11	; 0x0b
    16bc:	22 30       	cpi	r18, 0x02	; 2
    16be:	31 05       	cpc	r19, r1
    16c0:	3c f5       	brge	.+78     	; 0x1710 <DIO_voidGetPinValue+0xde>
    16c2:	8a 85       	ldd	r24, Y+10	; 0x0a
    16c4:	9b 85       	ldd	r25, Y+11	; 0x0b
    16c6:	00 97       	sbiw	r24, 0x00	; 0
    16c8:	b1 f0       	breq	.+44     	; 0x16f6 <DIO_voidGetPinValue+0xc4>
    16ca:	b4 c1       	rjmp	.+872    	; 0x1a34 <DIO_voidGetPinValue+0x402>
    16cc:	2a 85       	ldd	r18, Y+10	; 0x0a
    16ce:	3b 85       	ldd	r19, Y+11	; 0x0b
    16d0:	25 30       	cpi	r18, 0x05	; 5
    16d2:	31 05       	cpc	r19, r1
    16d4:	b1 f1       	breq	.+108    	; 0x1742 <DIO_voidGetPinValue+0x110>
    16d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    16d8:	9b 85       	ldd	r25, Y+11	; 0x0b
    16da:	85 30       	cpi	r24, 0x05	; 5
    16dc:	91 05       	cpc	r25, r1
    16de:	4c f1       	brlt	.+82     	; 0x1732 <DIO_voidGetPinValue+0x100>
    16e0:	2a 85       	ldd	r18, Y+10	; 0x0a
    16e2:	3b 85       	ldd	r19, Y+11	; 0x0b
    16e4:	26 30       	cpi	r18, 0x06	; 6
    16e6:	31 05       	cpc	r19, r1
    16e8:	a9 f1       	breq	.+106    	; 0x1754 <DIO_voidGetPinValue+0x122>
    16ea:	8a 85       	ldd	r24, Y+10	; 0x0a
    16ec:	9b 85       	ldd	r25, Y+11	; 0x0b
    16ee:	87 30       	cpi	r24, 0x07	; 7
    16f0:	91 05       	cpc	r25, r1
    16f2:	d1 f1       	breq	.+116    	; 0x1768 <DIO_voidGetPinValue+0x136>
    16f4:	9f c1       	rjmp	.+830    	; 0x1a34 <DIO_voidGetPinValue+0x402>
			{
				case PIN_0 :
						Local_u8Pin = DIO->PINA.Bit.B0;
    16f6:	e0 e3       	ldi	r30, 0x30	; 48
    16f8:	f0 e0       	ldi	r31, 0x00	; 0
    16fa:	81 85       	ldd	r24, Z+9	; 0x09
    16fc:	81 70       	andi	r24, 0x01	; 1
    16fe:	89 83       	std	Y+1, r24	; 0x01
    1700:	99 c1       	rjmp	.+818    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_1 :
						Local_u8Pin = DIO->PINA.Bit.B1;
    1702:	e0 e3       	ldi	r30, 0x30	; 48
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	81 85       	ldd	r24, Z+9	; 0x09
    1708:	86 95       	lsr	r24
    170a:	81 70       	andi	r24, 0x01	; 1
    170c:	89 83       	std	Y+1, r24	; 0x01
    170e:	92 c1       	rjmp	.+804    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_2 :
						Local_u8Pin = DIO->PINA.Bit.B2;
    1710:	e0 e3       	ldi	r30, 0x30	; 48
    1712:	f0 e0       	ldi	r31, 0x00	; 0
    1714:	81 85       	ldd	r24, Z+9	; 0x09
    1716:	86 95       	lsr	r24
    1718:	86 95       	lsr	r24
    171a:	81 70       	andi	r24, 0x01	; 1
    171c:	89 83       	std	Y+1, r24	; 0x01
    171e:	8a c1       	rjmp	.+788    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_3 :
						Local_u8Pin = DIO->PINA.Bit.B3;
    1720:	e0 e3       	ldi	r30, 0x30	; 48
    1722:	f0 e0       	ldi	r31, 0x00	; 0
    1724:	81 85       	ldd	r24, Z+9	; 0x09
    1726:	86 95       	lsr	r24
    1728:	86 95       	lsr	r24
    172a:	86 95       	lsr	r24
    172c:	81 70       	andi	r24, 0x01	; 1
    172e:	89 83       	std	Y+1, r24	; 0x01
    1730:	81 c1       	rjmp	.+770    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_4 :
						Local_u8Pin = DIO->PINA.Bit.B4;
    1732:	e0 e3       	ldi	r30, 0x30	; 48
    1734:	f0 e0       	ldi	r31, 0x00	; 0
    1736:	81 85       	ldd	r24, Z+9	; 0x09
    1738:	82 95       	swap	r24
    173a:	8f 70       	andi	r24, 0x0F	; 15
    173c:	81 70       	andi	r24, 0x01	; 1
    173e:	89 83       	std	Y+1, r24	; 0x01
    1740:	79 c1       	rjmp	.+754    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_5 :
						Local_u8Pin = DIO->PINA.Bit.B5;
    1742:	e0 e3       	ldi	r30, 0x30	; 48
    1744:	f0 e0       	ldi	r31, 0x00	; 0
    1746:	81 85       	ldd	r24, Z+9	; 0x09
    1748:	82 95       	swap	r24
    174a:	86 95       	lsr	r24
    174c:	87 70       	andi	r24, 0x07	; 7
    174e:	81 70       	andi	r24, 0x01	; 1
    1750:	89 83       	std	Y+1, r24	; 0x01
    1752:	70 c1       	rjmp	.+736    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_6 :
						Local_u8Pin = DIO->PINA.Bit.B6;
    1754:	e0 e3       	ldi	r30, 0x30	; 48
    1756:	f0 e0       	ldi	r31, 0x00	; 0
    1758:	81 85       	ldd	r24, Z+9	; 0x09
    175a:	82 95       	swap	r24
    175c:	86 95       	lsr	r24
    175e:	86 95       	lsr	r24
    1760:	83 70       	andi	r24, 0x03	; 3
    1762:	81 70       	andi	r24, 0x01	; 1
    1764:	89 83       	std	Y+1, r24	; 0x01
    1766:	66 c1       	rjmp	.+716    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_7 :
						Local_u8Pin = DIO->PINA.Bit.B7;
    1768:	e0 e3       	ldi	r30, 0x30	; 48
    176a:	f0 e0       	ldi	r31, 0x00	; 0
    176c:	81 85       	ldd	r24, Z+9	; 0x09
    176e:	88 1f       	adc	r24, r24
    1770:	88 27       	eor	r24, r24
    1772:	88 1f       	adc	r24, r24
    1774:	89 83       	std	Y+1, r24	; 0x01
    1776:	5e c1       	rjmp	.+700    	; 0x1a34 <DIO_voidGetPinValue+0x402>
				default: break;
			}
			break;

		case PORT_B:
			switch(Copy_PinId)
    1778:	8b 81       	ldd	r24, Y+3	; 0x03
    177a:	28 2f       	mov	r18, r24
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	39 87       	std	Y+9, r19	; 0x09
    1780:	28 87       	std	Y+8, r18	; 0x08
    1782:	88 85       	ldd	r24, Y+8	; 0x08
    1784:	99 85       	ldd	r25, Y+9	; 0x09
    1786:	83 30       	cpi	r24, 0x03	; 3
    1788:	91 05       	cpc	r25, r1
    178a:	09 f4       	brne	.+2      	; 0x178e <DIO_voidGetPinValue+0x15c>
    178c:	3e c0       	rjmp	.+124    	; 0x180a <DIO_voidGetPinValue+0x1d8>
    178e:	28 85       	ldd	r18, Y+8	; 0x08
    1790:	39 85       	ldd	r19, Y+9	; 0x09
    1792:	24 30       	cpi	r18, 0x04	; 4
    1794:	31 05       	cpc	r19, r1
    1796:	7c f4       	brge	.+30     	; 0x17b6 <DIO_voidGetPinValue+0x184>
    1798:	88 85       	ldd	r24, Y+8	; 0x08
    179a:	99 85       	ldd	r25, Y+9	; 0x09
    179c:	81 30       	cpi	r24, 0x01	; 1
    179e:	91 05       	cpc	r25, r1
    17a0:	29 f1       	breq	.+74     	; 0x17ec <DIO_voidGetPinValue+0x1ba>
    17a2:	28 85       	ldd	r18, Y+8	; 0x08
    17a4:	39 85       	ldd	r19, Y+9	; 0x09
    17a6:	22 30       	cpi	r18, 0x02	; 2
    17a8:	31 05       	cpc	r19, r1
    17aa:	3c f5       	brge	.+78     	; 0x17fa <DIO_voidGetPinValue+0x1c8>
    17ac:	88 85       	ldd	r24, Y+8	; 0x08
    17ae:	99 85       	ldd	r25, Y+9	; 0x09
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	b1 f0       	breq	.+44     	; 0x17e0 <DIO_voidGetPinValue+0x1ae>
    17b4:	3f c1       	rjmp	.+638    	; 0x1a34 <DIO_voidGetPinValue+0x402>
    17b6:	28 85       	ldd	r18, Y+8	; 0x08
    17b8:	39 85       	ldd	r19, Y+9	; 0x09
    17ba:	25 30       	cpi	r18, 0x05	; 5
    17bc:	31 05       	cpc	r19, r1
    17be:	b1 f1       	breq	.+108    	; 0x182c <DIO_voidGetPinValue+0x1fa>
    17c0:	88 85       	ldd	r24, Y+8	; 0x08
    17c2:	99 85       	ldd	r25, Y+9	; 0x09
    17c4:	85 30       	cpi	r24, 0x05	; 5
    17c6:	91 05       	cpc	r25, r1
    17c8:	4c f1       	brlt	.+82     	; 0x181c <DIO_voidGetPinValue+0x1ea>
    17ca:	28 85       	ldd	r18, Y+8	; 0x08
    17cc:	39 85       	ldd	r19, Y+9	; 0x09
    17ce:	26 30       	cpi	r18, 0x06	; 6
    17d0:	31 05       	cpc	r19, r1
    17d2:	a9 f1       	breq	.+106    	; 0x183e <DIO_voidGetPinValue+0x20c>
    17d4:	88 85       	ldd	r24, Y+8	; 0x08
    17d6:	99 85       	ldd	r25, Y+9	; 0x09
    17d8:	87 30       	cpi	r24, 0x07	; 7
    17da:	91 05       	cpc	r25, r1
    17dc:	d1 f1       	breq	.+116    	; 0x1852 <DIO_voidGetPinValue+0x220>
    17de:	2a c1       	rjmp	.+596    	; 0x1a34 <DIO_voidGetPinValue+0x402>
			{
				case PIN_0 :
						Local_u8Pin = DIO->PINB.Bit.B0;
    17e0:	e0 e3       	ldi	r30, 0x30	; 48
    17e2:	f0 e0       	ldi	r31, 0x00	; 0
    17e4:	86 81       	ldd	r24, Z+6	; 0x06
    17e6:	81 70       	andi	r24, 0x01	; 1
    17e8:	89 83       	std	Y+1, r24	; 0x01
    17ea:	24 c1       	rjmp	.+584    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_1 :
						Local_u8Pin = DIO->PINB.Bit.B1;
    17ec:	e0 e3       	ldi	r30, 0x30	; 48
    17ee:	f0 e0       	ldi	r31, 0x00	; 0
    17f0:	86 81       	ldd	r24, Z+6	; 0x06
    17f2:	86 95       	lsr	r24
    17f4:	81 70       	andi	r24, 0x01	; 1
    17f6:	89 83       	std	Y+1, r24	; 0x01
    17f8:	1d c1       	rjmp	.+570    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_2 :
						Local_u8Pin = DIO->PINB.Bit.B2;
    17fa:	e0 e3       	ldi	r30, 0x30	; 48
    17fc:	f0 e0       	ldi	r31, 0x00	; 0
    17fe:	86 81       	ldd	r24, Z+6	; 0x06
    1800:	86 95       	lsr	r24
    1802:	86 95       	lsr	r24
    1804:	81 70       	andi	r24, 0x01	; 1
    1806:	89 83       	std	Y+1, r24	; 0x01
    1808:	15 c1       	rjmp	.+554    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_3 :
						Local_u8Pin = DIO->PINB.Bit.B3;
    180a:	e0 e3       	ldi	r30, 0x30	; 48
    180c:	f0 e0       	ldi	r31, 0x00	; 0
    180e:	86 81       	ldd	r24, Z+6	; 0x06
    1810:	86 95       	lsr	r24
    1812:	86 95       	lsr	r24
    1814:	86 95       	lsr	r24
    1816:	81 70       	andi	r24, 0x01	; 1
    1818:	89 83       	std	Y+1, r24	; 0x01
    181a:	0c c1       	rjmp	.+536    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_4 :
						Local_u8Pin = DIO->PINB.Bit.B4;
    181c:	e0 e3       	ldi	r30, 0x30	; 48
    181e:	f0 e0       	ldi	r31, 0x00	; 0
    1820:	86 81       	ldd	r24, Z+6	; 0x06
    1822:	82 95       	swap	r24
    1824:	8f 70       	andi	r24, 0x0F	; 15
    1826:	81 70       	andi	r24, 0x01	; 1
    1828:	89 83       	std	Y+1, r24	; 0x01
    182a:	04 c1       	rjmp	.+520    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_5 :
						Local_u8Pin = DIO->PINB.Bit.B5;
    182c:	e0 e3       	ldi	r30, 0x30	; 48
    182e:	f0 e0       	ldi	r31, 0x00	; 0
    1830:	86 81       	ldd	r24, Z+6	; 0x06
    1832:	82 95       	swap	r24
    1834:	86 95       	lsr	r24
    1836:	87 70       	andi	r24, 0x07	; 7
    1838:	81 70       	andi	r24, 0x01	; 1
    183a:	89 83       	std	Y+1, r24	; 0x01
    183c:	fb c0       	rjmp	.+502    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_6 :
						Local_u8Pin = DIO->PINB.Bit.B6;
    183e:	e0 e3       	ldi	r30, 0x30	; 48
    1840:	f0 e0       	ldi	r31, 0x00	; 0
    1842:	86 81       	ldd	r24, Z+6	; 0x06
    1844:	82 95       	swap	r24
    1846:	86 95       	lsr	r24
    1848:	86 95       	lsr	r24
    184a:	83 70       	andi	r24, 0x03	; 3
    184c:	81 70       	andi	r24, 0x01	; 1
    184e:	89 83       	std	Y+1, r24	; 0x01
    1850:	f1 c0       	rjmp	.+482    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_7 :
						Local_u8Pin = DIO->PINB.Bit.B7;
    1852:	e0 e3       	ldi	r30, 0x30	; 48
    1854:	f0 e0       	ldi	r31, 0x00	; 0
    1856:	86 81       	ldd	r24, Z+6	; 0x06
    1858:	88 1f       	adc	r24, r24
    185a:	88 27       	eor	r24, r24
    185c:	88 1f       	adc	r24, r24
    185e:	89 83       	std	Y+1, r24	; 0x01
    1860:	e9 c0       	rjmp	.+466    	; 0x1a34 <DIO_voidGetPinValue+0x402>
			}
			break;


		case PORT_C:
			switch(Copy_PinId)
    1862:	8b 81       	ldd	r24, Y+3	; 0x03
    1864:	28 2f       	mov	r18, r24
    1866:	30 e0       	ldi	r19, 0x00	; 0
    1868:	3f 83       	std	Y+7, r19	; 0x07
    186a:	2e 83       	std	Y+6, r18	; 0x06
    186c:	8e 81       	ldd	r24, Y+6	; 0x06
    186e:	9f 81       	ldd	r25, Y+7	; 0x07
    1870:	83 30       	cpi	r24, 0x03	; 3
    1872:	91 05       	cpc	r25, r1
    1874:	09 f4       	brne	.+2      	; 0x1878 <DIO_voidGetPinValue+0x246>
    1876:	3e c0       	rjmp	.+124    	; 0x18f4 <DIO_voidGetPinValue+0x2c2>
    1878:	2e 81       	ldd	r18, Y+6	; 0x06
    187a:	3f 81       	ldd	r19, Y+7	; 0x07
    187c:	24 30       	cpi	r18, 0x04	; 4
    187e:	31 05       	cpc	r19, r1
    1880:	7c f4       	brge	.+30     	; 0x18a0 <DIO_voidGetPinValue+0x26e>
    1882:	8e 81       	ldd	r24, Y+6	; 0x06
    1884:	9f 81       	ldd	r25, Y+7	; 0x07
    1886:	81 30       	cpi	r24, 0x01	; 1
    1888:	91 05       	cpc	r25, r1
    188a:	29 f1       	breq	.+74     	; 0x18d6 <DIO_voidGetPinValue+0x2a4>
    188c:	2e 81       	ldd	r18, Y+6	; 0x06
    188e:	3f 81       	ldd	r19, Y+7	; 0x07
    1890:	22 30       	cpi	r18, 0x02	; 2
    1892:	31 05       	cpc	r19, r1
    1894:	3c f5       	brge	.+78     	; 0x18e4 <DIO_voidGetPinValue+0x2b2>
    1896:	8e 81       	ldd	r24, Y+6	; 0x06
    1898:	9f 81       	ldd	r25, Y+7	; 0x07
    189a:	00 97       	sbiw	r24, 0x00	; 0
    189c:	b1 f0       	breq	.+44     	; 0x18ca <DIO_voidGetPinValue+0x298>
    189e:	ca c0       	rjmp	.+404    	; 0x1a34 <DIO_voidGetPinValue+0x402>
    18a0:	2e 81       	ldd	r18, Y+6	; 0x06
    18a2:	3f 81       	ldd	r19, Y+7	; 0x07
    18a4:	25 30       	cpi	r18, 0x05	; 5
    18a6:	31 05       	cpc	r19, r1
    18a8:	b1 f1       	breq	.+108    	; 0x1916 <DIO_voidGetPinValue+0x2e4>
    18aa:	8e 81       	ldd	r24, Y+6	; 0x06
    18ac:	9f 81       	ldd	r25, Y+7	; 0x07
    18ae:	85 30       	cpi	r24, 0x05	; 5
    18b0:	91 05       	cpc	r25, r1
    18b2:	4c f1       	brlt	.+82     	; 0x1906 <DIO_voidGetPinValue+0x2d4>
    18b4:	2e 81       	ldd	r18, Y+6	; 0x06
    18b6:	3f 81       	ldd	r19, Y+7	; 0x07
    18b8:	26 30       	cpi	r18, 0x06	; 6
    18ba:	31 05       	cpc	r19, r1
    18bc:	a9 f1       	breq	.+106    	; 0x1928 <DIO_voidGetPinValue+0x2f6>
    18be:	8e 81       	ldd	r24, Y+6	; 0x06
    18c0:	9f 81       	ldd	r25, Y+7	; 0x07
    18c2:	87 30       	cpi	r24, 0x07	; 7
    18c4:	91 05       	cpc	r25, r1
    18c6:	d1 f1       	breq	.+116    	; 0x193c <DIO_voidGetPinValue+0x30a>
    18c8:	b5 c0       	rjmp	.+362    	; 0x1a34 <DIO_voidGetPinValue+0x402>
			{
				case PIN_0 :
						Local_u8Pin = DIO->PINC.Bit.B0;
    18ca:	e0 e3       	ldi	r30, 0x30	; 48
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	83 81       	ldd	r24, Z+3	; 0x03
    18d0:	81 70       	andi	r24, 0x01	; 1
    18d2:	89 83       	std	Y+1, r24	; 0x01
    18d4:	af c0       	rjmp	.+350    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_1 :
						Local_u8Pin = DIO->PINC.Bit.B1;
    18d6:	e0 e3       	ldi	r30, 0x30	; 48
    18d8:	f0 e0       	ldi	r31, 0x00	; 0
    18da:	83 81       	ldd	r24, Z+3	; 0x03
    18dc:	86 95       	lsr	r24
    18de:	81 70       	andi	r24, 0x01	; 1
    18e0:	89 83       	std	Y+1, r24	; 0x01
    18e2:	a8 c0       	rjmp	.+336    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_2 :
						Local_u8Pin = DIO->PINC.Bit.B2;
    18e4:	e0 e3       	ldi	r30, 0x30	; 48
    18e6:	f0 e0       	ldi	r31, 0x00	; 0
    18e8:	83 81       	ldd	r24, Z+3	; 0x03
    18ea:	86 95       	lsr	r24
    18ec:	86 95       	lsr	r24
    18ee:	81 70       	andi	r24, 0x01	; 1
    18f0:	89 83       	std	Y+1, r24	; 0x01
    18f2:	a0 c0       	rjmp	.+320    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_3 :
						Local_u8Pin = DIO->PINC.Bit.B3;
    18f4:	e0 e3       	ldi	r30, 0x30	; 48
    18f6:	f0 e0       	ldi	r31, 0x00	; 0
    18f8:	83 81       	ldd	r24, Z+3	; 0x03
    18fa:	86 95       	lsr	r24
    18fc:	86 95       	lsr	r24
    18fe:	86 95       	lsr	r24
    1900:	81 70       	andi	r24, 0x01	; 1
    1902:	89 83       	std	Y+1, r24	; 0x01
    1904:	97 c0       	rjmp	.+302    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_4 :
						Local_u8Pin = DIO->PINC.Bit.B4;
    1906:	e0 e3       	ldi	r30, 0x30	; 48
    1908:	f0 e0       	ldi	r31, 0x00	; 0
    190a:	83 81       	ldd	r24, Z+3	; 0x03
    190c:	82 95       	swap	r24
    190e:	8f 70       	andi	r24, 0x0F	; 15
    1910:	81 70       	andi	r24, 0x01	; 1
    1912:	89 83       	std	Y+1, r24	; 0x01
    1914:	8f c0       	rjmp	.+286    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_5 :
						Local_u8Pin = DIO->PINC.Bit.B5;
    1916:	e0 e3       	ldi	r30, 0x30	; 48
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	83 81       	ldd	r24, Z+3	; 0x03
    191c:	82 95       	swap	r24
    191e:	86 95       	lsr	r24
    1920:	87 70       	andi	r24, 0x07	; 7
    1922:	81 70       	andi	r24, 0x01	; 1
    1924:	89 83       	std	Y+1, r24	; 0x01
    1926:	86 c0       	rjmp	.+268    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_6 :
						Local_u8Pin = DIO->PINC.Bit.B6;
    1928:	e0 e3       	ldi	r30, 0x30	; 48
    192a:	f0 e0       	ldi	r31, 0x00	; 0
    192c:	83 81       	ldd	r24, Z+3	; 0x03
    192e:	82 95       	swap	r24
    1930:	86 95       	lsr	r24
    1932:	86 95       	lsr	r24
    1934:	83 70       	andi	r24, 0x03	; 3
    1936:	81 70       	andi	r24, 0x01	; 1
    1938:	89 83       	std	Y+1, r24	; 0x01
    193a:	7c c0       	rjmp	.+248    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_7 :
						Local_u8Pin = DIO->PINC.Bit.B7;
    193c:	e0 e3       	ldi	r30, 0x30	; 48
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	83 81       	ldd	r24, Z+3	; 0x03
    1942:	88 1f       	adc	r24, r24
    1944:	88 27       	eor	r24, r24
    1946:	88 1f       	adc	r24, r24
    1948:	89 83       	std	Y+1, r24	; 0x01
    194a:	74 c0       	rjmp	.+232    	; 0x1a34 <DIO_voidGetPinValue+0x402>
				default: break;
			}
			break;

		case PORT_D:
			switch(Copy_PinId)
    194c:	8b 81       	ldd	r24, Y+3	; 0x03
    194e:	28 2f       	mov	r18, r24
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	3d 83       	std	Y+5, r19	; 0x05
    1954:	2c 83       	std	Y+4, r18	; 0x04
    1956:	8c 81       	ldd	r24, Y+4	; 0x04
    1958:	9d 81       	ldd	r25, Y+5	; 0x05
    195a:	83 30       	cpi	r24, 0x03	; 3
    195c:	91 05       	cpc	r25, r1
    195e:	09 f4       	brne	.+2      	; 0x1962 <DIO_voidGetPinValue+0x330>
    1960:	3e c0       	rjmp	.+124    	; 0x19de <DIO_voidGetPinValue+0x3ac>
    1962:	2c 81       	ldd	r18, Y+4	; 0x04
    1964:	3d 81       	ldd	r19, Y+5	; 0x05
    1966:	24 30       	cpi	r18, 0x04	; 4
    1968:	31 05       	cpc	r19, r1
    196a:	7c f4       	brge	.+30     	; 0x198a <DIO_voidGetPinValue+0x358>
    196c:	8c 81       	ldd	r24, Y+4	; 0x04
    196e:	9d 81       	ldd	r25, Y+5	; 0x05
    1970:	81 30       	cpi	r24, 0x01	; 1
    1972:	91 05       	cpc	r25, r1
    1974:	29 f1       	breq	.+74     	; 0x19c0 <DIO_voidGetPinValue+0x38e>
    1976:	2c 81       	ldd	r18, Y+4	; 0x04
    1978:	3d 81       	ldd	r19, Y+5	; 0x05
    197a:	22 30       	cpi	r18, 0x02	; 2
    197c:	31 05       	cpc	r19, r1
    197e:	3c f5       	brge	.+78     	; 0x19ce <DIO_voidGetPinValue+0x39c>
    1980:	8c 81       	ldd	r24, Y+4	; 0x04
    1982:	9d 81       	ldd	r25, Y+5	; 0x05
    1984:	00 97       	sbiw	r24, 0x00	; 0
    1986:	b1 f0       	breq	.+44     	; 0x19b4 <DIO_voidGetPinValue+0x382>
    1988:	55 c0       	rjmp	.+170    	; 0x1a34 <DIO_voidGetPinValue+0x402>
    198a:	2c 81       	ldd	r18, Y+4	; 0x04
    198c:	3d 81       	ldd	r19, Y+5	; 0x05
    198e:	25 30       	cpi	r18, 0x05	; 5
    1990:	31 05       	cpc	r19, r1
    1992:	b1 f1       	breq	.+108    	; 0x1a00 <DIO_voidGetPinValue+0x3ce>
    1994:	8c 81       	ldd	r24, Y+4	; 0x04
    1996:	9d 81       	ldd	r25, Y+5	; 0x05
    1998:	85 30       	cpi	r24, 0x05	; 5
    199a:	91 05       	cpc	r25, r1
    199c:	4c f1       	brlt	.+82     	; 0x19f0 <DIO_voidGetPinValue+0x3be>
    199e:	2c 81       	ldd	r18, Y+4	; 0x04
    19a0:	3d 81       	ldd	r19, Y+5	; 0x05
    19a2:	26 30       	cpi	r18, 0x06	; 6
    19a4:	31 05       	cpc	r19, r1
    19a6:	a9 f1       	breq	.+106    	; 0x1a12 <DIO_voidGetPinValue+0x3e0>
    19a8:	8c 81       	ldd	r24, Y+4	; 0x04
    19aa:	9d 81       	ldd	r25, Y+5	; 0x05
    19ac:	87 30       	cpi	r24, 0x07	; 7
    19ae:	91 05       	cpc	r25, r1
    19b0:	d1 f1       	breq	.+116    	; 0x1a26 <DIO_voidGetPinValue+0x3f4>
    19b2:	40 c0       	rjmp	.+128    	; 0x1a34 <DIO_voidGetPinValue+0x402>
			{
				case PIN_0 :
						Local_u8Pin = DIO->PIND.Bit.B0;
    19b4:	e0 e3       	ldi	r30, 0x30	; 48
    19b6:	f0 e0       	ldi	r31, 0x00	; 0
    19b8:	80 81       	ld	r24, Z
    19ba:	81 70       	andi	r24, 0x01	; 1
    19bc:	89 83       	std	Y+1, r24	; 0x01
    19be:	3a c0       	rjmp	.+116    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_1 :
						Local_u8Pin = DIO->PIND.Bit.B1;
    19c0:	e0 e3       	ldi	r30, 0x30	; 48
    19c2:	f0 e0       	ldi	r31, 0x00	; 0
    19c4:	80 81       	ld	r24, Z
    19c6:	86 95       	lsr	r24
    19c8:	81 70       	andi	r24, 0x01	; 1
    19ca:	89 83       	std	Y+1, r24	; 0x01
    19cc:	33 c0       	rjmp	.+102    	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_2 :
						Local_u8Pin = DIO->PIND.Bit.B2;
    19ce:	e0 e3       	ldi	r30, 0x30	; 48
    19d0:	f0 e0       	ldi	r31, 0x00	; 0
    19d2:	80 81       	ld	r24, Z
    19d4:	86 95       	lsr	r24
    19d6:	86 95       	lsr	r24
    19d8:	81 70       	andi	r24, 0x01	; 1
    19da:	89 83       	std	Y+1, r24	; 0x01
    19dc:	2b c0       	rjmp	.+86     	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_3 :
						Local_u8Pin = DIO->PIND.Bit.B3;
    19de:	e0 e3       	ldi	r30, 0x30	; 48
    19e0:	f0 e0       	ldi	r31, 0x00	; 0
    19e2:	80 81       	ld	r24, Z
    19e4:	86 95       	lsr	r24
    19e6:	86 95       	lsr	r24
    19e8:	86 95       	lsr	r24
    19ea:	81 70       	andi	r24, 0x01	; 1
    19ec:	89 83       	std	Y+1, r24	; 0x01
    19ee:	22 c0       	rjmp	.+68     	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_4 :
						Local_u8Pin = DIO->PIND.Bit.B4;
    19f0:	e0 e3       	ldi	r30, 0x30	; 48
    19f2:	f0 e0       	ldi	r31, 0x00	; 0
    19f4:	80 81       	ld	r24, Z
    19f6:	82 95       	swap	r24
    19f8:	8f 70       	andi	r24, 0x0F	; 15
    19fa:	81 70       	andi	r24, 0x01	; 1
    19fc:	89 83       	std	Y+1, r24	; 0x01
    19fe:	1a c0       	rjmp	.+52     	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_5 :
						Local_u8Pin = DIO->PIND.Bit.B5;
    1a00:	e0 e3       	ldi	r30, 0x30	; 48
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	80 81       	ld	r24, Z
    1a06:	82 95       	swap	r24
    1a08:	86 95       	lsr	r24
    1a0a:	87 70       	andi	r24, 0x07	; 7
    1a0c:	81 70       	andi	r24, 0x01	; 1
    1a0e:	89 83       	std	Y+1, r24	; 0x01
    1a10:	11 c0       	rjmp	.+34     	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_6 :
						Local_u8Pin = DIO->PIND.Bit.B6;
    1a12:	e0 e3       	ldi	r30, 0x30	; 48
    1a14:	f0 e0       	ldi	r31, 0x00	; 0
    1a16:	80 81       	ld	r24, Z
    1a18:	82 95       	swap	r24
    1a1a:	86 95       	lsr	r24
    1a1c:	86 95       	lsr	r24
    1a1e:	83 70       	andi	r24, 0x03	; 3
    1a20:	81 70       	andi	r24, 0x01	; 1
    1a22:	89 83       	std	Y+1, r24	; 0x01
    1a24:	07 c0       	rjmp	.+14     	; 0x1a34 <DIO_voidGetPinValue+0x402>
						break;
				case PIN_7 :
						Local_u8Pin = DIO->PIND.Bit.B7;
    1a26:	e0 e3       	ldi	r30, 0x30	; 48
    1a28:	f0 e0       	ldi	r31, 0x00	; 0
    1a2a:	80 81       	ld	r24, Z
    1a2c:	88 1f       	adc	r24, r24
    1a2e:	88 27       	eor	r24, r24
    1a30:	88 1f       	adc	r24, r24
    1a32:	89 83       	std	Y+1, r24	; 0x01
						break;
				default: break;
			}
			break;
	}
	return Local_u8Pin;
    1a34:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a36:	2d 96       	adiw	r28, 0x0d	; 13
    1a38:	0f b6       	in	r0, 0x3f	; 63
    1a3a:	f8 94       	cli
    1a3c:	de bf       	out	0x3e, r29	; 62
    1a3e:	0f be       	out	0x3f, r0	; 63
    1a40:	cd bf       	out	0x3d, r28	; 61
    1a42:	cf 91       	pop	r28
    1a44:	df 91       	pop	r29
    1a46:	08 95       	ret

00001a48 <DIO_voidSetPortirection>:

void DIO_voidSetPortirection(PORT_t Copy_PortId,DIRECTION_t Copy_Direction)
{
    1a48:	df 93       	push	r29
    1a4a:	cf 93       	push	r28
    1a4c:	00 d0       	rcall	.+0      	; 0x1a4e <DIO_voidSetPortirection+0x6>
    1a4e:	00 d0       	rcall	.+0      	; 0x1a50 <DIO_voidSetPortirection+0x8>
    1a50:	cd b7       	in	r28, 0x3d	; 61
    1a52:	de b7       	in	r29, 0x3e	; 62
    1a54:	89 83       	std	Y+1, r24	; 0x01
    1a56:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_PortId)
    1a58:	89 81       	ldd	r24, Y+1	; 0x01
    1a5a:	28 2f       	mov	r18, r24
    1a5c:	30 e0       	ldi	r19, 0x00	; 0
    1a5e:	3c 83       	std	Y+4, r19	; 0x04
    1a60:	2b 83       	std	Y+3, r18	; 0x03
    1a62:	8b 81       	ldd	r24, Y+3	; 0x03
    1a64:	9c 81       	ldd	r25, Y+4	; 0x04
    1a66:	81 30       	cpi	r24, 0x01	; 1
    1a68:	91 05       	cpc	r25, r1
    1a6a:	21 f1       	breq	.+72     	; 0x1ab4 <DIO_voidSetPortirection+0x6c>
    1a6c:	2b 81       	ldd	r18, Y+3	; 0x03
    1a6e:	3c 81       	ldd	r19, Y+4	; 0x04
    1a70:	22 30       	cpi	r18, 0x02	; 2
    1a72:	31 05       	cpc	r19, r1
    1a74:	2c f4       	brge	.+10     	; 0x1a80 <DIO_voidSetPortirection+0x38>
    1a76:	8b 81       	ldd	r24, Y+3	; 0x03
    1a78:	9c 81       	ldd	r25, Y+4	; 0x04
    1a7a:	00 97       	sbiw	r24, 0x00	; 0
    1a7c:	61 f0       	breq	.+24     	; 0x1a96 <DIO_voidSetPortirection+0x4e>
    1a7e:	46 c0       	rjmp	.+140    	; 0x1b0c <DIO_voidSetPortirection+0xc4>
    1a80:	2b 81       	ldd	r18, Y+3	; 0x03
    1a82:	3c 81       	ldd	r19, Y+4	; 0x04
    1a84:	22 30       	cpi	r18, 0x02	; 2
    1a86:	31 05       	cpc	r19, r1
    1a88:	21 f1       	breq	.+72     	; 0x1ad2 <DIO_voidSetPortirection+0x8a>
    1a8a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a8c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a8e:	83 30       	cpi	r24, 0x03	; 3
    1a90:	91 05       	cpc	r25, r1
    1a92:	71 f1       	breq	.+92     	; 0x1af0 <DIO_voidSetPortirection+0xa8>
    1a94:	3b c0       	rjmp	.+118    	; 0x1b0c <DIO_voidSetPortirection+0xc4>
		{
			case PORT_A:
				if(Copy_Direction == INPUT)
    1a96:	8a 81       	ldd	r24, Y+2	; 0x02
    1a98:	88 23       	and	r24, r24
    1a9a:	21 f4       	brne	.+8      	; 0x1aa4 <DIO_voidSetPortirection+0x5c>
				{
					DIO->DDRA.All_Bits = 0;
    1a9c:	e0 e3       	ldi	r30, 0x30	; 48
    1a9e:	f0 e0       	ldi	r31, 0x00	; 0
    1aa0:	12 86       	std	Z+10, r1	; 0x0a
    1aa2:	34 c0       	rjmp	.+104    	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				}
				else if(Copy_Direction == OUTPUT)
    1aa4:	8a 81       	ldd	r24, Y+2	; 0x02
    1aa6:	81 30       	cpi	r24, 0x01	; 1
    1aa8:	89 f5       	brne	.+98     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				{
					DIO->DDRA.All_Bits = 0xFF;
    1aaa:	e0 e3       	ldi	r30, 0x30	; 48
    1aac:	f0 e0       	ldi	r31, 0x00	; 0
    1aae:	8f ef       	ldi	r24, 0xFF	; 255
    1ab0:	82 87       	std	Z+10, r24	; 0x0a
    1ab2:	2c c0       	rjmp	.+88     	; 0x1b0c <DIO_voidSetPortirection+0xc4>

				}
				break;

			case PORT_B:
				if(Copy_Direction == INPUT)
    1ab4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ab6:	88 23       	and	r24, r24
    1ab8:	21 f4       	brne	.+8      	; 0x1ac2 <DIO_voidSetPortirection+0x7a>
				{
					DIO->DDRB.All_Bits = 0;
    1aba:	e0 e3       	ldi	r30, 0x30	; 48
    1abc:	f0 e0       	ldi	r31, 0x00	; 0
    1abe:	17 82       	std	Z+7, r1	; 0x07
    1ac0:	25 c0       	rjmp	.+74     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				}
				else if(Copy_Direction == OUTPUT)
    1ac2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ac4:	81 30       	cpi	r24, 0x01	; 1
    1ac6:	11 f5       	brne	.+68     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				{
					DIO->DDRB.All_Bits = 0xFF;
    1ac8:	e0 e3       	ldi	r30, 0x30	; 48
    1aca:	f0 e0       	ldi	r31, 0x00	; 0
    1acc:	8f ef       	ldi	r24, 0xFF	; 255
    1ace:	87 83       	std	Z+7, r24	; 0x07
    1ad0:	1d c0       	rjmp	.+58     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				}
				break;


			case PORT_C:
				if(Copy_Direction == INPUT)
    1ad2:	8a 81       	ldd	r24, Y+2	; 0x02
    1ad4:	88 23       	and	r24, r24
    1ad6:	21 f4       	brne	.+8      	; 0x1ae0 <DIO_voidSetPortirection+0x98>
				{
					DIO->DDRC.All_Bits = 0;
    1ad8:	e0 e3       	ldi	r30, 0x30	; 48
    1ada:	f0 e0       	ldi	r31, 0x00	; 0
    1adc:	14 82       	std	Z+4, r1	; 0x04
    1ade:	16 c0       	rjmp	.+44     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				}
				else if(Copy_Direction == OUTPUT)
    1ae0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ae2:	81 30       	cpi	r24, 0x01	; 1
    1ae4:	99 f4       	brne	.+38     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				{
					DIO->DDRC.All_Bits = 0xFF;
    1ae6:	e0 e3       	ldi	r30, 0x30	; 48
    1ae8:	f0 e0       	ldi	r31, 0x00	; 0
    1aea:	8f ef       	ldi	r24, 0xFF	; 255
    1aec:	84 83       	std	Z+4, r24	; 0x04
    1aee:	0e c0       	rjmp	.+28     	; 0x1b0c <DIO_voidSetPortirection+0xc4>

				}
				break;

			case PORT_D:
				if(Copy_Direction == INPUT)
    1af0:	8a 81       	ldd	r24, Y+2	; 0x02
    1af2:	88 23       	and	r24, r24
    1af4:	21 f4       	brne	.+8      	; 0x1afe <DIO_voidSetPortirection+0xb6>
				{
					DIO->DDRD.All_Bits = 0;
    1af6:	e0 e3       	ldi	r30, 0x30	; 48
    1af8:	f0 e0       	ldi	r31, 0x00	; 0
    1afa:	11 82       	std	Z+1, r1	; 0x01
    1afc:	07 c0       	rjmp	.+14     	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				}
				else if(Copy_Direction == OUTPUT)
    1afe:	8a 81       	ldd	r24, Y+2	; 0x02
    1b00:	81 30       	cpi	r24, 0x01	; 1
    1b02:	21 f4       	brne	.+8      	; 0x1b0c <DIO_voidSetPortirection+0xc4>
				{
					DIO->DDRD.All_Bits = 0xFF;
    1b04:	e0 e3       	ldi	r30, 0x30	; 48
    1b06:	f0 e0       	ldi	r31, 0x00	; 0
    1b08:	8f ef       	ldi	r24, 0xFF	; 255
    1b0a:	81 83       	std	Z+1, r24	; 0x01

				}
				break;
		}
}
    1b0c:	0f 90       	pop	r0
    1b0e:	0f 90       	pop	r0
    1b10:	0f 90       	pop	r0
    1b12:	0f 90       	pop	r0
    1b14:	cf 91       	pop	r28
    1b16:	df 91       	pop	r29
    1b18:	08 95       	ret

00001b1a <DIO_voidSetPortValue>:
void DIO_voidSetPortValue(PORT_t Copy_PortId,VALUE_t Copy_Value)
{
    1b1a:	df 93       	push	r29
    1b1c:	cf 93       	push	r28
    1b1e:	00 d0       	rcall	.+0      	; 0x1b20 <DIO_voidSetPortValue+0x6>
    1b20:	00 d0       	rcall	.+0      	; 0x1b22 <DIO_voidSetPortValue+0x8>
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
    1b26:	89 83       	std	Y+1, r24	; 0x01
    1b28:	6a 83       	std	Y+2, r22	; 0x02
	switch(Copy_PortId)
    1b2a:	89 81       	ldd	r24, Y+1	; 0x01
    1b2c:	28 2f       	mov	r18, r24
    1b2e:	30 e0       	ldi	r19, 0x00	; 0
    1b30:	3c 83       	std	Y+4, r19	; 0x04
    1b32:	2b 83       	std	Y+3, r18	; 0x03
    1b34:	8b 81       	ldd	r24, Y+3	; 0x03
    1b36:	9c 81       	ldd	r25, Y+4	; 0x04
    1b38:	81 30       	cpi	r24, 0x01	; 1
    1b3a:	91 05       	cpc	r25, r1
    1b3c:	21 f1       	breq	.+72     	; 0x1b86 <DIO_voidSetPortValue+0x6c>
    1b3e:	2b 81       	ldd	r18, Y+3	; 0x03
    1b40:	3c 81       	ldd	r19, Y+4	; 0x04
    1b42:	22 30       	cpi	r18, 0x02	; 2
    1b44:	31 05       	cpc	r19, r1
    1b46:	2c f4       	brge	.+10     	; 0x1b52 <DIO_voidSetPortValue+0x38>
    1b48:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b4c:	00 97       	sbiw	r24, 0x00	; 0
    1b4e:	61 f0       	breq	.+24     	; 0x1b68 <DIO_voidSetPortValue+0x4e>
    1b50:	46 c0       	rjmp	.+140    	; 0x1bde <DIO_voidSetPortValue+0xc4>
    1b52:	2b 81       	ldd	r18, Y+3	; 0x03
    1b54:	3c 81       	ldd	r19, Y+4	; 0x04
    1b56:	22 30       	cpi	r18, 0x02	; 2
    1b58:	31 05       	cpc	r19, r1
    1b5a:	21 f1       	breq	.+72     	; 0x1ba4 <DIO_voidSetPortValue+0x8a>
    1b5c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b5e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b60:	83 30       	cpi	r24, 0x03	; 3
    1b62:	91 05       	cpc	r25, r1
    1b64:	71 f1       	breq	.+92     	; 0x1bc2 <DIO_voidSetPortValue+0xa8>
    1b66:	3b c0       	rjmp	.+118    	; 0x1bde <DIO_voidSetPortValue+0xc4>
		{
			case PORT_A:
				if(Copy_Value == HIGH)
    1b68:	8a 81       	ldd	r24, Y+2	; 0x02
    1b6a:	81 30       	cpi	r24, 0x01	; 1
    1b6c:	29 f4       	brne	.+10     	; 0x1b78 <DIO_voidSetPortValue+0x5e>
				{
					DIO->PORTA.All_Bits = 0xFF;
    1b6e:	e0 e3       	ldi	r30, 0x30	; 48
    1b70:	f0 e0       	ldi	r31, 0x00	; 0
    1b72:	8f ef       	ldi	r24, 0xFF	; 255
    1b74:	83 87       	std	Z+11, r24	; 0x0b
    1b76:	33 c0       	rjmp	.+102    	; 0x1bde <DIO_voidSetPortValue+0xc4>
				}
				else if(Copy_Value == LOW)
    1b78:	8a 81       	ldd	r24, Y+2	; 0x02
    1b7a:	88 23       	and	r24, r24
    1b7c:	81 f5       	brne	.+96     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				{
					DIO->PORTA.All_Bits = 0;
    1b7e:	e0 e3       	ldi	r30, 0x30	; 48
    1b80:	f0 e0       	ldi	r31, 0x00	; 0
    1b82:	13 86       	std	Z+11, r1	; 0x0b
    1b84:	2c c0       	rjmp	.+88     	; 0x1bde <DIO_voidSetPortValue+0xc4>

				}
				break;

			case PORT_B:
				if(Copy_Value == HIGH)
    1b86:	8a 81       	ldd	r24, Y+2	; 0x02
    1b88:	81 30       	cpi	r24, 0x01	; 1
    1b8a:	29 f4       	brne	.+10     	; 0x1b96 <DIO_voidSetPortValue+0x7c>
				{
					DIO->PORTB.All_Bits = 0xFF;
    1b8c:	e0 e3       	ldi	r30, 0x30	; 48
    1b8e:	f0 e0       	ldi	r31, 0x00	; 0
    1b90:	8f ef       	ldi	r24, 0xFF	; 255
    1b92:	80 87       	std	Z+8, r24	; 0x08
    1b94:	24 c0       	rjmp	.+72     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				}
				else if(Copy_Value == LOW)
    1b96:	8a 81       	ldd	r24, Y+2	; 0x02
    1b98:	88 23       	and	r24, r24
    1b9a:	09 f5       	brne	.+66     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				{
					DIO->PORTB.All_Bits = 0;
    1b9c:	e0 e3       	ldi	r30, 0x30	; 48
    1b9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ba0:	10 86       	std	Z+8, r1	; 0x08
    1ba2:	1d c0       	rjmp	.+58     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				}
				break;


			case PORT_C:
				if(Copy_Value == HIGH)
    1ba4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ba6:	81 30       	cpi	r24, 0x01	; 1
    1ba8:	29 f4       	brne	.+10     	; 0x1bb4 <DIO_voidSetPortValue+0x9a>
				{
					DIO->PORTC.All_Bits = 0xFF;
    1baa:	e0 e3       	ldi	r30, 0x30	; 48
    1bac:	f0 e0       	ldi	r31, 0x00	; 0
    1bae:	8f ef       	ldi	r24, 0xFF	; 255
    1bb0:	85 83       	std	Z+5, r24	; 0x05
    1bb2:	15 c0       	rjmp	.+42     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				}
				else if(Copy_Value == LOW)
    1bb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb6:	88 23       	and	r24, r24
    1bb8:	91 f4       	brne	.+36     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				{
					DIO->PORTC.All_Bits = 0;
    1bba:	e0 e3       	ldi	r30, 0x30	; 48
    1bbc:	f0 e0       	ldi	r31, 0x00	; 0
    1bbe:	15 82       	std	Z+5, r1	; 0x05
    1bc0:	0e c0       	rjmp	.+28     	; 0x1bde <DIO_voidSetPortValue+0xc4>

				}
				break;

			case PORT_D:
				if(Copy_Value == HIGH)
    1bc2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc4:	81 30       	cpi	r24, 0x01	; 1
    1bc6:	29 f4       	brne	.+10     	; 0x1bd2 <DIO_voidSetPortValue+0xb8>
				{
					DIO->PORTD.All_Bits = 0xFF;
    1bc8:	e0 e3       	ldi	r30, 0x30	; 48
    1bca:	f0 e0       	ldi	r31, 0x00	; 0
    1bcc:	8f ef       	ldi	r24, 0xFF	; 255
    1bce:	82 83       	std	Z+2, r24	; 0x02
    1bd0:	06 c0       	rjmp	.+12     	; 0x1bde <DIO_voidSetPortValue+0xc4>
				}
				else if(Copy_Value == LOW)
    1bd2:	8a 81       	ldd	r24, Y+2	; 0x02
    1bd4:	88 23       	and	r24, r24
    1bd6:	19 f4       	brne	.+6      	; 0x1bde <DIO_voidSetPortValue+0xc4>
				{
					DIO->PORTD.All_Bits = 0;
    1bd8:	e0 e3       	ldi	r30, 0x30	; 48
    1bda:	f0 e0       	ldi	r31, 0x00	; 0
    1bdc:	12 82       	std	Z+2, r1	; 0x02

				}
				break;
		}
}
    1bde:	0f 90       	pop	r0
    1be0:	0f 90       	pop	r0
    1be2:	0f 90       	pop	r0
    1be4:	0f 90       	pop	r0
    1be6:	cf 91       	pop	r28
    1be8:	df 91       	pop	r29
    1bea:	08 95       	ret

00001bec <DIO_voidGetPortValue>:
u8 DIO_voidGetPortValue(PORT_t Copy_PortId)
{
    1bec:	df 93       	push	r29
    1bee:	cf 93       	push	r28
    1bf0:	00 d0       	rcall	.+0      	; 0x1bf2 <DIO_voidGetPortValue+0x6>
    1bf2:	00 d0       	rcall	.+0      	; 0x1bf4 <DIO_voidGetPortValue+0x8>
    1bf4:	cd b7       	in	r28, 0x3d	; 61
    1bf6:	de b7       	in	r29, 0x3e	; 62
    1bf8:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Pin;
	switch(Copy_PortId)
    1bfa:	8a 81       	ldd	r24, Y+2	; 0x02
    1bfc:	28 2f       	mov	r18, r24
    1bfe:	30 e0       	ldi	r19, 0x00	; 0
    1c00:	3c 83       	std	Y+4, r19	; 0x04
    1c02:	2b 83       	std	Y+3, r18	; 0x03
    1c04:	8b 81       	ldd	r24, Y+3	; 0x03
    1c06:	9c 81       	ldd	r25, Y+4	; 0x04
    1c08:	81 30       	cpi	r24, 0x01	; 1
    1c0a:	91 05       	cpc	r25, r1
    1c0c:	d1 f0       	breq	.+52     	; 0x1c42 <DIO_voidGetPortValue+0x56>
    1c0e:	2b 81       	ldd	r18, Y+3	; 0x03
    1c10:	3c 81       	ldd	r19, Y+4	; 0x04
    1c12:	22 30       	cpi	r18, 0x02	; 2
    1c14:	31 05       	cpc	r19, r1
    1c16:	2c f4       	brge	.+10     	; 0x1c22 <DIO_voidGetPortValue+0x36>
    1c18:	8b 81       	ldd	r24, Y+3	; 0x03
    1c1a:	9c 81       	ldd	r25, Y+4	; 0x04
    1c1c:	00 97       	sbiw	r24, 0x00	; 0
    1c1e:	61 f0       	breq	.+24     	; 0x1c38 <DIO_voidGetPortValue+0x4c>
    1c20:	1e c0       	rjmp	.+60     	; 0x1c5e <DIO_voidGetPortValue+0x72>
    1c22:	2b 81       	ldd	r18, Y+3	; 0x03
    1c24:	3c 81       	ldd	r19, Y+4	; 0x04
    1c26:	22 30       	cpi	r18, 0x02	; 2
    1c28:	31 05       	cpc	r19, r1
    1c2a:	81 f0       	breq	.+32     	; 0x1c4c <DIO_voidGetPortValue+0x60>
    1c2c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c2e:	9c 81       	ldd	r25, Y+4	; 0x04
    1c30:	83 30       	cpi	r24, 0x03	; 3
    1c32:	91 05       	cpc	r25, r1
    1c34:	81 f0       	breq	.+32     	; 0x1c56 <DIO_voidGetPortValue+0x6a>
    1c36:	13 c0       	rjmp	.+38     	; 0x1c5e <DIO_voidGetPortValue+0x72>
	{
		case PORT_A:
			Local_u8Pin = DIO->PINA.All_Bits;
    1c38:	e0 e3       	ldi	r30, 0x30	; 48
    1c3a:	f0 e0       	ldi	r31, 0x00	; 0
    1c3c:	81 85       	ldd	r24, Z+9	; 0x09
    1c3e:	89 83       	std	Y+1, r24	; 0x01
    1c40:	0e c0       	rjmp	.+28     	; 0x1c5e <DIO_voidGetPortValue+0x72>
		break;
		case PORT_B:
			Local_u8Pin = DIO->PINB.All_Bits;
    1c42:	e0 e3       	ldi	r30, 0x30	; 48
    1c44:	f0 e0       	ldi	r31, 0x00	; 0
    1c46:	86 81       	ldd	r24, Z+6	; 0x06
    1c48:	89 83       	std	Y+1, r24	; 0x01
    1c4a:	09 c0       	rjmp	.+18     	; 0x1c5e <DIO_voidGetPortValue+0x72>
		break;
		case PORT_C:
			Local_u8Pin = DIO->PINC.All_Bits;
    1c4c:	e0 e3       	ldi	r30, 0x30	; 48
    1c4e:	f0 e0       	ldi	r31, 0x00	; 0
    1c50:	83 81       	ldd	r24, Z+3	; 0x03
    1c52:	89 83       	std	Y+1, r24	; 0x01
    1c54:	04 c0       	rjmp	.+8      	; 0x1c5e <DIO_voidGetPortValue+0x72>

		break;
		case PORT_D:
			Local_u8Pin = DIO->PIND.All_Bits;
    1c56:	e0 e3       	ldi	r30, 0x30	; 48
    1c58:	f0 e0       	ldi	r31, 0x00	; 0
    1c5a:	80 81       	ld	r24, Z
    1c5c:	89 83       	std	Y+1, r24	; 0x01
		break;
		default: break;
	}
	return Local_u8Pin;
    1c5e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1c60:	0f 90       	pop	r0
    1c62:	0f 90       	pop	r0
    1c64:	0f 90       	pop	r0
    1c66:	0f 90       	pop	r0
    1c68:	cf 91       	pop	r28
    1c6a:	df 91       	pop	r29
    1c6c:	08 95       	ret

00001c6e <SevenSegment_Init>:
#include "../inc/SevenSegment_config.h"

#include <avr/delay.h>

void SevenSegment_Init(void)
{
    1c6e:	df 93       	push	r29
    1c70:	cf 93       	push	r28
    1c72:	cd b7       	in	r28, 0x3d	; 61
    1c74:	de b7       	in	r29, 0x3e	; 62
	DIO_voidSetPinDirection(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,OUTPUT);
    1c76:	81 e0       	ldi	r24, 0x01	; 1
    1c78:	60 e0       	ldi	r22, 0x00	; 0
    1c7a:	41 e0       	ldi	r20, 0x01	; 1
    1c7c:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,OUTPUT);
    1c80:	81 e0       	ldi	r24, 0x01	; 1
    1c82:	61 e0       	ldi	r22, 0x01	; 1
    1c84:	41 e0       	ldi	r20, 0x01	; 1
    1c86:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,OUTPUT);
    1c8a:	81 e0       	ldi	r24, 0x01	; 1
    1c8c:	62 e0       	ldi	r22, 0x02	; 2
    1c8e:	41 e0       	ldi	r20, 0x01	; 1
    1c90:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,OUTPUT);
    1c94:	81 e0       	ldi	r24, 0x01	; 1
    1c96:	64 e0       	ldi	r22, 0x04	; 4
    1c98:	41 e0       	ldi	r20, 0x01	; 1
    1c9a:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	
	DIO_voidSetPinDirection(SEVEN_SEGMENT_ANODE_1,OUTPUT);
    1c9e:	80 e0       	ldi	r24, 0x00	; 0
    1ca0:	63 e0       	ldi	r22, 0x03	; 3
    1ca2:	41 e0       	ldi	r20, 0x01	; 1
    1ca4:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVEN_SEGMENT_ANODE_2,OUTPUT);
    1ca8:	80 e0       	ldi	r24, 0x00	; 0
    1caa:	62 e0       	ldi	r22, 0x02	; 2
    1cac:	41 e0       	ldi	r20, 0x01	; 1
    1cae:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVEN_SEGMENT_ANODE_3,OUTPUT);
    1cb2:	81 e0       	ldi	r24, 0x01	; 1
    1cb4:	65 e0       	ldi	r22, 0x05	; 5
    1cb6:	41 e0       	ldi	r20, 0x01	; 1
    1cb8:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(SEVEN_SEGMENT_ANODE_4,OUTPUT);
    1cbc:	81 e0       	ldi	r24, 0x01	; 1
    1cbe:	66 e0       	ldi	r22, 0x06	; 6
    1cc0:	41 e0       	ldi	r20, 0x01	; 1
    1cc2:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>

	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_1,LOW);
    1cc6:	80 e0       	ldi	r24, 0x00	; 0
    1cc8:	63 e0       	ldi	r22, 0x03	; 3
    1cca:	40 e0       	ldi	r20, 0x00	; 0
    1ccc:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_2,LOW);
    1cd0:	80 e0       	ldi	r24, 0x00	; 0
    1cd2:	62 e0       	ldi	r22, 0x02	; 2
    1cd4:	40 e0       	ldi	r20, 0x00	; 0
    1cd6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_3,LOW);
    1cda:	81 e0       	ldi	r24, 0x01	; 1
    1cdc:	65 e0       	ldi	r22, 0x05	; 5
    1cde:	40 e0       	ldi	r20, 0x00	; 0
    1ce0:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_4,LOW);
    1ce4:	81 e0       	ldi	r24, 0x01	; 1
    1ce6:	66 e0       	ldi	r22, 0x06	; 6
    1ce8:	40 e0       	ldi	r20, 0x00	; 0
    1cea:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>

}
    1cee:	cf 91       	pop	r28
    1cf0:	df 91       	pop	r29
    1cf2:	08 95       	ret

00001cf4 <SevenSegment_voidDisplay_ALL>:

void SevenSegment_voidDisplay_ALL(u16 Copy_u16Value)
{
    1cf4:	df 93       	push	r29
    1cf6:	cf 93       	push	r28
    1cf8:	cd b7       	in	r28, 0x3d	; 61
    1cfa:	de b7       	in	r29, 0x3e	; 62
    1cfc:	c0 54       	subi	r28, 0x40	; 64
    1cfe:	d0 40       	sbci	r29, 0x00	; 0
    1d00:	0f b6       	in	r0, 0x3f	; 63
    1d02:	f8 94       	cli
    1d04:	de bf       	out	0x3e, r29	; 62
    1d06:	0f be       	out	0x3f, r0	; 63
    1d08:	cd bf       	out	0x3d, r28	; 61
    1d0a:	fe 01       	movw	r30, r28
    1d0c:	ff 96       	adiw	r30, 0x3f	; 63
    1d0e:	91 83       	std	Z+1, r25	; 0x01
    1d10:	80 83       	st	Z, r24
	for(u16 i = 0 ;i < 100; i++)
    1d12:	1e ae       	std	Y+62, r1	; 0x3e
    1d14:	1d ae       	std	Y+61, r1	; 0x3d
    1d16:	26 c2       	rjmp	.+1100   	; 0x2164 <SevenSegment_voidDisplay_ALL+0x470>
	{
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_1,HIGH);
    1d18:	80 e0       	ldi	r24, 0x00	; 0
    1d1a:	63 e0       	ldi	r22, 0x03	; 3
    1d1c:	41 e0       	ldi	r20, 0x01	; 1
    1d1e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_2,HIGH);
    1d22:	80 e0       	ldi	r24, 0x00	; 0
    1d24:	62 e0       	ldi	r22, 0x02	; 2
    1d26:	41 e0       	ldi	r20, 0x01	; 1
    1d28:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_3,HIGH);
    1d2c:	81 e0       	ldi	r24, 0x01	; 1
    1d2e:	65 e0       	ldi	r22, 0x05	; 5
    1d30:	41 e0       	ldi	r20, 0x01	; 1
    1d32:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
	DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_4,HIGH);
    1d36:	81 e0       	ldi	r24, 0x01	; 1
    1d38:	66 e0       	ldi	r22, 0x06	; 6
    1d3a:	41 e0       	ldi	r20, 0x01	; 1
    1d3c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>

	u8 Digit1 =  Copy_u16Value / 1000        ;
    1d40:	fe 01       	movw	r30, r28
    1d42:	ff 96       	adiw	r30, 0x3f	; 63
    1d44:	80 81       	ld	r24, Z
    1d46:	91 81       	ldd	r25, Z+1	; 0x01
    1d48:	28 ee       	ldi	r18, 0xE8	; 232
    1d4a:	33 e0       	ldi	r19, 0x03	; 3
    1d4c:	b9 01       	movw	r22, r18
    1d4e:	0e 94 70 13 	call	0x26e0	; 0x26e0 <__udivmodhi4>
    1d52:	cb 01       	movw	r24, r22
    1d54:	8c af       	std	Y+60, r24	; 0x3c
	u8 Digit2 = (Copy_u16Value % 1000) / 100 ;
    1d56:	fe 01       	movw	r30, r28
    1d58:	ff 96       	adiw	r30, 0x3f	; 63
    1d5a:	80 81       	ld	r24, Z
    1d5c:	91 81       	ldd	r25, Z+1	; 0x01
    1d5e:	28 ee       	ldi	r18, 0xE8	; 232
    1d60:	33 e0       	ldi	r19, 0x03	; 3
    1d62:	b9 01       	movw	r22, r18
    1d64:	0e 94 70 13 	call	0x26e0	; 0x26e0 <__udivmodhi4>
    1d68:	24 e6       	ldi	r18, 0x64	; 100
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	b9 01       	movw	r22, r18
    1d6e:	0e 94 70 13 	call	0x26e0	; 0x26e0 <__udivmodhi4>
    1d72:	cb 01       	movw	r24, r22
    1d74:	8b af       	std	Y+59, r24	; 0x3b
	u8 Digit3 = (Copy_u16Value % 100) / 10   ;
    1d76:	fe 01       	movw	r30, r28
    1d78:	ff 96       	adiw	r30, 0x3f	; 63
    1d7a:	80 81       	ld	r24, Z
    1d7c:	91 81       	ldd	r25, Z+1	; 0x01
    1d7e:	24 e6       	ldi	r18, 0x64	; 100
    1d80:	30 e0       	ldi	r19, 0x00	; 0
    1d82:	b9 01       	movw	r22, r18
    1d84:	0e 94 70 13 	call	0x26e0	; 0x26e0 <__udivmodhi4>
    1d88:	2a e0       	ldi	r18, 0x0A	; 10
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	b9 01       	movw	r22, r18
    1d8e:	0e 94 70 13 	call	0x26e0	; 0x26e0 <__udivmodhi4>
    1d92:	cb 01       	movw	r24, r22
    1d94:	8a af       	std	Y+58, r24	; 0x3a
	u8 Digit4 =  Copy_u16Value % 10          ;
    1d96:	fe 01       	movw	r30, r28
    1d98:	ff 96       	adiw	r30, 0x3f	; 63
    1d9a:	80 81       	ld	r24, Z
    1d9c:	91 81       	ldd	r25, Z+1	; 0x01
    1d9e:	2a e0       	ldi	r18, 0x0A	; 10
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	b9 01       	movw	r22, r18
    1da4:	0e 94 70 13 	call	0x26e0	; 0x26e0 <__udivmodhi4>
    1da8:	89 af       	std	Y+57, r24	; 0x39

	SevenSegment_voidDisplay(Digit1,3);
    1daa:	8c ad       	ldd	r24, Y+60	; 0x3c
    1dac:	63 e0       	ldi	r22, 0x03	; 3
    1dae:	0e 94 c2 10 	call	0x2184	; 0x2184 <SevenSegment_voidDisplay>
    1db2:	80 e0       	ldi	r24, 0x00	; 0
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	a0 e8       	ldi	r26, 0x80	; 128
    1db8:	bf e3       	ldi	r27, 0x3F	; 63
    1dba:	8d ab       	std	Y+53, r24	; 0x35
    1dbc:	9e ab       	std	Y+54, r25	; 0x36
    1dbe:	af ab       	std	Y+55, r26	; 0x37
    1dc0:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dc2:	6d a9       	ldd	r22, Y+53	; 0x35
    1dc4:	7e a9       	ldd	r23, Y+54	; 0x36
    1dc6:	8f a9       	ldd	r24, Y+55	; 0x37
    1dc8:	98 ad       	ldd	r25, Y+56	; 0x38
    1dca:	20 e0       	ldi	r18, 0x00	; 0
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	4a e7       	ldi	r20, 0x7A	; 122
    1dd0:	55 e4       	ldi	r21, 0x45	; 69
    1dd2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dd6:	dc 01       	movw	r26, r24
    1dd8:	cb 01       	movw	r24, r22
    1dda:	89 ab       	std	Y+49, r24	; 0x31
    1ddc:	9a ab       	std	Y+50, r25	; 0x32
    1dde:	ab ab       	std	Y+51, r26	; 0x33
    1de0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1de2:	69 a9       	ldd	r22, Y+49	; 0x31
    1de4:	7a a9       	ldd	r23, Y+50	; 0x32
    1de6:	8b a9       	ldd	r24, Y+51	; 0x33
    1de8:	9c a9       	ldd	r25, Y+52	; 0x34
    1dea:	20 e0       	ldi	r18, 0x00	; 0
    1dec:	30 e0       	ldi	r19, 0x00	; 0
    1dee:	40 e8       	ldi	r20, 0x80	; 128
    1df0:	5f e3       	ldi	r21, 0x3F	; 63
    1df2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1df6:	88 23       	and	r24, r24
    1df8:	2c f4       	brge	.+10     	; 0x1e04 <SevenSegment_voidDisplay_ALL+0x110>
		__ticks = 1;
    1dfa:	81 e0       	ldi	r24, 0x01	; 1
    1dfc:	90 e0       	ldi	r25, 0x00	; 0
    1dfe:	98 ab       	std	Y+48, r25	; 0x30
    1e00:	8f a7       	std	Y+47, r24	; 0x2f
    1e02:	3f c0       	rjmp	.+126    	; 0x1e82 <SevenSegment_voidDisplay_ALL+0x18e>
	else if (__tmp > 65535)
    1e04:	69 a9       	ldd	r22, Y+49	; 0x31
    1e06:	7a a9       	ldd	r23, Y+50	; 0x32
    1e08:	8b a9       	ldd	r24, Y+51	; 0x33
    1e0a:	9c a9       	ldd	r25, Y+52	; 0x34
    1e0c:	20 e0       	ldi	r18, 0x00	; 0
    1e0e:	3f ef       	ldi	r19, 0xFF	; 255
    1e10:	4f e7       	ldi	r20, 0x7F	; 127
    1e12:	57 e4       	ldi	r21, 0x47	; 71
    1e14:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1e18:	18 16       	cp	r1, r24
    1e1a:	4c f5       	brge	.+82     	; 0x1e6e <SevenSegment_voidDisplay_ALL+0x17a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e1c:	6d a9       	ldd	r22, Y+53	; 0x35
    1e1e:	7e a9       	ldd	r23, Y+54	; 0x36
    1e20:	8f a9       	ldd	r24, Y+55	; 0x37
    1e22:	98 ad       	ldd	r25, Y+56	; 0x38
    1e24:	20 e0       	ldi	r18, 0x00	; 0
    1e26:	30 e0       	ldi	r19, 0x00	; 0
    1e28:	40 e2       	ldi	r20, 0x20	; 32
    1e2a:	51 e4       	ldi	r21, 0x41	; 65
    1e2c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e30:	dc 01       	movw	r26, r24
    1e32:	cb 01       	movw	r24, r22
    1e34:	bc 01       	movw	r22, r24
    1e36:	cd 01       	movw	r24, r26
    1e38:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e3c:	dc 01       	movw	r26, r24
    1e3e:	cb 01       	movw	r24, r22
    1e40:	98 ab       	std	Y+48, r25	; 0x30
    1e42:	8f a7       	std	Y+47, r24	; 0x2f
    1e44:	0f c0       	rjmp	.+30     	; 0x1e64 <SevenSegment_voidDisplay_ALL+0x170>
    1e46:	80 e9       	ldi	r24, 0x90	; 144
    1e48:	91 e0       	ldi	r25, 0x01	; 1
    1e4a:	9e a7       	std	Y+46, r25	; 0x2e
    1e4c:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e4e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1e50:	9e a5       	ldd	r25, Y+46	; 0x2e
    1e52:	01 97       	sbiw	r24, 0x01	; 1
    1e54:	f1 f7       	brne	.-4      	; 0x1e52 <SevenSegment_voidDisplay_ALL+0x15e>
    1e56:	9e a7       	std	Y+46, r25	; 0x2e
    1e58:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e5a:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e5c:	98 a9       	ldd	r25, Y+48	; 0x30
    1e5e:	01 97       	sbiw	r24, 0x01	; 1
    1e60:	98 ab       	std	Y+48, r25	; 0x30
    1e62:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e64:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e66:	98 a9       	ldd	r25, Y+48	; 0x30
    1e68:	00 97       	sbiw	r24, 0x00	; 0
    1e6a:	69 f7       	brne	.-38     	; 0x1e46 <SevenSegment_voidDisplay_ALL+0x152>
    1e6c:	14 c0       	rjmp	.+40     	; 0x1e96 <SevenSegment_voidDisplay_ALL+0x1a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e6e:	69 a9       	ldd	r22, Y+49	; 0x31
    1e70:	7a a9       	ldd	r23, Y+50	; 0x32
    1e72:	8b a9       	ldd	r24, Y+51	; 0x33
    1e74:	9c a9       	ldd	r25, Y+52	; 0x34
    1e76:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e7a:	dc 01       	movw	r26, r24
    1e7c:	cb 01       	movw	r24, r22
    1e7e:	98 ab       	std	Y+48, r25	; 0x30
    1e80:	8f a7       	std	Y+47, r24	; 0x2f
    1e82:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e84:	98 a9       	ldd	r25, Y+48	; 0x30
    1e86:	9c a7       	std	Y+44, r25	; 0x2c
    1e88:	8b a7       	std	Y+43, r24	; 0x2b
    1e8a:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e8c:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e8e:	01 97       	sbiw	r24, 0x01	; 1
    1e90:	f1 f7       	brne	.-4      	; 0x1e8e <SevenSegment_voidDisplay_ALL+0x19a>
    1e92:	9c a7       	std	Y+44, r25	; 0x2c
    1e94:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	SevenSegment_voidDisplay(Digit2,2);
    1e96:	8b ad       	ldd	r24, Y+59	; 0x3b
    1e98:	62 e0       	ldi	r22, 0x02	; 2
    1e9a:	0e 94 c2 10 	call	0x2184	; 0x2184 <SevenSegment_voidDisplay>
    1e9e:	80 e0       	ldi	r24, 0x00	; 0
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	a0 e8       	ldi	r26, 0x80	; 128
    1ea4:	bf e3       	ldi	r27, 0x3F	; 63
    1ea6:	8f a3       	std	Y+39, r24	; 0x27
    1ea8:	98 a7       	std	Y+40, r25	; 0x28
    1eaa:	a9 a7       	std	Y+41, r26	; 0x29
    1eac:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eae:	6f a1       	ldd	r22, Y+39	; 0x27
    1eb0:	78 a5       	ldd	r23, Y+40	; 0x28
    1eb2:	89 a5       	ldd	r24, Y+41	; 0x29
    1eb4:	9a a5       	ldd	r25, Y+42	; 0x2a
    1eb6:	20 e0       	ldi	r18, 0x00	; 0
    1eb8:	30 e0       	ldi	r19, 0x00	; 0
    1eba:	4a e7       	ldi	r20, 0x7A	; 122
    1ebc:	55 e4       	ldi	r21, 0x45	; 69
    1ebe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ec2:	dc 01       	movw	r26, r24
    1ec4:	cb 01       	movw	r24, r22
    1ec6:	8b a3       	std	Y+35, r24	; 0x23
    1ec8:	9c a3       	std	Y+36, r25	; 0x24
    1eca:	ad a3       	std	Y+37, r26	; 0x25
    1ecc:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1ece:	6b a1       	ldd	r22, Y+35	; 0x23
    1ed0:	7c a1       	ldd	r23, Y+36	; 0x24
    1ed2:	8d a1       	ldd	r24, Y+37	; 0x25
    1ed4:	9e a1       	ldd	r25, Y+38	; 0x26
    1ed6:	20 e0       	ldi	r18, 0x00	; 0
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	40 e8       	ldi	r20, 0x80	; 128
    1edc:	5f e3       	ldi	r21, 0x3F	; 63
    1ede:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1ee2:	88 23       	and	r24, r24
    1ee4:	2c f4       	brge	.+10     	; 0x1ef0 <SevenSegment_voidDisplay_ALL+0x1fc>
		__ticks = 1;
    1ee6:	81 e0       	ldi	r24, 0x01	; 1
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	9a a3       	std	Y+34, r25	; 0x22
    1eec:	89 a3       	std	Y+33, r24	; 0x21
    1eee:	3f c0       	rjmp	.+126    	; 0x1f6e <SevenSegment_voidDisplay_ALL+0x27a>
	else if (__tmp > 65535)
    1ef0:	6b a1       	ldd	r22, Y+35	; 0x23
    1ef2:	7c a1       	ldd	r23, Y+36	; 0x24
    1ef4:	8d a1       	ldd	r24, Y+37	; 0x25
    1ef6:	9e a1       	ldd	r25, Y+38	; 0x26
    1ef8:	20 e0       	ldi	r18, 0x00	; 0
    1efa:	3f ef       	ldi	r19, 0xFF	; 255
    1efc:	4f e7       	ldi	r20, 0x7F	; 127
    1efe:	57 e4       	ldi	r21, 0x47	; 71
    1f00:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f04:	18 16       	cp	r1, r24
    1f06:	4c f5       	brge	.+82     	; 0x1f5a <SevenSegment_voidDisplay_ALL+0x266>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f08:	6f a1       	ldd	r22, Y+39	; 0x27
    1f0a:	78 a5       	ldd	r23, Y+40	; 0x28
    1f0c:	89 a5       	ldd	r24, Y+41	; 0x29
    1f0e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1f10:	20 e0       	ldi	r18, 0x00	; 0
    1f12:	30 e0       	ldi	r19, 0x00	; 0
    1f14:	40 e2       	ldi	r20, 0x20	; 32
    1f16:	51 e4       	ldi	r21, 0x41	; 65
    1f18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f1c:	dc 01       	movw	r26, r24
    1f1e:	cb 01       	movw	r24, r22
    1f20:	bc 01       	movw	r22, r24
    1f22:	cd 01       	movw	r24, r26
    1f24:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f28:	dc 01       	movw	r26, r24
    1f2a:	cb 01       	movw	r24, r22
    1f2c:	9a a3       	std	Y+34, r25	; 0x22
    1f2e:	89 a3       	std	Y+33, r24	; 0x21
    1f30:	0f c0       	rjmp	.+30     	; 0x1f50 <SevenSegment_voidDisplay_ALL+0x25c>
    1f32:	80 e9       	ldi	r24, 0x90	; 144
    1f34:	91 e0       	ldi	r25, 0x01	; 1
    1f36:	98 a3       	std	Y+32, r25	; 0x20
    1f38:	8f 8f       	std	Y+31, r24	; 0x1f
    1f3a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1f3c:	98 a1       	ldd	r25, Y+32	; 0x20
    1f3e:	01 97       	sbiw	r24, 0x01	; 1
    1f40:	f1 f7       	brne	.-4      	; 0x1f3e <SevenSegment_voidDisplay_ALL+0x24a>
    1f42:	98 a3       	std	Y+32, r25	; 0x20
    1f44:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f46:	89 a1       	ldd	r24, Y+33	; 0x21
    1f48:	9a a1       	ldd	r25, Y+34	; 0x22
    1f4a:	01 97       	sbiw	r24, 0x01	; 1
    1f4c:	9a a3       	std	Y+34, r25	; 0x22
    1f4e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f50:	89 a1       	ldd	r24, Y+33	; 0x21
    1f52:	9a a1       	ldd	r25, Y+34	; 0x22
    1f54:	00 97       	sbiw	r24, 0x00	; 0
    1f56:	69 f7       	brne	.-38     	; 0x1f32 <SevenSegment_voidDisplay_ALL+0x23e>
    1f58:	14 c0       	rjmp	.+40     	; 0x1f82 <SevenSegment_voidDisplay_ALL+0x28e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f5a:	6b a1       	ldd	r22, Y+35	; 0x23
    1f5c:	7c a1       	ldd	r23, Y+36	; 0x24
    1f5e:	8d a1       	ldd	r24, Y+37	; 0x25
    1f60:	9e a1       	ldd	r25, Y+38	; 0x26
    1f62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f66:	dc 01       	movw	r26, r24
    1f68:	cb 01       	movw	r24, r22
    1f6a:	9a a3       	std	Y+34, r25	; 0x22
    1f6c:	89 a3       	std	Y+33, r24	; 0x21
    1f6e:	89 a1       	ldd	r24, Y+33	; 0x21
    1f70:	9a a1       	ldd	r25, Y+34	; 0x22
    1f72:	9e 8f       	std	Y+30, r25	; 0x1e
    1f74:	8d 8f       	std	Y+29, r24	; 0x1d
    1f76:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f78:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f7a:	01 97       	sbiw	r24, 0x01	; 1
    1f7c:	f1 f7       	brne	.-4      	; 0x1f7a <SevenSegment_voidDisplay_ALL+0x286>
    1f7e:	9e 8f       	std	Y+30, r25	; 0x1e
    1f80:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	SevenSegment_voidDisplay(Digit3,1);
    1f82:	8a ad       	ldd	r24, Y+58	; 0x3a
    1f84:	61 e0       	ldi	r22, 0x01	; 1
    1f86:	0e 94 c2 10 	call	0x2184	; 0x2184 <SevenSegment_voidDisplay>
    1f8a:	80 e0       	ldi	r24, 0x00	; 0
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	a0 e8       	ldi	r26, 0x80	; 128
    1f90:	bf e3       	ldi	r27, 0x3F	; 63
    1f92:	89 8f       	std	Y+25, r24	; 0x19
    1f94:	9a 8f       	std	Y+26, r25	; 0x1a
    1f96:	ab 8f       	std	Y+27, r26	; 0x1b
    1f98:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f9a:	69 8d       	ldd	r22, Y+25	; 0x19
    1f9c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1f9e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1fa0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1fa2:	20 e0       	ldi	r18, 0x00	; 0
    1fa4:	30 e0       	ldi	r19, 0x00	; 0
    1fa6:	4a e7       	ldi	r20, 0x7A	; 122
    1fa8:	55 e4       	ldi	r21, 0x45	; 69
    1faa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fae:	dc 01       	movw	r26, r24
    1fb0:	cb 01       	movw	r24, r22
    1fb2:	8d 8b       	std	Y+21, r24	; 0x15
    1fb4:	9e 8b       	std	Y+22, r25	; 0x16
    1fb6:	af 8b       	std	Y+23, r26	; 0x17
    1fb8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1fba:	6d 89       	ldd	r22, Y+21	; 0x15
    1fbc:	7e 89       	ldd	r23, Y+22	; 0x16
    1fbe:	8f 89       	ldd	r24, Y+23	; 0x17
    1fc0:	98 8d       	ldd	r25, Y+24	; 0x18
    1fc2:	20 e0       	ldi	r18, 0x00	; 0
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	40 e8       	ldi	r20, 0x80	; 128
    1fc8:	5f e3       	ldi	r21, 0x3F	; 63
    1fca:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1fce:	88 23       	and	r24, r24
    1fd0:	2c f4       	brge	.+10     	; 0x1fdc <SevenSegment_voidDisplay_ALL+0x2e8>
		__ticks = 1;
    1fd2:	81 e0       	ldi	r24, 0x01	; 1
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	9c 8b       	std	Y+20, r25	; 0x14
    1fd8:	8b 8b       	std	Y+19, r24	; 0x13
    1fda:	3f c0       	rjmp	.+126    	; 0x205a <SevenSegment_voidDisplay_ALL+0x366>
	else if (__tmp > 65535)
    1fdc:	6d 89       	ldd	r22, Y+21	; 0x15
    1fde:	7e 89       	ldd	r23, Y+22	; 0x16
    1fe0:	8f 89       	ldd	r24, Y+23	; 0x17
    1fe2:	98 8d       	ldd	r25, Y+24	; 0x18
    1fe4:	20 e0       	ldi	r18, 0x00	; 0
    1fe6:	3f ef       	ldi	r19, 0xFF	; 255
    1fe8:	4f e7       	ldi	r20, 0x7F	; 127
    1fea:	57 e4       	ldi	r21, 0x47	; 71
    1fec:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1ff0:	18 16       	cp	r1, r24
    1ff2:	4c f5       	brge	.+82     	; 0x2046 <SevenSegment_voidDisplay_ALL+0x352>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ff4:	69 8d       	ldd	r22, Y+25	; 0x19
    1ff6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1ff8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1ffa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1ffc:	20 e0       	ldi	r18, 0x00	; 0
    1ffe:	30 e0       	ldi	r19, 0x00	; 0
    2000:	40 e2       	ldi	r20, 0x20	; 32
    2002:	51 e4       	ldi	r21, 0x41	; 65
    2004:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2008:	dc 01       	movw	r26, r24
    200a:	cb 01       	movw	r24, r22
    200c:	bc 01       	movw	r22, r24
    200e:	cd 01       	movw	r24, r26
    2010:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2014:	dc 01       	movw	r26, r24
    2016:	cb 01       	movw	r24, r22
    2018:	9c 8b       	std	Y+20, r25	; 0x14
    201a:	8b 8b       	std	Y+19, r24	; 0x13
    201c:	0f c0       	rjmp	.+30     	; 0x203c <SevenSegment_voidDisplay_ALL+0x348>
    201e:	80 e9       	ldi	r24, 0x90	; 144
    2020:	91 e0       	ldi	r25, 0x01	; 1
    2022:	9a 8b       	std	Y+18, r25	; 0x12
    2024:	89 8b       	std	Y+17, r24	; 0x11
    2026:	89 89       	ldd	r24, Y+17	; 0x11
    2028:	9a 89       	ldd	r25, Y+18	; 0x12
    202a:	01 97       	sbiw	r24, 0x01	; 1
    202c:	f1 f7       	brne	.-4      	; 0x202a <SevenSegment_voidDisplay_ALL+0x336>
    202e:	9a 8b       	std	Y+18, r25	; 0x12
    2030:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2032:	8b 89       	ldd	r24, Y+19	; 0x13
    2034:	9c 89       	ldd	r25, Y+20	; 0x14
    2036:	01 97       	sbiw	r24, 0x01	; 1
    2038:	9c 8b       	std	Y+20, r25	; 0x14
    203a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    203c:	8b 89       	ldd	r24, Y+19	; 0x13
    203e:	9c 89       	ldd	r25, Y+20	; 0x14
    2040:	00 97       	sbiw	r24, 0x00	; 0
    2042:	69 f7       	brne	.-38     	; 0x201e <SevenSegment_voidDisplay_ALL+0x32a>
    2044:	14 c0       	rjmp	.+40     	; 0x206e <SevenSegment_voidDisplay_ALL+0x37a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2046:	6d 89       	ldd	r22, Y+21	; 0x15
    2048:	7e 89       	ldd	r23, Y+22	; 0x16
    204a:	8f 89       	ldd	r24, Y+23	; 0x17
    204c:	98 8d       	ldd	r25, Y+24	; 0x18
    204e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2052:	dc 01       	movw	r26, r24
    2054:	cb 01       	movw	r24, r22
    2056:	9c 8b       	std	Y+20, r25	; 0x14
    2058:	8b 8b       	std	Y+19, r24	; 0x13
    205a:	8b 89       	ldd	r24, Y+19	; 0x13
    205c:	9c 89       	ldd	r25, Y+20	; 0x14
    205e:	98 8b       	std	Y+16, r25	; 0x10
    2060:	8f 87       	std	Y+15, r24	; 0x0f
    2062:	8f 85       	ldd	r24, Y+15	; 0x0f
    2064:	98 89       	ldd	r25, Y+16	; 0x10
    2066:	01 97       	sbiw	r24, 0x01	; 1
    2068:	f1 f7       	brne	.-4      	; 0x2066 <SevenSegment_voidDisplay_ALL+0x372>
    206a:	98 8b       	std	Y+16, r25	; 0x10
    206c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);

	SevenSegment_voidDisplay(Digit4,0);
    206e:	89 ad       	ldd	r24, Y+57	; 0x39
    2070:	60 e0       	ldi	r22, 0x00	; 0
    2072:	0e 94 c2 10 	call	0x2184	; 0x2184 <SevenSegment_voidDisplay>
    2076:	80 e0       	ldi	r24, 0x00	; 0
    2078:	90 e0       	ldi	r25, 0x00	; 0
    207a:	a0 e8       	ldi	r26, 0x80	; 128
    207c:	bf e3       	ldi	r27, 0x3F	; 63
    207e:	8b 87       	std	Y+11, r24	; 0x0b
    2080:	9c 87       	std	Y+12, r25	; 0x0c
    2082:	ad 87       	std	Y+13, r26	; 0x0d
    2084:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2086:	6b 85       	ldd	r22, Y+11	; 0x0b
    2088:	7c 85       	ldd	r23, Y+12	; 0x0c
    208a:	8d 85       	ldd	r24, Y+13	; 0x0d
    208c:	9e 85       	ldd	r25, Y+14	; 0x0e
    208e:	20 e0       	ldi	r18, 0x00	; 0
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	4a e7       	ldi	r20, 0x7A	; 122
    2094:	55 e4       	ldi	r21, 0x45	; 69
    2096:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    209a:	dc 01       	movw	r26, r24
    209c:	cb 01       	movw	r24, r22
    209e:	8f 83       	std	Y+7, r24	; 0x07
    20a0:	98 87       	std	Y+8, r25	; 0x08
    20a2:	a9 87       	std	Y+9, r26	; 0x09
    20a4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    20a6:	6f 81       	ldd	r22, Y+7	; 0x07
    20a8:	78 85       	ldd	r23, Y+8	; 0x08
    20aa:	89 85       	ldd	r24, Y+9	; 0x09
    20ac:	9a 85       	ldd	r25, Y+10	; 0x0a
    20ae:	20 e0       	ldi	r18, 0x00	; 0
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	40 e8       	ldi	r20, 0x80	; 128
    20b4:	5f e3       	ldi	r21, 0x3F	; 63
    20b6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    20ba:	88 23       	and	r24, r24
    20bc:	2c f4       	brge	.+10     	; 0x20c8 <SevenSegment_voidDisplay_ALL+0x3d4>
		__ticks = 1;
    20be:	81 e0       	ldi	r24, 0x01	; 1
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	9e 83       	std	Y+6, r25	; 0x06
    20c4:	8d 83       	std	Y+5, r24	; 0x05
    20c6:	3f c0       	rjmp	.+126    	; 0x2146 <SevenSegment_voidDisplay_ALL+0x452>
	else if (__tmp > 65535)
    20c8:	6f 81       	ldd	r22, Y+7	; 0x07
    20ca:	78 85       	ldd	r23, Y+8	; 0x08
    20cc:	89 85       	ldd	r24, Y+9	; 0x09
    20ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    20d0:	20 e0       	ldi	r18, 0x00	; 0
    20d2:	3f ef       	ldi	r19, 0xFF	; 255
    20d4:	4f e7       	ldi	r20, 0x7F	; 127
    20d6:	57 e4       	ldi	r21, 0x47	; 71
    20d8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    20dc:	18 16       	cp	r1, r24
    20de:	4c f5       	brge	.+82     	; 0x2132 <SevenSegment_voidDisplay_ALL+0x43e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20e0:	6b 85       	ldd	r22, Y+11	; 0x0b
    20e2:	7c 85       	ldd	r23, Y+12	; 0x0c
    20e4:	8d 85       	ldd	r24, Y+13	; 0x0d
    20e6:	9e 85       	ldd	r25, Y+14	; 0x0e
    20e8:	20 e0       	ldi	r18, 0x00	; 0
    20ea:	30 e0       	ldi	r19, 0x00	; 0
    20ec:	40 e2       	ldi	r20, 0x20	; 32
    20ee:	51 e4       	ldi	r21, 0x41	; 65
    20f0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20f4:	dc 01       	movw	r26, r24
    20f6:	cb 01       	movw	r24, r22
    20f8:	bc 01       	movw	r22, r24
    20fa:	cd 01       	movw	r24, r26
    20fc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2100:	dc 01       	movw	r26, r24
    2102:	cb 01       	movw	r24, r22
    2104:	9e 83       	std	Y+6, r25	; 0x06
    2106:	8d 83       	std	Y+5, r24	; 0x05
    2108:	0f c0       	rjmp	.+30     	; 0x2128 <SevenSegment_voidDisplay_ALL+0x434>
    210a:	80 e9       	ldi	r24, 0x90	; 144
    210c:	91 e0       	ldi	r25, 0x01	; 1
    210e:	9c 83       	std	Y+4, r25	; 0x04
    2110:	8b 83       	std	Y+3, r24	; 0x03
    2112:	8b 81       	ldd	r24, Y+3	; 0x03
    2114:	9c 81       	ldd	r25, Y+4	; 0x04
    2116:	01 97       	sbiw	r24, 0x01	; 1
    2118:	f1 f7       	brne	.-4      	; 0x2116 <SevenSegment_voidDisplay_ALL+0x422>
    211a:	9c 83       	std	Y+4, r25	; 0x04
    211c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    211e:	8d 81       	ldd	r24, Y+5	; 0x05
    2120:	9e 81       	ldd	r25, Y+6	; 0x06
    2122:	01 97       	sbiw	r24, 0x01	; 1
    2124:	9e 83       	std	Y+6, r25	; 0x06
    2126:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2128:	8d 81       	ldd	r24, Y+5	; 0x05
    212a:	9e 81       	ldd	r25, Y+6	; 0x06
    212c:	00 97       	sbiw	r24, 0x00	; 0
    212e:	69 f7       	brne	.-38     	; 0x210a <SevenSegment_voidDisplay_ALL+0x416>
    2130:	14 c0       	rjmp	.+40     	; 0x215a <SevenSegment_voidDisplay_ALL+0x466>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2132:	6f 81       	ldd	r22, Y+7	; 0x07
    2134:	78 85       	ldd	r23, Y+8	; 0x08
    2136:	89 85       	ldd	r24, Y+9	; 0x09
    2138:	9a 85       	ldd	r25, Y+10	; 0x0a
    213a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    213e:	dc 01       	movw	r26, r24
    2140:	cb 01       	movw	r24, r22
    2142:	9e 83       	std	Y+6, r25	; 0x06
    2144:	8d 83       	std	Y+5, r24	; 0x05
    2146:	8d 81       	ldd	r24, Y+5	; 0x05
    2148:	9e 81       	ldd	r25, Y+6	; 0x06
    214a:	9a 83       	std	Y+2, r25	; 0x02
    214c:	89 83       	std	Y+1, r24	; 0x01
    214e:	89 81       	ldd	r24, Y+1	; 0x01
    2150:	9a 81       	ldd	r25, Y+2	; 0x02
    2152:	01 97       	sbiw	r24, 0x01	; 1
    2154:	f1 f7       	brne	.-4      	; 0x2152 <SevenSegment_voidDisplay_ALL+0x45e>
    2156:	9a 83       	std	Y+2, r25	; 0x02
    2158:	89 83       	std	Y+1, r24	; 0x01

}

void SevenSegment_voidDisplay_ALL(u16 Copy_u16Value)
{
	for(u16 i = 0 ;i < 100; i++)
    215a:	8d ad       	ldd	r24, Y+61	; 0x3d
    215c:	9e ad       	ldd	r25, Y+62	; 0x3e
    215e:	01 96       	adiw	r24, 0x01	; 1
    2160:	9e af       	std	Y+62, r25	; 0x3e
    2162:	8d af       	std	Y+61, r24	; 0x3d
    2164:	8d ad       	ldd	r24, Y+61	; 0x3d
    2166:	9e ad       	ldd	r25, Y+62	; 0x3e
    2168:	84 36       	cpi	r24, 0x64	; 100
    216a:	91 05       	cpc	r25, r1
    216c:	08 f4       	brcc	.+2      	; 0x2170 <SevenSegment_voidDisplay_ALL+0x47c>
    216e:	d4 cd       	rjmp	.-1112   	; 0x1d18 <SevenSegment_voidDisplay_ALL+0x24>

	SevenSegment_voidDisplay(Digit4,0);
	_delay_ms(1);

	}
}
    2170:	c0 5c       	subi	r28, 0xC0	; 192
    2172:	df 4f       	sbci	r29, 0xFF	; 255
    2174:	0f b6       	in	r0, 0x3f	; 63
    2176:	f8 94       	cli
    2178:	de bf       	out	0x3e, r29	; 62
    217a:	0f be       	out	0x3f, r0	; 63
    217c:	cd bf       	out	0x3d, r28	; 61
    217e:	cf 91       	pop	r28
    2180:	df 91       	pop	r29
    2182:	08 95       	ret

00002184 <SevenSegment_voidDisplay>:


void SevenSegment_voidDisplay(u8 Copy_u8Value , u8 Segment_Number)
{
    2184:	df 93       	push	r29
    2186:	cf 93       	push	r28
    2188:	00 d0       	rcall	.+0      	; 0x218a <SevenSegment_voidDisplay+0x6>
    218a:	00 d0       	rcall	.+0      	; 0x218c <SevenSegment_voidDisplay+0x8>
    218c:	00 d0       	rcall	.+0      	; 0x218e <SevenSegment_voidDisplay+0xa>
    218e:	cd b7       	in	r28, 0x3d	; 61
    2190:	de b7       	in	r29, 0x3e	; 62
    2192:	89 83       	std	Y+1, r24	; 0x01
    2194:	6a 83       	std	Y+2, r22	; 0x02
	switch(Segment_Number)
    2196:	8a 81       	ldd	r24, Y+2	; 0x02
    2198:	28 2f       	mov	r18, r24
    219a:	30 e0       	ldi	r19, 0x00	; 0
    219c:	3e 83       	std	Y+6, r19	; 0x06
    219e:	2d 83       	std	Y+5, r18	; 0x05
    21a0:	8d 81       	ldd	r24, Y+5	; 0x05
    21a2:	9e 81       	ldd	r25, Y+6	; 0x06
    21a4:	81 30       	cpi	r24, 0x01	; 1
    21a6:	91 05       	cpc	r25, r1
    21a8:	59 f1       	breq	.+86     	; 0x2200 <SevenSegment_voidDisplay+0x7c>
    21aa:	2d 81       	ldd	r18, Y+5	; 0x05
    21ac:	3e 81       	ldd	r19, Y+6	; 0x06
    21ae:	22 30       	cpi	r18, 0x02	; 2
    21b0:	31 05       	cpc	r19, r1
    21b2:	2c f4       	brge	.+10     	; 0x21be <SevenSegment_voidDisplay+0x3a>
    21b4:	8d 81       	ldd	r24, Y+5	; 0x05
    21b6:	9e 81       	ldd	r25, Y+6	; 0x06
    21b8:	00 97       	sbiw	r24, 0x00	; 0
    21ba:	69 f0       	breq	.+26     	; 0x21d6 <SevenSegment_voidDisplay+0x52>
    21bc:	5f c0       	rjmp	.+190    	; 0x227c <SevenSegment_voidDisplay+0xf8>
    21be:	2d 81       	ldd	r18, Y+5	; 0x05
    21c0:	3e 81       	ldd	r19, Y+6	; 0x06
    21c2:	22 30       	cpi	r18, 0x02	; 2
    21c4:	31 05       	cpc	r19, r1
    21c6:	89 f1       	breq	.+98     	; 0x222a <SevenSegment_voidDisplay+0xa6>
    21c8:	8d 81       	ldd	r24, Y+5	; 0x05
    21ca:	9e 81       	ldd	r25, Y+6	; 0x06
    21cc:	83 30       	cpi	r24, 0x03	; 3
    21ce:	91 05       	cpc	r25, r1
    21d0:	09 f4       	brne	.+2      	; 0x21d4 <SevenSegment_voidDisplay+0x50>
    21d2:	40 c0       	rjmp	.+128    	; 0x2254 <SevenSegment_voidDisplay+0xd0>
    21d4:	53 c0       	rjmp	.+166    	; 0x227c <SevenSegment_voidDisplay+0xf8>
	{
		case 0 :
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_1,LOW);
    21d6:	80 e0       	ldi	r24, 0x00	; 0
    21d8:	63 e0       	ldi	r22, 0x03	; 3
    21da:	40 e0       	ldi	r20, 0x00	; 0
    21dc:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_2,HIGH);
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	62 e0       	ldi	r22, 0x02	; 2
    21e4:	41 e0       	ldi	r20, 0x01	; 1
    21e6:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_3,HIGH);
    21ea:	81 e0       	ldi	r24, 0x01	; 1
    21ec:	65 e0       	ldi	r22, 0x05	; 5
    21ee:	41 e0       	ldi	r20, 0x01	; 1
    21f0:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_4,HIGH);
    21f4:	81 e0       	ldi	r24, 0x01	; 1
    21f6:	66 e0       	ldi	r22, 0x06	; 6
    21f8:	41 e0       	ldi	r20, 0x01	; 1
    21fa:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    21fe:	3e c0       	rjmp	.+124    	; 0x227c <SevenSegment_voidDisplay+0xf8>
			break;
		case 1 :
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_1,HIGH);
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	63 e0       	ldi	r22, 0x03	; 3
    2204:	41 e0       	ldi	r20, 0x01	; 1
    2206:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_2,LOW);
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	62 e0       	ldi	r22, 0x02	; 2
    220e:	40 e0       	ldi	r20, 0x00	; 0
    2210:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_3,HIGH);
    2214:	81 e0       	ldi	r24, 0x01	; 1
    2216:	65 e0       	ldi	r22, 0x05	; 5
    2218:	41 e0       	ldi	r20, 0x01	; 1
    221a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_4,HIGH);
    221e:	81 e0       	ldi	r24, 0x01	; 1
    2220:	66 e0       	ldi	r22, 0x06	; 6
    2222:	41 e0       	ldi	r20, 0x01	; 1
    2224:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    2228:	29 c0       	rjmp	.+82     	; 0x227c <SevenSegment_voidDisplay+0xf8>
			break;
		case 2 :
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_1,HIGH);
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	63 e0       	ldi	r22, 0x03	; 3
    222e:	41 e0       	ldi	r20, 0x01	; 1
    2230:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_2,HIGH);
    2234:	80 e0       	ldi	r24, 0x00	; 0
    2236:	62 e0       	ldi	r22, 0x02	; 2
    2238:	41 e0       	ldi	r20, 0x01	; 1
    223a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_3,LOW);
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	65 e0       	ldi	r22, 0x05	; 5
    2242:	40 e0       	ldi	r20, 0x00	; 0
    2244:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_4,HIGH);
    2248:	81 e0       	ldi	r24, 0x01	; 1
    224a:	66 e0       	ldi	r22, 0x06	; 6
    224c:	41 e0       	ldi	r20, 0x01	; 1
    224e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    2252:	14 c0       	rjmp	.+40     	; 0x227c <SevenSegment_voidDisplay+0xf8>
			break;
		case 3 :
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_1,HIGH);
    2254:	80 e0       	ldi	r24, 0x00	; 0
    2256:	63 e0       	ldi	r22, 0x03	; 3
    2258:	41 e0       	ldi	r20, 0x01	; 1
    225a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_2,HIGH);
    225e:	80 e0       	ldi	r24, 0x00	; 0
    2260:	62 e0       	ldi	r22, 0x02	; 2
    2262:	41 e0       	ldi	r20, 0x01	; 1
    2264:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_3,HIGH);
    2268:	81 e0       	ldi	r24, 0x01	; 1
    226a:	65 e0       	ldi	r22, 0x05	; 5
    226c:	41 e0       	ldi	r20, 0x01	; 1
    226e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			DIO_voidSetPinValue(SEVEN_SEGMENT_ANODE_4,LOW);
    2272:	81 e0       	ldi	r24, 0x01	; 1
    2274:	66 e0       	ldi	r22, 0x06	; 6
    2276:	40 e0       	ldi	r20, 0x00	; 0
    2278:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
			break;
	}

			switch(Copy_u8Value)
    227c:	89 81       	ldd	r24, Y+1	; 0x01
    227e:	28 2f       	mov	r18, r24
    2280:	30 e0       	ldi	r19, 0x00	; 0
    2282:	3c 83       	std	Y+4, r19	; 0x04
    2284:	2b 83       	std	Y+3, r18	; 0x03
    2286:	8b 81       	ldd	r24, Y+3	; 0x03
    2288:	9c 81       	ldd	r25, Y+4	; 0x04
    228a:	84 30       	cpi	r24, 0x04	; 4
    228c:	91 05       	cpc	r25, r1
    228e:	09 f4       	brne	.+2      	; 0x2292 <SevenSegment_voidDisplay+0x10e>
    2290:	9b c0       	rjmp	.+310    	; 0x23c8 <SevenSegment_voidDisplay+0x244>
    2292:	2b 81       	ldd	r18, Y+3	; 0x03
    2294:	3c 81       	ldd	r19, Y+4	; 0x04
    2296:	25 30       	cpi	r18, 0x05	; 5
    2298:	31 05       	cpc	r19, r1
    229a:	ec f4       	brge	.+58     	; 0x22d6 <SevenSegment_voidDisplay+0x152>
    229c:	8b 81       	ldd	r24, Y+3	; 0x03
    229e:	9c 81       	ldd	r25, Y+4	; 0x04
    22a0:	81 30       	cpi	r24, 0x01	; 1
    22a2:	91 05       	cpc	r25, r1
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <SevenSegment_voidDisplay+0x124>
    22a6:	51 c0       	rjmp	.+162    	; 0x234a <SevenSegment_voidDisplay+0x1c6>
    22a8:	2b 81       	ldd	r18, Y+3	; 0x03
    22aa:	3c 81       	ldd	r19, Y+4	; 0x04
    22ac:	22 30       	cpi	r18, 0x02	; 2
    22ae:	31 05       	cpc	r19, r1
    22b0:	2c f4       	brge	.+10     	; 0x22bc <SevenSegment_voidDisplay+0x138>
    22b2:	8b 81       	ldd	r24, Y+3	; 0x03
    22b4:	9c 81       	ldd	r25, Y+4	; 0x04
    22b6:	00 97       	sbiw	r24, 0x00	; 0
    22b8:	99 f1       	breq	.+102    	; 0x2320 <SevenSegment_voidDisplay+0x19c>
    22ba:	03 c1       	rjmp	.+518    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
    22bc:	2b 81       	ldd	r18, Y+3	; 0x03
    22be:	3c 81       	ldd	r19, Y+4	; 0x04
    22c0:	22 30       	cpi	r18, 0x02	; 2
    22c2:	31 05       	cpc	r19, r1
    22c4:	09 f4       	brne	.+2      	; 0x22c8 <SevenSegment_voidDisplay+0x144>
    22c6:	56 c0       	rjmp	.+172    	; 0x2374 <SevenSegment_voidDisplay+0x1f0>
    22c8:	8b 81       	ldd	r24, Y+3	; 0x03
    22ca:	9c 81       	ldd	r25, Y+4	; 0x04
    22cc:	83 30       	cpi	r24, 0x03	; 3
    22ce:	91 05       	cpc	r25, r1
    22d0:	09 f4       	brne	.+2      	; 0x22d4 <SevenSegment_voidDisplay+0x150>
    22d2:	65 c0       	rjmp	.+202    	; 0x239e <SevenSegment_voidDisplay+0x21a>
    22d4:	f6 c0       	rjmp	.+492    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
    22d6:	2b 81       	ldd	r18, Y+3	; 0x03
    22d8:	3c 81       	ldd	r19, Y+4	; 0x04
    22da:	27 30       	cpi	r18, 0x07	; 7
    22dc:	31 05       	cpc	r19, r1
    22de:	09 f4       	brne	.+2      	; 0x22e2 <SevenSegment_voidDisplay+0x15e>
    22e0:	b2 c0       	rjmp	.+356    	; 0x2446 <SevenSegment_voidDisplay+0x2c2>
    22e2:	8b 81       	ldd	r24, Y+3	; 0x03
    22e4:	9c 81       	ldd	r25, Y+4	; 0x04
    22e6:	88 30       	cpi	r24, 0x08	; 8
    22e8:	91 05       	cpc	r25, r1
    22ea:	6c f4       	brge	.+26     	; 0x2306 <SevenSegment_voidDisplay+0x182>
    22ec:	2b 81       	ldd	r18, Y+3	; 0x03
    22ee:	3c 81       	ldd	r19, Y+4	; 0x04
    22f0:	25 30       	cpi	r18, 0x05	; 5
    22f2:	31 05       	cpc	r19, r1
    22f4:	09 f4       	brne	.+2      	; 0x22f8 <SevenSegment_voidDisplay+0x174>
    22f6:	7d c0       	rjmp	.+250    	; 0x23f2 <SevenSegment_voidDisplay+0x26e>
    22f8:	8b 81       	ldd	r24, Y+3	; 0x03
    22fa:	9c 81       	ldd	r25, Y+4	; 0x04
    22fc:	86 30       	cpi	r24, 0x06	; 6
    22fe:	91 05       	cpc	r25, r1
    2300:	09 f4       	brne	.+2      	; 0x2304 <SevenSegment_voidDisplay+0x180>
    2302:	8c c0       	rjmp	.+280    	; 0x241c <SevenSegment_voidDisplay+0x298>
    2304:	de c0       	rjmp	.+444    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
    2306:	2b 81       	ldd	r18, Y+3	; 0x03
    2308:	3c 81       	ldd	r19, Y+4	; 0x04
    230a:	28 30       	cpi	r18, 0x08	; 8
    230c:	31 05       	cpc	r19, r1
    230e:	09 f4       	brne	.+2      	; 0x2312 <SevenSegment_voidDisplay+0x18e>
    2310:	af c0       	rjmp	.+350    	; 0x2470 <SevenSegment_voidDisplay+0x2ec>
    2312:	8b 81       	ldd	r24, Y+3	; 0x03
    2314:	9c 81       	ldd	r25, Y+4	; 0x04
    2316:	89 30       	cpi	r24, 0x09	; 9
    2318:	91 05       	cpc	r25, r1
    231a:	09 f4       	brne	.+2      	; 0x231e <SevenSegment_voidDisplay+0x19a>
    231c:	be c0       	rjmp	.+380    	; 0x249a <SevenSegment_voidDisplay+0x316>
    231e:	d1 c0       	rjmp	.+418    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
			{
				case 0:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,LOW);
    2320:	81 e0       	ldi	r24, 0x01	; 1
    2322:	60 e0       	ldi	r22, 0x00	; 0
    2324:	40 e0       	ldi	r20, 0x00	; 0
    2326:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,LOW);
    232a:	81 e0       	ldi	r24, 0x01	; 1
    232c:	61 e0       	ldi	r22, 0x01	; 1
    232e:	40 e0       	ldi	r20, 0x00	; 0
    2330:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,LOW);
    2334:	81 e0       	ldi	r24, 0x01	; 1
    2336:	62 e0       	ldi	r22, 0x02	; 2
    2338:	40 e0       	ldi	r20, 0x00	; 0
    233a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    233e:	81 e0       	ldi	r24, 0x01	; 1
    2340:	64 e0       	ldi	r22, 0x04	; 4
    2342:	40 e0       	ldi	r20, 0x00	; 0
    2344:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    2348:	bc c0       	rjmp	.+376    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 1:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,HIGH);
    234a:	81 e0       	ldi	r24, 0x01	; 1
    234c:	60 e0       	ldi	r22, 0x00	; 0
    234e:	41 e0       	ldi	r20, 0x01	; 1
    2350:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,LOW);
    2354:	81 e0       	ldi	r24, 0x01	; 1
    2356:	61 e0       	ldi	r22, 0x01	; 1
    2358:	40 e0       	ldi	r20, 0x00	; 0
    235a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,LOW);
    235e:	81 e0       	ldi	r24, 0x01	; 1
    2360:	62 e0       	ldi	r22, 0x02	; 2
    2362:	40 e0       	ldi	r20, 0x00	; 0
    2364:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	64 e0       	ldi	r22, 0x04	; 4
    236c:	40 e0       	ldi	r20, 0x00	; 0
    236e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    2372:	a7 c0       	rjmp	.+334    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 2:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,LOW);
    2374:	81 e0       	ldi	r24, 0x01	; 1
    2376:	60 e0       	ldi	r22, 0x00	; 0
    2378:	40 e0       	ldi	r20, 0x00	; 0
    237a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,HIGH);
    237e:	81 e0       	ldi	r24, 0x01	; 1
    2380:	61 e0       	ldi	r22, 0x01	; 1
    2382:	41 e0       	ldi	r20, 0x01	; 1
    2384:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,LOW);
    2388:	81 e0       	ldi	r24, 0x01	; 1
    238a:	62 e0       	ldi	r22, 0x02	; 2
    238c:	40 e0       	ldi	r20, 0x00	; 0
    238e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	64 e0       	ldi	r22, 0x04	; 4
    2396:	40 e0       	ldi	r20, 0x00	; 0
    2398:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    239c:	92 c0       	rjmp	.+292    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 3:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,HIGH);
    239e:	81 e0       	ldi	r24, 0x01	; 1
    23a0:	60 e0       	ldi	r22, 0x00	; 0
    23a2:	41 e0       	ldi	r20, 0x01	; 1
    23a4:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,HIGH);
    23a8:	81 e0       	ldi	r24, 0x01	; 1
    23aa:	61 e0       	ldi	r22, 0x01	; 1
    23ac:	41 e0       	ldi	r20, 0x01	; 1
    23ae:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,LOW);
    23b2:	81 e0       	ldi	r24, 0x01	; 1
    23b4:	62 e0       	ldi	r22, 0x02	; 2
    23b6:	40 e0       	ldi	r20, 0x00	; 0
    23b8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	64 e0       	ldi	r22, 0x04	; 4
    23c0:	40 e0       	ldi	r20, 0x00	; 0
    23c2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    23c6:	7d c0       	rjmp	.+250    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 4:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,LOW);
    23c8:	81 e0       	ldi	r24, 0x01	; 1
    23ca:	60 e0       	ldi	r22, 0x00	; 0
    23cc:	40 e0       	ldi	r20, 0x00	; 0
    23ce:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,LOW);
    23d2:	81 e0       	ldi	r24, 0x01	; 1
    23d4:	61 e0       	ldi	r22, 0x01	; 1
    23d6:	40 e0       	ldi	r20, 0x00	; 0
    23d8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,HIGH);
    23dc:	81 e0       	ldi	r24, 0x01	; 1
    23de:	62 e0       	ldi	r22, 0x02	; 2
    23e0:	41 e0       	ldi	r20, 0x01	; 1
    23e2:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    23e6:	81 e0       	ldi	r24, 0x01	; 1
    23e8:	64 e0       	ldi	r22, 0x04	; 4
    23ea:	40 e0       	ldi	r20, 0x00	; 0
    23ec:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    23f0:	68 c0       	rjmp	.+208    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 5:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,HIGH);
    23f2:	81 e0       	ldi	r24, 0x01	; 1
    23f4:	60 e0       	ldi	r22, 0x00	; 0
    23f6:	41 e0       	ldi	r20, 0x01	; 1
    23f8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,LOW);
    23fc:	81 e0       	ldi	r24, 0x01	; 1
    23fe:	61 e0       	ldi	r22, 0x01	; 1
    2400:	40 e0       	ldi	r20, 0x00	; 0
    2402:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,HIGH);
    2406:	81 e0       	ldi	r24, 0x01	; 1
    2408:	62 e0       	ldi	r22, 0x02	; 2
    240a:	41 e0       	ldi	r20, 0x01	; 1
    240c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    2410:	81 e0       	ldi	r24, 0x01	; 1
    2412:	64 e0       	ldi	r22, 0x04	; 4
    2414:	40 e0       	ldi	r20, 0x00	; 0
    2416:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    241a:	53 c0       	rjmp	.+166    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 6:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,LOW);
    241c:	81 e0       	ldi	r24, 0x01	; 1
    241e:	60 e0       	ldi	r22, 0x00	; 0
    2420:	40 e0       	ldi	r20, 0x00	; 0
    2422:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,HIGH);
    2426:	81 e0       	ldi	r24, 0x01	; 1
    2428:	61 e0       	ldi	r22, 0x01	; 1
    242a:	41 e0       	ldi	r20, 0x01	; 1
    242c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,HIGH);
    2430:	81 e0       	ldi	r24, 0x01	; 1
    2432:	62 e0       	ldi	r22, 0x02	; 2
    2434:	41 e0       	ldi	r20, 0x01	; 1
    2436:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    243a:	81 e0       	ldi	r24, 0x01	; 1
    243c:	64 e0       	ldi	r22, 0x04	; 4
    243e:	40 e0       	ldi	r20, 0x00	; 0
    2440:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    2444:	3e c0       	rjmp	.+124    	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 7:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,HIGH);
    2446:	81 e0       	ldi	r24, 0x01	; 1
    2448:	60 e0       	ldi	r22, 0x00	; 0
    244a:	41 e0       	ldi	r20, 0x01	; 1
    244c:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,HIGH);
    2450:	81 e0       	ldi	r24, 0x01	; 1
    2452:	61 e0       	ldi	r22, 0x01	; 1
    2454:	41 e0       	ldi	r20, 0x01	; 1
    2456:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,HIGH);
    245a:	81 e0       	ldi	r24, 0x01	; 1
    245c:	62 e0       	ldi	r22, 0x02	; 2
    245e:	41 e0       	ldi	r20, 0x01	; 1
    2460:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,LOW);
    2464:	81 e0       	ldi	r24, 0x01	; 1
    2466:	64 e0       	ldi	r22, 0x04	; 4
    2468:	40 e0       	ldi	r20, 0x00	; 0
    246a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    246e:	29 c0       	rjmp	.+82     	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 8:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,LOW);
    2470:	81 e0       	ldi	r24, 0x01	; 1
    2472:	60 e0       	ldi	r22, 0x00	; 0
    2474:	40 e0       	ldi	r20, 0x00	; 0
    2476:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,LOW);
    247a:	81 e0       	ldi	r24, 0x01	; 1
    247c:	61 e0       	ldi	r22, 0x01	; 1
    247e:	40 e0       	ldi	r20, 0x00	; 0
    2480:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,LOW);
    2484:	81 e0       	ldi	r24, 0x01	; 1
    2486:	62 e0       	ldi	r22, 0x02	; 2
    2488:	40 e0       	ldi	r20, 0x00	; 0
    248a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,HIGH);
    248e:	81 e0       	ldi	r24, 0x01	; 1
    2490:	64 e0       	ldi	r22, 0x04	; 4
    2492:	41 e0       	ldi	r20, 0x01	; 1
    2494:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
    2498:	14 c0       	rjmp	.+40     	; 0x24c2 <SevenSegment_voidDisplay+0x33e>
						break;
				case 9:
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN0,HIGH);
    249a:	81 e0       	ldi	r24, 0x01	; 1
    249c:	60 e0       	ldi	r22, 0x00	; 0
    249e:	41 e0       	ldi	r20, 0x01	; 1
    24a0:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN1,LOW);
    24a4:	81 e0       	ldi	r24, 0x01	; 1
    24a6:	61 e0       	ldi	r22, 0x01	; 1
    24a8:	40 e0       	ldi	r20, 0x00	; 0
    24aa:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN2,LOW);
    24ae:	81 e0       	ldi	r24, 0x01	; 1
    24b0:	62 e0       	ldi	r22, 0x02	; 2
    24b2:	40 e0       	ldi	r20, 0x00	; 0
    24b4:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						DIO_voidSetPinValue(SEVEN_SEGMENT_PORT,SEVEN_SEGMENT_PIN3,HIGH);
    24b8:	81 e0       	ldi	r24, 0x01	; 1
    24ba:	64 e0       	ldi	r22, 0x04	; 4
    24bc:	41 e0       	ldi	r20, 0x01	; 1
    24be:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
						break;
			}
}
    24c2:	26 96       	adiw	r28, 0x06	; 6
    24c4:	0f b6       	in	r0, 0x3f	; 63
    24c6:	f8 94       	cli
    24c8:	de bf       	out	0x3e, r29	; 62
    24ca:	0f be       	out	0x3f, r0	; 63
    24cc:	cd bf       	out	0x3d, r28	; 61
    24ce:	cf 91       	pop	r28
    24d0:	df 91       	pop	r29
    24d2:	08 95       	ret

000024d4 <KeyPad_Init>:
					KeyPad_PIN_R4
				};
				
				
void KeyPad_Init(void)
{
    24d4:	df 93       	push	r29
    24d6:	cf 93       	push	r28
    24d8:	cd b7       	in	r28, 0x3d	; 61
    24da:	de b7       	in	r29, 0x3e	; 62
		/* SET Rows as Input */
		DIO_voidSetPinDirection(KeyPad_PIN_R4,INPUT);
    24dc:	82 e0       	ldi	r24, 0x02	; 2
    24de:	65 e0       	ldi	r22, 0x05	; 5
    24e0:	40 e0       	ldi	r20, 0x00	; 0
    24e2:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(KeyPad_PIN_R3,INPUT);
    24e6:	82 e0       	ldi	r24, 0x02	; 2
    24e8:	64 e0       	ldi	r22, 0x04	; 4
    24ea:	40 e0       	ldi	r20, 0x00	; 0
    24ec:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(KeyPad_PIN_R2,INPUT);
    24f0:	82 e0       	ldi	r24, 0x02	; 2
    24f2:	63 e0       	ldi	r22, 0x03	; 3
    24f4:	40 e0       	ldi	r20, 0x00	; 0
    24f6:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(KeyPad_PIN_R1,INPUT);
    24fa:	82 e0       	ldi	r24, 0x02	; 2
    24fc:	62 e0       	ldi	r22, 0x02	; 2
    24fe:	40 e0       	ldi	r20, 0x00	; 0
    2500:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>

		DIO_voidSetPinValue(KeyPad_PIN_R4,HIGH);
    2504:	82 e0       	ldi	r24, 0x02	; 2
    2506:	65 e0       	ldi	r22, 0x05	; 5
    2508:	41 e0       	ldi	r20, 0x01	; 1
    250a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(KeyPad_PIN_R3,HIGH);
    250e:	82 e0       	ldi	r24, 0x02	; 2
    2510:	64 e0       	ldi	r22, 0x04	; 4
    2512:	41 e0       	ldi	r20, 0x01	; 1
    2514:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(KeyPad_PIN_R2,HIGH);
    2518:	82 e0       	ldi	r24, 0x02	; 2
    251a:	63 e0       	ldi	r22, 0x03	; 3
    251c:	41 e0       	ldi	r20, 0x01	; 1
    251e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(KeyPad_PIN_R1,HIGH);
    2522:	82 e0       	ldi	r24, 0x02	; 2
    2524:	62 e0       	ldi	r22, 0x02	; 2
    2526:	41 e0       	ldi	r20, 0x01	; 1
    2528:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>

		/* Set Cols as Output */
		DIO_voidSetPinDirection(KeyPad_PIN_C1,OUTPUT);
    252c:	83 e0       	ldi	r24, 0x03	; 3
    252e:	67 e0       	ldi	r22, 0x07	; 7
    2530:	41 e0       	ldi	r20, 0x01	; 1
    2532:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(KeyPad_PIN_C2,OUTPUT);
    2536:	83 e0       	ldi	r24, 0x03	; 3
    2538:	66 e0       	ldi	r22, 0x06	; 6
    253a:	41 e0       	ldi	r20, 0x01	; 1
    253c:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(KeyPad_PIN_C3,OUTPUT);
    2540:	83 e0       	ldi	r24, 0x03	; 3
    2542:	65 e0       	ldi	r22, 0x05	; 5
    2544:	41 e0       	ldi	r20, 0x01	; 1
    2546:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(KeyPad_PIN_C4,OUTPUT);
    254a:	83 e0       	ldi	r24, 0x03	; 3
    254c:	63 e0       	ldi	r22, 0x03	; 3
    254e:	41 e0       	ldi	r20, 0x01	; 1
    2550:	0e 94 a3 05 	call	0xb46	; 0xb46 <DIO_voidSetPinDirection>

		/* Set Col = 1 */
		DIO_voidSetPinValue(KeyPad_PIN_C1,HIGH);
    2554:	83 e0       	ldi	r24, 0x03	; 3
    2556:	67 e0       	ldi	r22, 0x07	; 7
    2558:	41 e0       	ldi	r20, 0x01	; 1
    255a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(KeyPad_PIN_C2,HIGH);
    255e:	83 e0       	ldi	r24, 0x03	; 3
    2560:	66 e0       	ldi	r22, 0x06	; 6
    2562:	41 e0       	ldi	r20, 0x01	; 1
    2564:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(KeyPad_PIN_C3,HIGH);
    2568:	83 e0       	ldi	r24, 0x03	; 3
    256a:	65 e0       	ldi	r22, 0x05	; 5
    256c:	41 e0       	ldi	r20, 0x01	; 1
    256e:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		DIO_voidSetPinValue(KeyPad_PIN_C4,HIGH);
    2572:	83 e0       	ldi	r24, 0x03	; 3
    2574:	63 e0       	ldi	r22, 0x03	; 3
    2576:	41 e0       	ldi	r20, 0x01	; 1
    2578:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		
}
    257c:	cf 91       	pop	r28
    257e:	df 91       	pop	r29
    2580:	08 95       	ret

00002582 <KeyPad_u8GetKey>:



u8 KeyPad_u8GetKey(void)
{
    2582:	df 93       	push	r29
    2584:	cf 93       	push	r28
    2586:	00 d0       	rcall	.+0      	; 0x2588 <KeyPad_u8GetKey+0x6>
    2588:	00 d0       	rcall	.+0      	; 0x258a <KeyPad_u8GetKey+0x8>
    258a:	0f 92       	push	r0
    258c:	cd b7       	in	r28, 0x3d	; 61
    258e:	de b7       	in	r29, 0x3e	; 62
	volatile static u8 Localu8PressedKey = 0;
	u8 Col,Row;
	for(Col=0;Col<8;Col+=2)
    2590:	1a 82       	std	Y+2, r1	; 0x02
    2592:	80 c0       	rjmp	.+256    	; 0x2694 <KeyPad_u8GetKey+0x112>
	{
		/* Activate Col */
		DIO_voidSetPinValue(Col_Arr[Col],Col_Arr[Col+1],LOW);
    2594:	8a 81       	ldd	r24, Y+2	; 0x02
    2596:	88 2f       	mov	r24, r24
    2598:	90 e0       	ldi	r25, 0x00	; 0
    259a:	fc 01       	movw	r30, r24
    259c:	e8 59       	subi	r30, 0x98	; 152
    259e:	ff 4f       	sbci	r31, 0xFF	; 255
    25a0:	20 81       	ld	r18, Z
    25a2:	8a 81       	ldd	r24, Y+2	; 0x02
    25a4:	88 2f       	mov	r24, r24
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	01 96       	adiw	r24, 0x01	; 1
    25aa:	fc 01       	movw	r30, r24
    25ac:	e8 59       	subi	r30, 0x98	; 152
    25ae:	ff 4f       	sbci	r31, 0xFF	; 255
    25b0:	90 81       	ld	r25, Z
    25b2:	82 2f       	mov	r24, r18
    25b4:	69 2f       	mov	r22, r25
    25b6:	40 e0       	ldi	r20, 0x00	; 0
    25b8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>
		for(Row=0 ; Row<8 ; Row+=2)
    25bc:	19 82       	std	Y+1, r1	; 0x01
    25be:	4f c0       	rjmp	.+158    	; 0x265e <KeyPad_u8GetKey+0xdc>
		{
			if(DIO_voidGetPinValue(Row_Arr[Row],Row_Arr[Row+1]) == 0)
    25c0:	89 81       	ldd	r24, Y+1	; 0x01
    25c2:	88 2f       	mov	r24, r24
    25c4:	90 e0       	ldi	r25, 0x00	; 0
    25c6:	fc 01       	movw	r30, r24
    25c8:	e0 59       	subi	r30, 0x90	; 144
    25ca:	ff 4f       	sbci	r31, 0xFF	; 255
    25cc:	20 81       	ld	r18, Z
    25ce:	89 81       	ldd	r24, Y+1	; 0x01
    25d0:	88 2f       	mov	r24, r24
    25d2:	90 e0       	ldi	r25, 0x00	; 0
    25d4:	01 96       	adiw	r24, 0x01	; 1
    25d6:	fc 01       	movw	r30, r24
    25d8:	e0 59       	subi	r30, 0x90	; 144
    25da:	ff 4f       	sbci	r31, 0xFF	; 255
    25dc:	90 81       	ld	r25, Z
    25de:	82 2f       	mov	r24, r18
    25e0:	69 2f       	mov	r22, r25
    25e2:	0e 94 19 0b 	call	0x1632	; 0x1632 <DIO_voidGetPinValue>
    25e6:	88 23       	and	r24, r24
    25e8:	b9 f5       	brne	.+110    	; 0x2658 <KeyPad_u8GetKey+0xd6>
			{
				/* Key is pressed */
				Localu8PressedKey = (Row*4 + Col)/2;
    25ea:	89 81       	ldd	r24, Y+1	; 0x01
    25ec:	88 2f       	mov	r24, r24
    25ee:	90 e0       	ldi	r25, 0x00	; 0
    25f0:	9c 01       	movw	r18, r24
    25f2:	22 0f       	add	r18, r18
    25f4:	33 1f       	adc	r19, r19
    25f6:	22 0f       	add	r18, r18
    25f8:	33 1f       	adc	r19, r19
    25fa:	8a 81       	ldd	r24, Y+2	; 0x02
    25fc:	88 2f       	mov	r24, r24
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	82 0f       	add	r24, r18
    2602:	93 1f       	adc	r25, r19
    2604:	9d 83       	std	Y+5, r25	; 0x05
    2606:	8c 83       	std	Y+4, r24	; 0x04
    2608:	8c 81       	ldd	r24, Y+4	; 0x04
    260a:	9d 81       	ldd	r25, Y+5	; 0x05
    260c:	99 23       	and	r25, r25
    260e:	2c f4       	brge	.+10     	; 0x261a <KeyPad_u8GetKey+0x98>
    2610:	8c 81       	ldd	r24, Y+4	; 0x04
    2612:	9d 81       	ldd	r25, Y+5	; 0x05
    2614:	01 96       	adiw	r24, 0x01	; 1
    2616:	9d 83       	std	Y+5, r25	; 0x05
    2618:	8c 83       	std	Y+4, r24	; 0x04
    261a:	8c 81       	ldd	r24, Y+4	; 0x04
    261c:	9d 81       	ldd	r25, Y+5	; 0x05
    261e:	95 95       	asr	r25
    2620:	87 95       	ror	r24
    2622:	80 93 78 00 	sts	0x0078, r24
				while(DIO_voidGetPinValue(Row_Arr[Row],Row_Arr[Row+1]) == 0);
    2626:	89 81       	ldd	r24, Y+1	; 0x01
    2628:	88 2f       	mov	r24, r24
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	fc 01       	movw	r30, r24
    262e:	e0 59       	subi	r30, 0x90	; 144
    2630:	ff 4f       	sbci	r31, 0xFF	; 255
    2632:	20 81       	ld	r18, Z
    2634:	89 81       	ldd	r24, Y+1	; 0x01
    2636:	88 2f       	mov	r24, r24
    2638:	90 e0       	ldi	r25, 0x00	; 0
    263a:	01 96       	adiw	r24, 0x01	; 1
    263c:	fc 01       	movw	r30, r24
    263e:	e0 59       	subi	r30, 0x90	; 144
    2640:	ff 4f       	sbci	r31, 0xFF	; 255
    2642:	90 81       	ld	r25, Z
    2644:	82 2f       	mov	r24, r18
    2646:	69 2f       	mov	r22, r25
    2648:	0e 94 19 0b 	call	0x1632	; 0x1632 <DIO_voidGetPinValue>
    264c:	88 23       	and	r24, r24
    264e:	59 f3       	breq	.-42     	; 0x2626 <KeyPad_u8GetKey+0xa4>
				return Localu8PressedKey ;// or break;
    2650:	90 91 78 00 	lds	r25, 0x0078
    2654:	9b 83       	std	Y+3, r25	; 0x03
    2656:	25 c0       	rjmp	.+74     	; 0x26a2 <KeyPad_u8GetKey+0x120>
	u8 Col,Row;
	for(Col=0;Col<8;Col+=2)
	{
		/* Activate Col */
		DIO_voidSetPinValue(Col_Arr[Col],Col_Arr[Col+1],LOW);
		for(Row=0 ; Row<8 ; Row+=2)
    2658:	89 81       	ldd	r24, Y+1	; 0x01
    265a:	8e 5f       	subi	r24, 0xFE	; 254
    265c:	89 83       	std	Y+1, r24	; 0x01
    265e:	89 81       	ldd	r24, Y+1	; 0x01
    2660:	88 30       	cpi	r24, 0x08	; 8
    2662:	08 f4       	brcc	.+2      	; 0x2666 <KeyPad_u8GetKey+0xe4>
    2664:	ad cf       	rjmp	.-166    	; 0x25c0 <KeyPad_u8GetKey+0x3e>
			else
			{
				/* Switch is not pressed */
			}
		}
		DIO_voidSetPinValue(Col_Arr[Col],Col_Arr[Col+1],HIGH);
    2666:	8a 81       	ldd	r24, Y+2	; 0x02
    2668:	88 2f       	mov	r24, r24
    266a:	90 e0       	ldi	r25, 0x00	; 0
    266c:	fc 01       	movw	r30, r24
    266e:	e8 59       	subi	r30, 0x98	; 152
    2670:	ff 4f       	sbci	r31, 0xFF	; 255
    2672:	20 81       	ld	r18, Z
    2674:	8a 81       	ldd	r24, Y+2	; 0x02
    2676:	88 2f       	mov	r24, r24
    2678:	90 e0       	ldi	r25, 0x00	; 0
    267a:	01 96       	adiw	r24, 0x01	; 1
    267c:	fc 01       	movw	r30, r24
    267e:	e8 59       	subi	r30, 0x98	; 152
    2680:	ff 4f       	sbci	r31, 0xFF	; 255
    2682:	90 81       	ld	r25, Z
    2684:	82 2f       	mov	r24, r18
    2686:	69 2f       	mov	r22, r25
    2688:	41 e0       	ldi	r20, 0x01	; 1
    268a:	0e 94 5e 08 	call	0x10bc	; 0x10bc <DIO_voidSetPinValue>

u8 KeyPad_u8GetKey(void)
{
	volatile static u8 Localu8PressedKey = 0;
	u8 Col,Row;
	for(Col=0;Col<8;Col+=2)
    268e:	8a 81       	ldd	r24, Y+2	; 0x02
    2690:	8e 5f       	subi	r24, 0xFE	; 254
    2692:	8a 83       	std	Y+2, r24	; 0x02
    2694:	8a 81       	ldd	r24, Y+2	; 0x02
    2696:	88 30       	cpi	r24, 0x08	; 8
    2698:	08 f4       	brcc	.+2      	; 0x269c <KeyPad_u8GetKey+0x11a>
    269a:	7c cf       	rjmp	.-264    	; 0x2594 <KeyPad_u8GetKey+0x12>
				/* Switch is not pressed */
			}
		}
		DIO_voidSetPinValue(Col_Arr[Col],Col_Arr[Col+1],HIGH);
	}
	return Localu8PressedKey;
    269c:	80 91 78 00 	lds	r24, 0x0078
    26a0:	8b 83       	std	Y+3, r24	; 0x03
    26a2:	8b 81       	ldd	r24, Y+3	; 0x03
}
    26a4:	0f 90       	pop	r0
    26a6:	0f 90       	pop	r0
    26a8:	0f 90       	pop	r0
    26aa:	0f 90       	pop	r0
    26ac:	0f 90       	pop	r0
    26ae:	cf 91       	pop	r28
    26b0:	df 91       	pop	r29
    26b2:	08 95       	ret

000026b4 <main>:
#include "../inc/keypad_interface.h"

#include  <avr/delay.h>

int main()
{
    26b4:	df 93       	push	r29
    26b6:	cf 93       	push	r28
    26b8:	00 d0       	rcall	.+0      	; 0x26ba <main+0x6>
    26ba:	cd b7       	in	r28, 0x3d	; 61
    26bc:	de b7       	in	r29, 0x3e	; 62
	SevenSegment_Init();
    26be:	0e 94 37 0e 	call	0x1c6e	; 0x1c6e <SevenSegment_Init>
	KeyPad_Init();
    26c2:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <KeyPad_Init>

	u16 SevenSegment_Number = 0;
    26c6:	1a 82       	std	Y+2, r1	; 0x02
    26c8:	19 82       	std	Y+1, r1	; 0x01

	while(1)
	{
		SevenSegment_Number = KeyPad_u8GetKey();
    26ca:	0e 94 c1 12 	call	0x2582	; 0x2582 <KeyPad_u8GetKey>
    26ce:	88 2f       	mov	r24, r24
    26d0:	90 e0       	ldi	r25, 0x00	; 0
    26d2:	9a 83       	std	Y+2, r25	; 0x02
    26d4:	89 83       	std	Y+1, r24	; 0x01
		SevenSegment_voidDisplay_ALL(SevenSegment_Number);
    26d6:	89 81       	ldd	r24, Y+1	; 0x01
    26d8:	9a 81       	ldd	r25, Y+2	; 0x02
    26da:	0e 94 7a 0e 	call	0x1cf4	; 0x1cf4 <SevenSegment_voidDisplay_ALL>
    26de:	f5 cf       	rjmp	.-22     	; 0x26ca <main+0x16>

000026e0 <__udivmodhi4>:
    26e0:	aa 1b       	sub	r26, r26
    26e2:	bb 1b       	sub	r27, r27
    26e4:	51 e1       	ldi	r21, 0x11	; 17
    26e6:	07 c0       	rjmp	.+14     	; 0x26f6 <__udivmodhi4_ep>

000026e8 <__udivmodhi4_loop>:
    26e8:	aa 1f       	adc	r26, r26
    26ea:	bb 1f       	adc	r27, r27
    26ec:	a6 17       	cp	r26, r22
    26ee:	b7 07       	cpc	r27, r23
    26f0:	10 f0       	brcs	.+4      	; 0x26f6 <__udivmodhi4_ep>
    26f2:	a6 1b       	sub	r26, r22
    26f4:	b7 0b       	sbc	r27, r23

000026f6 <__udivmodhi4_ep>:
    26f6:	88 1f       	adc	r24, r24
    26f8:	99 1f       	adc	r25, r25
    26fa:	5a 95       	dec	r21
    26fc:	a9 f7       	brne	.-22     	; 0x26e8 <__udivmodhi4_loop>
    26fe:	80 95       	com	r24
    2700:	90 95       	com	r25
    2702:	bc 01       	movw	r22, r24
    2704:	cd 01       	movw	r24, r26
    2706:	08 95       	ret

00002708 <__prologue_saves__>:
    2708:	2f 92       	push	r2
    270a:	3f 92       	push	r3
    270c:	4f 92       	push	r4
    270e:	5f 92       	push	r5
    2710:	6f 92       	push	r6
    2712:	7f 92       	push	r7
    2714:	8f 92       	push	r8
    2716:	9f 92       	push	r9
    2718:	af 92       	push	r10
    271a:	bf 92       	push	r11
    271c:	cf 92       	push	r12
    271e:	df 92       	push	r13
    2720:	ef 92       	push	r14
    2722:	ff 92       	push	r15
    2724:	0f 93       	push	r16
    2726:	1f 93       	push	r17
    2728:	cf 93       	push	r28
    272a:	df 93       	push	r29
    272c:	cd b7       	in	r28, 0x3d	; 61
    272e:	de b7       	in	r29, 0x3e	; 62
    2730:	ca 1b       	sub	r28, r26
    2732:	db 0b       	sbc	r29, r27
    2734:	0f b6       	in	r0, 0x3f	; 63
    2736:	f8 94       	cli
    2738:	de bf       	out	0x3e, r29	; 62
    273a:	0f be       	out	0x3f, r0	; 63
    273c:	cd bf       	out	0x3d, r28	; 61
    273e:	09 94       	ijmp

00002740 <__epilogue_restores__>:
    2740:	2a 88       	ldd	r2, Y+18	; 0x12
    2742:	39 88       	ldd	r3, Y+17	; 0x11
    2744:	48 88       	ldd	r4, Y+16	; 0x10
    2746:	5f 84       	ldd	r5, Y+15	; 0x0f
    2748:	6e 84       	ldd	r6, Y+14	; 0x0e
    274a:	7d 84       	ldd	r7, Y+13	; 0x0d
    274c:	8c 84       	ldd	r8, Y+12	; 0x0c
    274e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2750:	aa 84       	ldd	r10, Y+10	; 0x0a
    2752:	b9 84       	ldd	r11, Y+9	; 0x09
    2754:	c8 84       	ldd	r12, Y+8	; 0x08
    2756:	df 80       	ldd	r13, Y+7	; 0x07
    2758:	ee 80       	ldd	r14, Y+6	; 0x06
    275a:	fd 80       	ldd	r15, Y+5	; 0x05
    275c:	0c 81       	ldd	r16, Y+4	; 0x04
    275e:	1b 81       	ldd	r17, Y+3	; 0x03
    2760:	aa 81       	ldd	r26, Y+2	; 0x02
    2762:	b9 81       	ldd	r27, Y+1	; 0x01
    2764:	ce 0f       	add	r28, r30
    2766:	d1 1d       	adc	r29, r1
    2768:	0f b6       	in	r0, 0x3f	; 63
    276a:	f8 94       	cli
    276c:	de bf       	out	0x3e, r29	; 62
    276e:	0f be       	out	0x3f, r0	; 63
    2770:	cd bf       	out	0x3d, r28	; 61
    2772:	ed 01       	movw	r28, r26
    2774:	08 95       	ret

00002776 <_exit>:
    2776:	f8 94       	cli

00002778 <__stop_program>:
    2778:	ff cf       	rjmp	.-2      	; 0x2778 <__stop_program>
